//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace QuickInterface {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DBABnch_LOCALDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DBABnch_LOCALDataSet : global::System.Data.DataSet {
        
        private ClientsDataTable tableClients;
        
        private DatabasesDataTable tableDatabases;
        
        private DomainsDataTable tableDomains;
        
        private ServerAliasesDataTable tableServerAliases;
        
        private ServersDataTable tableServers;
        
        private UsersDataTable tableUsers;
        
        private TicketsDataTable tableTickets;
        
        private TicketsOverMidMonthDataTable tableTicketsOverMidMonth;
        
        private sp_who3DataTable tablesp_who3;
        
        private global::System.Data.DataRelation relationFK_Client_CreatedBy_User;
        
        private global::System.Data.DataRelation relationFK_Client_Of_ParentClient;
        
        private global::System.Data.DataRelation relationFK_Client_TestedButNoChangeBy_User;
        
        private global::System.Data.DataRelation relationFK_Client_UpdatedBy_User;
        
        private global::System.Data.DataRelation relationFK_Domain_CreatedBy_User;
        
        private global::System.Data.DataRelation relationFK_Domain_TestedButNoChangeBy_User;
        
        private global::System.Data.DataRelation relationFK_Domain_UpdatedBy_User;
        
        private global::System.Data.DataRelation relationFK__Aliases__FoundOn__32381C97;
        
        private global::System.Data.DataRelation relationFK__Aliases__PointsT__332C40D0;
        
        private global::System.Data.DataRelation relationFK_Alias_CreatedBy_User;
        
        private global::System.Data.DataRelation relationFK_Alias_TestedButNoChangeBy_User;
        
        private global::System.Data.DataRelation relationFK_Alias_UpdatedBy_User;
        
        private global::System.Data.DataRelation relationFK__Server__FedFromS__0BE8567D;
        
        private global::System.Data.DataRelation relationFK__Server__FeedsInt__0CDC7AB6;
        
        private global::System.Data.DataRelation relationFK_DBLinkServer_OnServer;
        
        private global::System.Data.DataRelation relationFK_Server_User_Created;
        
        private global::System.Data.DataRelation relationFK_Server_User_TestButNoChange;
        
        private global::System.Data.DataRelation relationFK_Server_User_Updated;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public DBABnch_LOCALDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected DBABnch_LOCALDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Clients"] != null)) {
                    base.Tables.Add(new ClientsDataTable(ds.Tables["Clients"]));
                }
                if ((ds.Tables["Databases"] != null)) {
                    base.Tables.Add(new DatabasesDataTable(ds.Tables["Databases"]));
                }
                if ((ds.Tables["Domains"] != null)) {
                    base.Tables.Add(new DomainsDataTable(ds.Tables["Domains"]));
                }
                if ((ds.Tables["ServerAliases"] != null)) {
                    base.Tables.Add(new ServerAliasesDataTable(ds.Tables["ServerAliases"]));
                }
                if ((ds.Tables["Servers"] != null)) {
                    base.Tables.Add(new ServersDataTable(ds.Tables["Servers"]));
                }
                if ((ds.Tables["Users"] != null)) {
                    base.Tables.Add(new UsersDataTable(ds.Tables["Users"]));
                }
                if ((ds.Tables["Tickets"] != null)) {
                    base.Tables.Add(new TicketsDataTable(ds.Tables["Tickets"]));
                }
                if ((ds.Tables["TicketsOverMidMonth"] != null)) {
                    base.Tables.Add(new TicketsOverMidMonthDataTable(ds.Tables["TicketsOverMidMonth"]));
                }
                if ((ds.Tables["sp_who3"] != null)) {
                    base.Tables.Add(new sp_who3DataTable(ds.Tables["sp_who3"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ClientsDataTable Clients {
            get {
                return this.tableClients;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DatabasesDataTable Databases {
            get {
                return this.tableDatabases;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DomainsDataTable Domains {
            get {
                return this.tableDomains;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ServerAliasesDataTable ServerAliases {
            get {
                return this.tableServerAliases;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ServersDataTable Servers {
            get {
                return this.tableServers;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UsersDataTable Users {
            get {
                return this.tableUsers;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TicketsDataTable Tickets {
            get {
                return this.tableTickets;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TicketsOverMidMonthDataTable TicketsOverMidMonth {
            get {
                return this.tableTicketsOverMidMonth;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sp_who3DataTable sp_who3 {
            get {
                return this.tablesp_who3;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DBABnch_LOCALDataSet cln = ((DBABnch_LOCALDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Clients"] != null)) {
                    base.Tables.Add(new ClientsDataTable(ds.Tables["Clients"]));
                }
                if ((ds.Tables["Databases"] != null)) {
                    base.Tables.Add(new DatabasesDataTable(ds.Tables["Databases"]));
                }
                if ((ds.Tables["Domains"] != null)) {
                    base.Tables.Add(new DomainsDataTable(ds.Tables["Domains"]));
                }
                if ((ds.Tables["ServerAliases"] != null)) {
                    base.Tables.Add(new ServerAliasesDataTable(ds.Tables["ServerAliases"]));
                }
                if ((ds.Tables["Servers"] != null)) {
                    base.Tables.Add(new ServersDataTable(ds.Tables["Servers"]));
                }
                if ((ds.Tables["Users"] != null)) {
                    base.Tables.Add(new UsersDataTable(ds.Tables["Users"]));
                }
                if ((ds.Tables["Tickets"] != null)) {
                    base.Tables.Add(new TicketsDataTable(ds.Tables["Tickets"]));
                }
                if ((ds.Tables["TicketsOverMidMonth"] != null)) {
                    base.Tables.Add(new TicketsOverMidMonthDataTable(ds.Tables["TicketsOverMidMonth"]));
                }
                if ((ds.Tables["sp_who3"] != null)) {
                    base.Tables.Add(new sp_who3DataTable(ds.Tables["sp_who3"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableClients = ((ClientsDataTable)(base.Tables["Clients"]));
            if ((initTable == true)) {
                if ((this.tableClients != null)) {
                    this.tableClients.InitVars();
                }
            }
            this.tableDatabases = ((DatabasesDataTable)(base.Tables["Databases"]));
            if ((initTable == true)) {
                if ((this.tableDatabases != null)) {
                    this.tableDatabases.InitVars();
                }
            }
            this.tableDomains = ((DomainsDataTable)(base.Tables["Domains"]));
            if ((initTable == true)) {
                if ((this.tableDomains != null)) {
                    this.tableDomains.InitVars();
                }
            }
            this.tableServerAliases = ((ServerAliasesDataTable)(base.Tables["ServerAliases"]));
            if ((initTable == true)) {
                if ((this.tableServerAliases != null)) {
                    this.tableServerAliases.InitVars();
                }
            }
            this.tableServers = ((ServersDataTable)(base.Tables["Servers"]));
            if ((initTable == true)) {
                if ((this.tableServers != null)) {
                    this.tableServers.InitVars();
                }
            }
            this.tableUsers = ((UsersDataTable)(base.Tables["Users"]));
            if ((initTable == true)) {
                if ((this.tableUsers != null)) {
                    this.tableUsers.InitVars();
                }
            }
            this.tableTickets = ((TicketsDataTable)(base.Tables["Tickets"]));
            if ((initTable == true)) {
                if ((this.tableTickets != null)) {
                    this.tableTickets.InitVars();
                }
            }
            this.tableTicketsOverMidMonth = ((TicketsOverMidMonthDataTable)(base.Tables["TicketsOverMidMonth"]));
            if ((initTable == true)) {
                if ((this.tableTicketsOverMidMonth != null)) {
                    this.tableTicketsOverMidMonth.InitVars();
                }
            }
            this.tablesp_who3 = ((sp_who3DataTable)(base.Tables["sp_who3"]));
            if ((initTable == true)) {
                if ((this.tablesp_who3 != null)) {
                    this.tablesp_who3.InitVars();
                }
            }
            this.relationFK_Client_CreatedBy_User = this.Relations["FK_Client_CreatedBy_User"];
            this.relationFK_Client_Of_ParentClient = this.Relations["FK_Client_Of_ParentClient"];
            this.relationFK_Client_TestedButNoChangeBy_User = this.Relations["FK_Client_TestedButNoChangeBy_User"];
            this.relationFK_Client_UpdatedBy_User = this.Relations["FK_Client_UpdatedBy_User"];
            this.relationFK_Domain_CreatedBy_User = this.Relations["FK_Domain_CreatedBy_User"];
            this.relationFK_Domain_TestedButNoChangeBy_User = this.Relations["FK_Domain_TestedButNoChangeBy_User"];
            this.relationFK_Domain_UpdatedBy_User = this.Relations["FK_Domain_UpdatedBy_User"];
            this.relationFK__Aliases__FoundOn__32381C97 = this.Relations["FK__Aliases__FoundOn__32381C97"];
            this.relationFK__Aliases__PointsT__332C40D0 = this.Relations["FK__Aliases__PointsT__332C40D0"];
            this.relationFK_Alias_CreatedBy_User = this.Relations["FK_Alias_CreatedBy_User"];
            this.relationFK_Alias_TestedButNoChangeBy_User = this.Relations["FK_Alias_TestedButNoChangeBy_User"];
            this.relationFK_Alias_UpdatedBy_User = this.Relations["FK_Alias_UpdatedBy_User"];
            this.relationFK__Server__FedFromS__0BE8567D = this.Relations["FK__Server__FedFromS__0BE8567D"];
            this.relationFK__Server__FeedsInt__0CDC7AB6 = this.Relations["FK__Server__FeedsInt__0CDC7AB6"];
            this.relationFK_DBLinkServer_OnServer = this.Relations["FK_DBLinkServer_OnServer"];
            this.relationFK_Server_User_Created = this.Relations["FK_Server_User_Created"];
            this.relationFK_Server_User_TestButNoChange = this.Relations["FK_Server_User_TestButNoChange"];
            this.relationFK_Server_User_Updated = this.Relations["FK_Server_User_Updated"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DBABnch_LOCALDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DBABnch_LOCALDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableClients = new ClientsDataTable();
            base.Tables.Add(this.tableClients);
            this.tableDatabases = new DatabasesDataTable();
            base.Tables.Add(this.tableDatabases);
            this.tableDomains = new DomainsDataTable();
            base.Tables.Add(this.tableDomains);
            this.tableServerAliases = new ServerAliasesDataTable();
            base.Tables.Add(this.tableServerAliases);
            this.tableServers = new ServersDataTable();
            base.Tables.Add(this.tableServers);
            this.tableUsers = new UsersDataTable();
            base.Tables.Add(this.tableUsers);
            this.tableTickets = new TicketsDataTable();
            base.Tables.Add(this.tableTickets);
            this.tableTicketsOverMidMonth = new TicketsOverMidMonthDataTable();
            base.Tables.Add(this.tableTicketsOverMidMonth);
            this.tablesp_who3 = new sp_who3DataTable();
            base.Tables.Add(this.tablesp_who3);
            this.relationFK_Client_CreatedBy_User = new global::System.Data.DataRelation("FK_Client_CreatedBy_User", new global::System.Data.DataColumn[] {
                        this.tableUsers.UserIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableClients.CreatedByColumn}, false);
            this.Relations.Add(this.relationFK_Client_CreatedBy_User);
            this.relationFK_Client_Of_ParentClient = new global::System.Data.DataRelation("FK_Client_Of_ParentClient", new global::System.Data.DataColumn[] {
                        this.tableClients.ClientIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableClients.ParentClientIdColumn}, false);
            this.Relations.Add(this.relationFK_Client_Of_ParentClient);
            this.relationFK_Client_TestedButNoChangeBy_User = new global::System.Data.DataRelation("FK_Client_TestedButNoChangeBy_User", new global::System.Data.DataColumn[] {
                        this.tableUsers.UserIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableClients.TestedButNoChangeByColumn}, false);
            this.Relations.Add(this.relationFK_Client_TestedButNoChangeBy_User);
            this.relationFK_Client_UpdatedBy_User = new global::System.Data.DataRelation("FK_Client_UpdatedBy_User", new global::System.Data.DataColumn[] {
                        this.tableUsers.UserIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableClients.UpdatedByColumn}, false);
            this.Relations.Add(this.relationFK_Client_UpdatedBy_User);
            this.relationFK_Domain_CreatedBy_User = new global::System.Data.DataRelation("FK_Domain_CreatedBy_User", new global::System.Data.DataColumn[] {
                        this.tableUsers.UserIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableDomains.CreatedByColumn}, false);
            this.Relations.Add(this.relationFK_Domain_CreatedBy_User);
            this.relationFK_Domain_TestedButNoChangeBy_User = new global::System.Data.DataRelation("FK_Domain_TestedButNoChangeBy_User", new global::System.Data.DataColumn[] {
                        this.tableUsers.UserIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableDomains.TestedButNoChangeByColumn}, false);
            this.Relations.Add(this.relationFK_Domain_TestedButNoChangeBy_User);
            this.relationFK_Domain_UpdatedBy_User = new global::System.Data.DataRelation("FK_Domain_UpdatedBy_User", new global::System.Data.DataColumn[] {
                        this.tableUsers.UserIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableDomains.UpdatedByColumn}, false);
            this.Relations.Add(this.relationFK_Domain_UpdatedBy_User);
            this.relationFK__Aliases__FoundOn__32381C97 = new global::System.Data.DataRelation("FK__Aliases__FoundOn__32381C97", new global::System.Data.DataColumn[] {
                        this.tableServers.ServerIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableServerAliases.FoundOnServerIdColumn}, false);
            this.Relations.Add(this.relationFK__Aliases__FoundOn__32381C97);
            this.relationFK__Aliases__PointsT__332C40D0 = new global::System.Data.DataRelation("FK__Aliases__PointsT__332C40D0", new global::System.Data.DataColumn[] {
                        this.tableServers.ServerIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableServerAliases.PointsToServerIdColumn}, false);
            this.Relations.Add(this.relationFK__Aliases__PointsT__332C40D0);
            this.relationFK_Alias_CreatedBy_User = new global::System.Data.DataRelation("FK_Alias_CreatedBy_User", new global::System.Data.DataColumn[] {
                        this.tableUsers.UserIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableServerAliases.CreatedByColumn}, false);
            this.Relations.Add(this.relationFK_Alias_CreatedBy_User);
            this.relationFK_Alias_TestedButNoChangeBy_User = new global::System.Data.DataRelation("FK_Alias_TestedButNoChangeBy_User", new global::System.Data.DataColumn[] {
                        this.tableUsers.UserIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableServerAliases.TestedButNoChangeByColumn}, false);
            this.Relations.Add(this.relationFK_Alias_TestedButNoChangeBy_User);
            this.relationFK_Alias_UpdatedBy_User = new global::System.Data.DataRelation("FK_Alias_UpdatedBy_User", new global::System.Data.DataColumn[] {
                        this.tableUsers.UserIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableServerAliases.UpdatedByColumn}, false);
            this.Relations.Add(this.relationFK_Alias_UpdatedBy_User);
            this.relationFK__Server__FedFromS__0BE8567D = new global::System.Data.DataRelation("FK__Server__FedFromS__0BE8567D", new global::System.Data.DataColumn[] {
                        this.tableServers.ServerIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableServers.FedFromServerIdColumn}, false);
            this.Relations.Add(this.relationFK__Server__FedFromS__0BE8567D);
            this.relationFK__Server__FeedsInt__0CDC7AB6 = new global::System.Data.DataRelation("FK__Server__FeedsInt__0CDC7AB6", new global::System.Data.DataColumn[] {
                        this.tableServers.ServerIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableServers.FeedsIntoServerIdColumn}, false);
            this.Relations.Add(this.relationFK__Server__FeedsInt__0CDC7AB6);
            this.relationFK_DBLinkServer_OnServer = new global::System.Data.DataRelation("FK_DBLinkServer_OnServer", new global::System.Data.DataColumn[] {
                        this.tableServers.ServerIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableServers.LinkedFromServerIdColumn}, false);
            this.Relations.Add(this.relationFK_DBLinkServer_OnServer);
            this.relationFK_Server_User_Created = new global::System.Data.DataRelation("FK_Server_User_Created", new global::System.Data.DataColumn[] {
                        this.tableUsers.UserIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableServers.CreatedByColumn}, false);
            this.Relations.Add(this.relationFK_Server_User_Created);
            this.relationFK_Server_User_TestButNoChange = new global::System.Data.DataRelation("FK_Server_User_TestButNoChange", new global::System.Data.DataColumn[] {
                        this.tableUsers.UserIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableServers.TestedButNoChangeByColumn}, false);
            this.Relations.Add(this.relationFK_Server_User_TestButNoChange);
            this.relationFK_Server_User_Updated = new global::System.Data.DataRelation("FK_Server_User_Updated", new global::System.Data.DataColumn[] {
                        this.tableUsers.UserIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableServers.UpdatedByColumn}, false);
            this.Relations.Add(this.relationFK_Server_User_Updated);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeClients() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeDatabases() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeDomains() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeServerAliases() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeServers() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeUsers() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeTickets() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeTicketsOverMidMonth() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializesp_who3() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DBABnch_LOCALDataSet ds = new DBABnch_LOCALDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ClientsRowChangeEventHandler(object sender, ClientsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void DatabasesRowChangeEventHandler(object sender, DatabasesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void DomainsRowChangeEventHandler(object sender, DomainsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ServerAliasesRowChangeEventHandler(object sender, ServerAliasesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ServersRowChangeEventHandler(object sender, ServersRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void UsersRowChangeEventHandler(object sender, UsersRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void TicketsRowChangeEventHandler(object sender, TicketsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void TicketsOverMidMonthRowChangeEventHandler(object sender, TicketsOverMidMonthRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void sp_who3RowChangeEventHandler(object sender, sp_who3RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ClientsDataTable : global::System.Data.TypedTableBase<ClientsRow> {
            
            private global::System.Data.DataColumn columnClientId;
            
            private global::System.Data.DataColumn columnClientNm;
            
            private global::System.Data.DataColumn columnParentClientId;
            
            private global::System.Data.DataColumn columnFoundInDocument;
            
            private global::System.Data.DataColumn columnNoInfoDueToConnectFailure;
            
            private global::System.Data.DataColumn columnSkipBecauseLongTimeoutAndFailConnect;
            
            private global::System.Data.DataColumn columnSetSkipBecauseLongTimeoutAndFailConnect;
            
            private global::System.Data.DataColumn columnUnsetSkipBecauseLongTimeoutAndFailConnect;
            
            private global::System.Data.DataColumn columnPurpose;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnSourceId;
            
            private global::System.Data.DataColumn columnCreated;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnTested;
            
            private global::System.Data.DataColumn columnTestedButNoChangeBy;
            
            private global::System.Data.DataColumn columnUpdated;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ClientsDataTable() {
                this.TableName = "Clients";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ClientsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ClientsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ClientIdColumn {
                get {
                    return this.columnClientId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ClientNmColumn {
                get {
                    return this.columnClientNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ParentClientIdColumn {
                get {
                    return this.columnParentClientId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FoundInDocumentColumn {
                get {
                    return this.columnFoundInDocument;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NoInfoDueToConnectFailureColumn {
                get {
                    return this.columnNoInfoDueToConnectFailure;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SkipBecauseLongTimeoutAndFailConnectColumn {
                get {
                    return this.columnSkipBecauseLongTimeoutAndFailConnect;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SetSkipBecauseLongTimeoutAndFailConnectColumn {
                get {
                    return this.columnSetSkipBecauseLongTimeoutAndFailConnect;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UnsetSkipBecauseLongTimeoutAndFailConnectColumn {
                get {
                    return this.columnUnsetSkipBecauseLongTimeoutAndFailConnect;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PurposeColumn {
                get {
                    return this.columnPurpose;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SourceIdColumn {
                get {
                    return this.columnSourceId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CreatedColumn {
                get {
                    return this.columnCreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TestedColumn {
                get {
                    return this.columnTested;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TestedButNoChangeByColumn {
                get {
                    return this.columnTestedButNoChangeBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UpdatedColumn {
                get {
                    return this.columnUpdated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ClientsRow this[int index] {
                get {
                    return ((ClientsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ClientsRowChangeEventHandler ClientsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ClientsRowChangeEventHandler ClientsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ClientsRowChangeEventHandler ClientsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ClientsRowChangeEventHandler ClientsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddClientsRow(ClientsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ClientsRow AddClientsRow(
                        string ClientNm, 
                        ClientsRow parentClientsRowByFK_Client_Of_ParentClient, 
                        bool FoundInDocument, 
                        bool NoInfoDueToConnectFailure, 
                        bool SkipBecauseLongTimeoutAndFailConnect, 
                        System.DateTimeOffset SetSkipBecauseLongTimeoutAndFailConnect, 
                        System.DateTimeOffset UnsetSkipBecauseLongTimeoutAndFailConnect, 
                        string Purpose, 
                        string Comments, 
                        int SourceId, 
                        System.DateTimeOffset Created, 
                        UsersRow parentUsersRowByFK_Client_CreatedBy_User, 
                        System.DateTimeOffset Tested, 
                        UsersRow parentUsersRowByFK_Client_TestedButNoChangeBy_User, 
                        System.DateTimeOffset Updated, 
                        UsersRow parentUsersRowByFK_Client_UpdatedBy_User) {
                ClientsRow rowClientsRow = ((ClientsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ClientNm,
                        null,
                        FoundInDocument,
                        NoInfoDueToConnectFailure,
                        SkipBecauseLongTimeoutAndFailConnect,
                        SetSkipBecauseLongTimeoutAndFailConnect,
                        UnsetSkipBecauseLongTimeoutAndFailConnect,
                        Purpose,
                        Comments,
                        SourceId,
                        Created,
                        null,
                        Tested,
                        null,
                        Updated,
                        null};
                if ((parentClientsRowByFK_Client_Of_ParentClient != null)) {
                    columnValuesArray[2] = parentClientsRowByFK_Client_Of_ParentClient[0];
                }
                if ((parentUsersRowByFK_Client_CreatedBy_User != null)) {
                    columnValuesArray[12] = parentUsersRowByFK_Client_CreatedBy_User[0];
                }
                if ((parentUsersRowByFK_Client_TestedButNoChangeBy_User != null)) {
                    columnValuesArray[14] = parentUsersRowByFK_Client_TestedButNoChangeBy_User[0];
                }
                if ((parentUsersRowByFK_Client_UpdatedBy_User != null)) {
                    columnValuesArray[16] = parentUsersRowByFK_Client_UpdatedBy_User[0];
                }
                rowClientsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowClientsRow);
                return rowClientsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ClientsRow FindByClientId(int ClientId) {
                return ((ClientsRow)(this.Rows.Find(new object[] {
                            ClientId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ClientsDataTable cln = ((ClientsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ClientsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnClientId = base.Columns["ClientId"];
                this.columnClientNm = base.Columns["ClientNm"];
                this.columnParentClientId = base.Columns["ParentClientId"];
                this.columnFoundInDocument = base.Columns["FoundInDocument"];
                this.columnNoInfoDueToConnectFailure = base.Columns["NoInfoDueToConnectFailure"];
                this.columnSkipBecauseLongTimeoutAndFailConnect = base.Columns["SkipBecauseLongTimeoutAndFailConnect"];
                this.columnSetSkipBecauseLongTimeoutAndFailConnect = base.Columns["SetSkipBecauseLongTimeoutAndFailConnect"];
                this.columnUnsetSkipBecauseLongTimeoutAndFailConnect = base.Columns["UnsetSkipBecauseLongTimeoutAndFailConnect"];
                this.columnPurpose = base.Columns["Purpose"];
                this.columnComments = base.Columns["Comments"];
                this.columnSourceId = base.Columns["SourceId"];
                this.columnCreated = base.Columns["Created"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnTested = base.Columns["Tested"];
                this.columnTestedButNoChangeBy = base.Columns["TestedButNoChangeBy"];
                this.columnUpdated = base.Columns["Updated"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnClientId = new global::System.Data.DataColumn("ClientId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientId);
                this.columnClientNm = new global::System.Data.DataColumn("ClientNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientNm);
                this.columnParentClientId = new global::System.Data.DataColumn("ParentClientId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentClientId);
                this.columnFoundInDocument = new global::System.Data.DataColumn("FoundInDocument", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFoundInDocument);
                this.columnNoInfoDueToConnectFailure = new global::System.Data.DataColumn("NoInfoDueToConnectFailure", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoInfoDueToConnectFailure);
                this.columnSkipBecauseLongTimeoutAndFailConnect = new global::System.Data.DataColumn("SkipBecauseLongTimeoutAndFailConnect", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSkipBecauseLongTimeoutAndFailConnect);
                this.columnSetSkipBecauseLongTimeoutAndFailConnect = new global::System.Data.DataColumn("SetSkipBecauseLongTimeoutAndFailConnect", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSetSkipBecauseLongTimeoutAndFailConnect);
                this.columnUnsetSkipBecauseLongTimeoutAndFailConnect = new global::System.Data.DataColumn("UnsetSkipBecauseLongTimeoutAndFailConnect", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnsetSkipBecauseLongTimeoutAndFailConnect);
                this.columnPurpose = new global::System.Data.DataColumn("Purpose", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurpose);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnSourceId = new global::System.Data.DataColumn("SourceId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSourceId);
                this.columnCreated = new global::System.Data.DataColumn("Created", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreated);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnTested = new global::System.Data.DataColumn("Tested", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTested);
                this.columnTestedButNoChangeBy = new global::System.Data.DataColumn("TestedButNoChangeBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTestedButNoChangeBy);
                this.columnUpdated = new global::System.Data.DataColumn("Updated", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdated);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnClientId}, true));
                this.columnClientId.AutoIncrement = true;
                this.columnClientId.AutoIncrementSeed = -1;
                this.columnClientId.AutoIncrementStep = -1;
                this.columnClientId.AllowDBNull = false;
                this.columnClientId.ReadOnly = true;
                this.columnClientId.Unique = true;
                this.columnClientNm.MaxLength = 1696;
                this.columnPurpose.MaxLength = 200;
                this.columnComments.MaxLength = 2147483647;
                this.columnSourceId.AllowDBNull = false;
                this.columnCreated.AllowDBNull = false;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnUpdated.AllowDBNull = false;
                this.columnUpdatedBy.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ClientsRow NewClientsRow() {
                return ((ClientsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ClientsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ClientsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ClientsRowChanged != null)) {
                    this.ClientsRowChanged(this, new ClientsRowChangeEvent(((ClientsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ClientsRowChanging != null)) {
                    this.ClientsRowChanging(this, new ClientsRowChangeEvent(((ClientsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ClientsRowDeleted != null)) {
                    this.ClientsRowDeleted(this, new ClientsRowChangeEvent(((ClientsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ClientsRowDeleting != null)) {
                    this.ClientsRowDeleting(this, new ClientsRowChangeEvent(((ClientsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveClientsRow(ClientsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DBABnch_LOCALDataSet ds = new DBABnch_LOCALDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ClientsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DatabasesDataTable : global::System.Data.TypedTableBase<DatabasesRow> {
            
            private global::System.Data.DataColumn columnDbId;
            
            private global::System.Data.DataColumn columnDbScannedID;
            
            private global::System.Data.DataColumn columnSvrToScanID;
            
            private global::System.Data.DataColumn columnLinkSvrNm;
            
            private global::System.Data.DataColumn columnSvrNm;
            
            private global::System.Data.DataColumn columnDbNm;
            
            private global::System.Data.DataColumn columnRanAsUser;
            
            private global::System.Data.DataColumn columnCreated;
            
            private global::System.Data.DataColumn columncompatibility_level;
            
            private global::System.Data.DataColumn columnis_read_committed_snapshot_on;
            
            private global::System.Data.DataColumn columnis_trustworthy_on;
            
            private global::System.Data.DataColumn columnis_db_chaining_on;
            
            private global::System.Data.DataColumn columnis_fulltext_enabled;
            
            private global::System.Data.DataColumn columnis_numeric_roundabort_on;
            
            private global::System.Data.DataColumn columnis_arithabort_on;
            
            private global::System.Data.DataColumn columnis_master_key_encrypted_by_server;
            
            private global::System.Data.DataColumn columnis_read_only;
            
            private global::System.Data.DataColumn columnis_cdc_enabled;
            
            private global::System.Data.DataColumn columnis_query_store_on;
            
            private global::System.Data.DataColumn columndelayed_durability_desc;
            
            private global::System.Data.DataColumn columnrecovery_model_desc;
            
            private global::System.Data.DataColumn columnsnapshot_isolation_state_desc;
            
            private global::System.Data.DataColumn columncollation_name;
            
            private global::System.Data.DataColumn columnSkip;
            
            private global::System.Data.DataColumn columnPingFailed;
            
            private global::System.Data.DataColumn columnNoLongerExists;
            
            private global::System.Data.DataColumn columnConnectionAttemptTimedOut;
            
            private global::System.Data.DataColumn columnClientFailedToMakeAConnection;
            
            private global::System.Data.DataColumn columnNoAccessForADUserId;
            
            private global::System.Data.DataColumn columnLongTimeoutAndFailedToConnect;
            
            private global::System.Data.DataColumn columnRemoteTimeStampAtCaptureOFFSET;
            
            private global::System.Data.DataColumn columnRemoteTimeStampAtCaptureUTC;
            
            private global::System.Data.DataColumn columnCaptured;
            
            private global::System.Data.DataColumn columnCapturedBy;
            
            private global::System.Data.DataColumn columnCapturedOnSvr;
            
            private global::System.Data.DataColumn columnCapturedOnDb;
            
            private global::System.Data.DataColumn columnCapturingProcess;
            
            private global::System.Data.DataColumn columnCapturingProcessVersion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DatabasesDataTable() {
                this.TableName = "Databases";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal DatabasesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected DatabasesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DbIdColumn {
                get {
                    return this.columnDbId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DbScannedIDColumn {
                get {
                    return this.columnDbScannedID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SvrToScanIDColumn {
                get {
                    return this.columnSvrToScanID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LinkSvrNmColumn {
                get {
                    return this.columnLinkSvrNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SvrNmColumn {
                get {
                    return this.columnSvrNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DbNmColumn {
                get {
                    return this.columnDbNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RanAsUserColumn {
                get {
                    return this.columnRanAsUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CreatedColumn {
                get {
                    return this.columnCreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn compatibility_levelColumn {
                get {
                    return this.columncompatibility_level;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn is_read_committed_snapshot_onColumn {
                get {
                    return this.columnis_read_committed_snapshot_on;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn is_trustworthy_onColumn {
                get {
                    return this.columnis_trustworthy_on;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn is_db_chaining_onColumn {
                get {
                    return this.columnis_db_chaining_on;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn is_fulltext_enabledColumn {
                get {
                    return this.columnis_fulltext_enabled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn is_numeric_roundabort_onColumn {
                get {
                    return this.columnis_numeric_roundabort_on;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn is_arithabort_onColumn {
                get {
                    return this.columnis_arithabort_on;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn is_master_key_encrypted_by_serverColumn {
                get {
                    return this.columnis_master_key_encrypted_by_server;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn is_read_onlyColumn {
                get {
                    return this.columnis_read_only;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn is_cdc_enabledColumn {
                get {
                    return this.columnis_cdc_enabled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn is_query_store_onColumn {
                get {
                    return this.columnis_query_store_on;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn delayed_durability_descColumn {
                get {
                    return this.columndelayed_durability_desc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn recovery_model_descColumn {
                get {
                    return this.columnrecovery_model_desc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn snapshot_isolation_state_descColumn {
                get {
                    return this.columnsnapshot_isolation_state_desc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn collation_nameColumn {
                get {
                    return this.columncollation_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SkipColumn {
                get {
                    return this.columnSkip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PingFailedColumn {
                get {
                    return this.columnPingFailed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NoLongerExistsColumn {
                get {
                    return this.columnNoLongerExists;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ConnectionAttemptTimedOutColumn {
                get {
                    return this.columnConnectionAttemptTimedOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ClientFailedToMakeAConnectionColumn {
                get {
                    return this.columnClientFailedToMakeAConnection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NoAccessForADUserIdColumn {
                get {
                    return this.columnNoAccessForADUserId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LongTimeoutAndFailedToConnectColumn {
                get {
                    return this.columnLongTimeoutAndFailedToConnect;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RemoteTimeStampAtCaptureOFFSETColumn {
                get {
                    return this.columnRemoteTimeStampAtCaptureOFFSET;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RemoteTimeStampAtCaptureUTCColumn {
                get {
                    return this.columnRemoteTimeStampAtCaptureUTC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CapturedColumn {
                get {
                    return this.columnCaptured;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CapturedByColumn {
                get {
                    return this.columnCapturedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CapturedOnSvrColumn {
                get {
                    return this.columnCapturedOnSvr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CapturedOnDbColumn {
                get {
                    return this.columnCapturedOnDb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CapturingProcessColumn {
                get {
                    return this.columnCapturingProcess;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CapturingProcessVersionColumn {
                get {
                    return this.columnCapturingProcessVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DatabasesRow this[int index] {
                get {
                    return ((DatabasesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event DatabasesRowChangeEventHandler DatabasesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event DatabasesRowChangeEventHandler DatabasesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event DatabasesRowChangeEventHandler DatabasesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event DatabasesRowChangeEventHandler DatabasesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddDatabasesRow(DatabasesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DatabasesRow AddDatabasesRow(
                        int DbScannedID, 
                        int SvrToScanID, 
                        string LinkSvrNm, 
                        string SvrNm, 
                        string DbNm, 
                        string RanAsUser, 
                        System.DateTime Created, 
                        int compatibility_level, 
                        bool is_read_committed_snapshot_on, 
                        bool is_trustworthy_on, 
                        bool is_db_chaining_on, 
                        bool is_fulltext_enabled, 
                        bool is_numeric_roundabort_on, 
                        bool is_arithabort_on, 
                        bool is_master_key_encrypted_by_server, 
                        bool is_read_only, 
                        bool is_cdc_enabled, 
                        bool is_query_store_on, 
                        string delayed_durability_desc, 
                        string recovery_model_desc, 
                        string snapshot_isolation_state_desc, 
                        string collation_name, 
                        bool Skip, 
                        bool PingFailed, 
                        bool NoLongerExists, 
                        bool ConnectionAttemptTimedOut, 
                        bool ClientFailedToMakeAConnection, 
                        int NoAccessForADUserId, 
                        bool LongTimeoutAndFailedToConnect, 
                        System.DateTimeOffset RemoteTimeStampAtCaptureOFFSET, 
                        System.DateTime RemoteTimeStampAtCaptureUTC, 
                        System.DateTimeOffset Captured, 
                        string CapturedBy, 
                        string CapturedOnSvr, 
                        string CapturedOnDb, 
                        string CapturingProcess, 
                        System.DateTime CapturingProcessVersion) {
                DatabasesRow rowDatabasesRow = ((DatabasesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        DbScannedID,
                        SvrToScanID,
                        LinkSvrNm,
                        SvrNm,
                        DbNm,
                        RanAsUser,
                        Created,
                        compatibility_level,
                        is_read_committed_snapshot_on,
                        is_trustworthy_on,
                        is_db_chaining_on,
                        is_fulltext_enabled,
                        is_numeric_roundabort_on,
                        is_arithabort_on,
                        is_master_key_encrypted_by_server,
                        is_read_only,
                        is_cdc_enabled,
                        is_query_store_on,
                        delayed_durability_desc,
                        recovery_model_desc,
                        snapshot_isolation_state_desc,
                        collation_name,
                        Skip,
                        PingFailed,
                        NoLongerExists,
                        ConnectionAttemptTimedOut,
                        ClientFailedToMakeAConnection,
                        NoAccessForADUserId,
                        LongTimeoutAndFailedToConnect,
                        RemoteTimeStampAtCaptureOFFSET,
                        RemoteTimeStampAtCaptureUTC,
                        Captured,
                        CapturedBy,
                        CapturedOnSvr,
                        CapturedOnDb,
                        CapturingProcess,
                        CapturingProcessVersion};
                rowDatabasesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDatabasesRow);
                return rowDatabasesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DatabasesRow FindByDbId(int DbId) {
                return ((DatabasesRow)(this.Rows.Find(new object[] {
                            DbId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DatabasesDataTable cln = ((DatabasesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DatabasesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnDbId = base.Columns["DbId"];
                this.columnDbScannedID = base.Columns["DbScannedID"];
                this.columnSvrToScanID = base.Columns["SvrToScanID"];
                this.columnLinkSvrNm = base.Columns["LinkSvrNm"];
                this.columnSvrNm = base.Columns["SvrNm"];
                this.columnDbNm = base.Columns["DbNm"];
                this.columnRanAsUser = base.Columns["RanAsUser"];
                this.columnCreated = base.Columns["Created"];
                this.columncompatibility_level = base.Columns["compatibility_level"];
                this.columnis_read_committed_snapshot_on = base.Columns["is_read_committed_snapshot_on"];
                this.columnis_trustworthy_on = base.Columns["is_trustworthy_on"];
                this.columnis_db_chaining_on = base.Columns["is_db_chaining_on"];
                this.columnis_fulltext_enabled = base.Columns["is_fulltext_enabled"];
                this.columnis_numeric_roundabort_on = base.Columns["is_numeric_roundabort_on"];
                this.columnis_arithabort_on = base.Columns["is_arithabort_on"];
                this.columnis_master_key_encrypted_by_server = base.Columns["is_master_key_encrypted_by_server"];
                this.columnis_read_only = base.Columns["is_read_only"];
                this.columnis_cdc_enabled = base.Columns["is_cdc_enabled"];
                this.columnis_query_store_on = base.Columns["is_query_store_on"];
                this.columndelayed_durability_desc = base.Columns["delayed_durability_desc"];
                this.columnrecovery_model_desc = base.Columns["recovery_model_desc"];
                this.columnsnapshot_isolation_state_desc = base.Columns["snapshot_isolation_state_desc"];
                this.columncollation_name = base.Columns["collation_name"];
                this.columnSkip = base.Columns["Skip"];
                this.columnPingFailed = base.Columns["PingFailed"];
                this.columnNoLongerExists = base.Columns["NoLongerExists"];
                this.columnConnectionAttemptTimedOut = base.Columns["ConnectionAttemptTimedOut"];
                this.columnClientFailedToMakeAConnection = base.Columns["ClientFailedToMakeAConnection"];
                this.columnNoAccessForADUserId = base.Columns["NoAccessForADUserId"];
                this.columnLongTimeoutAndFailedToConnect = base.Columns["LongTimeoutAndFailedToConnect"];
                this.columnRemoteTimeStampAtCaptureOFFSET = base.Columns["RemoteTimeStampAtCaptureOFFSET"];
                this.columnRemoteTimeStampAtCaptureUTC = base.Columns["RemoteTimeStampAtCaptureUTC"];
                this.columnCaptured = base.Columns["Captured"];
                this.columnCapturedBy = base.Columns["CapturedBy"];
                this.columnCapturedOnSvr = base.Columns["CapturedOnSvr"];
                this.columnCapturedOnDb = base.Columns["CapturedOnDb"];
                this.columnCapturingProcess = base.Columns["CapturingProcess"];
                this.columnCapturingProcessVersion = base.Columns["CapturingProcessVersion"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnDbId = new global::System.Data.DataColumn("DbId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDbId);
                this.columnDbScannedID = new global::System.Data.DataColumn("DbScannedID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDbScannedID);
                this.columnSvrToScanID = new global::System.Data.DataColumn("SvrToScanID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSvrToScanID);
                this.columnLinkSvrNm = new global::System.Data.DataColumn("LinkSvrNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinkSvrNm);
                this.columnSvrNm = new global::System.Data.DataColumn("SvrNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSvrNm);
                this.columnDbNm = new global::System.Data.DataColumn("DbNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDbNm);
                this.columnRanAsUser = new global::System.Data.DataColumn("RanAsUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRanAsUser);
                this.columnCreated = new global::System.Data.DataColumn("Created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreated);
                this.columncompatibility_level = new global::System.Data.DataColumn("compatibility_level", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompatibility_level);
                this.columnis_read_committed_snapshot_on = new global::System.Data.DataColumn("is_read_committed_snapshot_on", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_read_committed_snapshot_on);
                this.columnis_trustworthy_on = new global::System.Data.DataColumn("is_trustworthy_on", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_trustworthy_on);
                this.columnis_db_chaining_on = new global::System.Data.DataColumn("is_db_chaining_on", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_db_chaining_on);
                this.columnis_fulltext_enabled = new global::System.Data.DataColumn("is_fulltext_enabled", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_fulltext_enabled);
                this.columnis_numeric_roundabort_on = new global::System.Data.DataColumn("is_numeric_roundabort_on", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_numeric_roundabort_on);
                this.columnis_arithabort_on = new global::System.Data.DataColumn("is_arithabort_on", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_arithabort_on);
                this.columnis_master_key_encrypted_by_server = new global::System.Data.DataColumn("is_master_key_encrypted_by_server", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_master_key_encrypted_by_server);
                this.columnis_read_only = new global::System.Data.DataColumn("is_read_only", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_read_only);
                this.columnis_cdc_enabled = new global::System.Data.DataColumn("is_cdc_enabled", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_cdc_enabled);
                this.columnis_query_store_on = new global::System.Data.DataColumn("is_query_store_on", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_query_store_on);
                this.columndelayed_durability_desc = new global::System.Data.DataColumn("delayed_durability_desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndelayed_durability_desc);
                this.columnrecovery_model_desc = new global::System.Data.DataColumn("recovery_model_desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrecovery_model_desc);
                this.columnsnapshot_isolation_state_desc = new global::System.Data.DataColumn("snapshot_isolation_state_desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsnapshot_isolation_state_desc);
                this.columncollation_name = new global::System.Data.DataColumn("collation_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncollation_name);
                this.columnSkip = new global::System.Data.DataColumn("Skip", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSkip);
                this.columnPingFailed = new global::System.Data.DataColumn("PingFailed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPingFailed);
                this.columnNoLongerExists = new global::System.Data.DataColumn("NoLongerExists", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoLongerExists);
                this.columnConnectionAttemptTimedOut = new global::System.Data.DataColumn("ConnectionAttemptTimedOut", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConnectionAttemptTimedOut);
                this.columnClientFailedToMakeAConnection = new global::System.Data.DataColumn("ClientFailedToMakeAConnection", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientFailedToMakeAConnection);
                this.columnNoAccessForADUserId = new global::System.Data.DataColumn("NoAccessForADUserId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoAccessForADUserId);
                this.columnLongTimeoutAndFailedToConnect = new global::System.Data.DataColumn("LongTimeoutAndFailedToConnect", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLongTimeoutAndFailedToConnect);
                this.columnRemoteTimeStampAtCaptureOFFSET = new global::System.Data.DataColumn("RemoteTimeStampAtCaptureOFFSET", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemoteTimeStampAtCaptureOFFSET);
                this.columnRemoteTimeStampAtCaptureUTC = new global::System.Data.DataColumn("RemoteTimeStampAtCaptureUTC", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemoteTimeStampAtCaptureUTC);
                this.columnCaptured = new global::System.Data.DataColumn("Captured", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCaptured);
                this.columnCapturedBy = new global::System.Data.DataColumn("CapturedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCapturedBy);
                this.columnCapturedOnSvr = new global::System.Data.DataColumn("CapturedOnSvr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCapturedOnSvr);
                this.columnCapturedOnDb = new global::System.Data.DataColumn("CapturedOnDb", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCapturedOnDb);
                this.columnCapturingProcess = new global::System.Data.DataColumn("CapturingProcess", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCapturingProcess);
                this.columnCapturingProcessVersion = new global::System.Data.DataColumn("CapturingProcessVersion", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCapturingProcessVersion);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDbId}, true));
                this.columnDbId.AutoIncrement = true;
                this.columnDbId.AutoIncrementSeed = -1;
                this.columnDbId.AutoIncrementStep = -1;
                this.columnDbId.AllowDBNull = false;
                this.columnDbId.ReadOnly = true;
                this.columnDbId.Unique = true;
                this.columnDbScannedID.AllowDBNull = false;
                this.columnSvrToScanID.AllowDBNull = false;
                this.columnLinkSvrNm.MaxLength = 257;
                this.columnSvrNm.MaxLength = 128;
                this.columnDbNm.MaxLength = 128;
                this.columnRanAsUser.MaxLength = 257;
                this.columndelayed_durability_desc.MaxLength = 100;
                this.columnrecovery_model_desc.MaxLength = 200;
                this.columnsnapshot_isolation_state_desc.MaxLength = 60;
                this.columncollation_name.MaxLength = 200;
                this.columnCaptured.AllowDBNull = false;
                this.columnCapturedBy.MaxLength = 128;
                this.columnCapturedOnSvr.MaxLength = 128;
                this.columnCapturedOnDb.MaxLength = 128;
                this.columnCapturingProcess.AllowDBNull = false;
                this.columnCapturingProcess.MaxLength = 26;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DatabasesRow NewDatabasesRow() {
                return ((DatabasesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DatabasesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DatabasesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DatabasesRowChanged != null)) {
                    this.DatabasesRowChanged(this, new DatabasesRowChangeEvent(((DatabasesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DatabasesRowChanging != null)) {
                    this.DatabasesRowChanging(this, new DatabasesRowChangeEvent(((DatabasesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DatabasesRowDeleted != null)) {
                    this.DatabasesRowDeleted(this, new DatabasesRowChangeEvent(((DatabasesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DatabasesRowDeleting != null)) {
                    this.DatabasesRowDeleting(this, new DatabasesRowChangeEvent(((DatabasesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveDatabasesRow(DatabasesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DBABnch_LOCALDataSet ds = new DBABnch_LOCALDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DatabasesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DomainsDataTable : global::System.Data.TypedTableBase<DomainsRow> {
            
            private global::System.Data.DataColumn columnDomainId;
            
            private global::System.Data.DataColumn columnDomainNm;
            
            private global::System.Data.DataColumn columnDomainType;
            
            private global::System.Data.DataColumn columnClientId;
            
            private global::System.Data.DataColumn columnFoundInDocument;
            
            private global::System.Data.DataColumn columnNoInfoDueToConnectFailure;
            
            private global::System.Data.DataColumn columnSkipBecauseLongTimeoutAndFailConnect;
            
            private global::System.Data.DataColumn columnSetSkipBecauseLongTimeoutAndFailConnect;
            
            private global::System.Data.DataColumn columnUnsetSkipBecauseLongTimeoutAndFailConnect;
            
            private global::System.Data.DataColumn columnPurpose;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnSourceId;
            
            private global::System.Data.DataColumn columnCreated;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnTested;
            
            private global::System.Data.DataColumn columnTestedButNoChangeBy;
            
            private global::System.Data.DataColumn columnUpdated;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DomainsDataTable() {
                this.TableName = "Domains";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal DomainsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected DomainsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DomainIdColumn {
                get {
                    return this.columnDomainId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DomainNmColumn {
                get {
                    return this.columnDomainNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DomainTypeColumn {
                get {
                    return this.columnDomainType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ClientIdColumn {
                get {
                    return this.columnClientId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FoundInDocumentColumn {
                get {
                    return this.columnFoundInDocument;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NoInfoDueToConnectFailureColumn {
                get {
                    return this.columnNoInfoDueToConnectFailure;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SkipBecauseLongTimeoutAndFailConnectColumn {
                get {
                    return this.columnSkipBecauseLongTimeoutAndFailConnect;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SetSkipBecauseLongTimeoutAndFailConnectColumn {
                get {
                    return this.columnSetSkipBecauseLongTimeoutAndFailConnect;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UnsetSkipBecauseLongTimeoutAndFailConnectColumn {
                get {
                    return this.columnUnsetSkipBecauseLongTimeoutAndFailConnect;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PurposeColumn {
                get {
                    return this.columnPurpose;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SourceIdColumn {
                get {
                    return this.columnSourceId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CreatedColumn {
                get {
                    return this.columnCreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TestedColumn {
                get {
                    return this.columnTested;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TestedButNoChangeByColumn {
                get {
                    return this.columnTestedButNoChangeBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UpdatedColumn {
                get {
                    return this.columnUpdated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DomainsRow this[int index] {
                get {
                    return ((DomainsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event DomainsRowChangeEventHandler DomainsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event DomainsRowChangeEventHandler DomainsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event DomainsRowChangeEventHandler DomainsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event DomainsRowChangeEventHandler DomainsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddDomainsRow(DomainsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DomainsRow AddDomainsRow(
                        string DomainNm, 
                        string DomainType, 
                        int ClientId, 
                        bool FoundInDocument, 
                        bool NoInfoDueToConnectFailure, 
                        bool SkipBecauseLongTimeoutAndFailConnect, 
                        System.DateTimeOffset SetSkipBecauseLongTimeoutAndFailConnect, 
                        System.DateTimeOffset UnsetSkipBecauseLongTimeoutAndFailConnect, 
                        string Purpose, 
                        string Comments, 
                        int SourceId, 
                        System.DateTimeOffset Created, 
                        UsersRow parentUsersRowByFK_Domain_CreatedBy_User, 
                        System.DateTimeOffset Tested, 
                        UsersRow parentUsersRowByFK_Domain_TestedButNoChangeBy_User, 
                        System.DateTimeOffset Updated, 
                        UsersRow parentUsersRowByFK_Domain_UpdatedBy_User) {
                DomainsRow rowDomainsRow = ((DomainsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        DomainNm,
                        DomainType,
                        ClientId,
                        FoundInDocument,
                        NoInfoDueToConnectFailure,
                        SkipBecauseLongTimeoutAndFailConnect,
                        SetSkipBecauseLongTimeoutAndFailConnect,
                        UnsetSkipBecauseLongTimeoutAndFailConnect,
                        Purpose,
                        Comments,
                        SourceId,
                        Created,
                        null,
                        Tested,
                        null,
                        Updated,
                        null};
                if ((parentUsersRowByFK_Domain_CreatedBy_User != null)) {
                    columnValuesArray[13] = parentUsersRowByFK_Domain_CreatedBy_User[0];
                }
                if ((parentUsersRowByFK_Domain_TestedButNoChangeBy_User != null)) {
                    columnValuesArray[15] = parentUsersRowByFK_Domain_TestedButNoChangeBy_User[0];
                }
                if ((parentUsersRowByFK_Domain_UpdatedBy_User != null)) {
                    columnValuesArray[17] = parentUsersRowByFK_Domain_UpdatedBy_User[0];
                }
                rowDomainsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDomainsRow);
                return rowDomainsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DomainsRow FindByDomainId(int DomainId) {
                return ((DomainsRow)(this.Rows.Find(new object[] {
                            DomainId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DomainsDataTable cln = ((DomainsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DomainsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnDomainId = base.Columns["DomainId"];
                this.columnDomainNm = base.Columns["DomainNm"];
                this.columnDomainType = base.Columns["DomainType"];
                this.columnClientId = base.Columns["ClientId"];
                this.columnFoundInDocument = base.Columns["FoundInDocument"];
                this.columnNoInfoDueToConnectFailure = base.Columns["NoInfoDueToConnectFailure"];
                this.columnSkipBecauseLongTimeoutAndFailConnect = base.Columns["SkipBecauseLongTimeoutAndFailConnect"];
                this.columnSetSkipBecauseLongTimeoutAndFailConnect = base.Columns["SetSkipBecauseLongTimeoutAndFailConnect"];
                this.columnUnsetSkipBecauseLongTimeoutAndFailConnect = base.Columns["UnsetSkipBecauseLongTimeoutAndFailConnect"];
                this.columnPurpose = base.Columns["Purpose"];
                this.columnComments = base.Columns["Comments"];
                this.columnSourceId = base.Columns["SourceId"];
                this.columnCreated = base.Columns["Created"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnTested = base.Columns["Tested"];
                this.columnTestedButNoChangeBy = base.Columns["TestedButNoChangeBy"];
                this.columnUpdated = base.Columns["Updated"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnDomainId = new global::System.Data.DataColumn("DomainId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDomainId);
                this.columnDomainNm = new global::System.Data.DataColumn("DomainNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDomainNm);
                this.columnDomainType = new global::System.Data.DataColumn("DomainType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDomainType);
                this.columnClientId = new global::System.Data.DataColumn("ClientId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientId);
                this.columnFoundInDocument = new global::System.Data.DataColumn("FoundInDocument", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFoundInDocument);
                this.columnNoInfoDueToConnectFailure = new global::System.Data.DataColumn("NoInfoDueToConnectFailure", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoInfoDueToConnectFailure);
                this.columnSkipBecauseLongTimeoutAndFailConnect = new global::System.Data.DataColumn("SkipBecauseLongTimeoutAndFailConnect", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSkipBecauseLongTimeoutAndFailConnect);
                this.columnSetSkipBecauseLongTimeoutAndFailConnect = new global::System.Data.DataColumn("SetSkipBecauseLongTimeoutAndFailConnect", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSetSkipBecauseLongTimeoutAndFailConnect);
                this.columnUnsetSkipBecauseLongTimeoutAndFailConnect = new global::System.Data.DataColumn("UnsetSkipBecauseLongTimeoutAndFailConnect", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnsetSkipBecauseLongTimeoutAndFailConnect);
                this.columnPurpose = new global::System.Data.DataColumn("Purpose", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurpose);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnSourceId = new global::System.Data.DataColumn("SourceId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSourceId);
                this.columnCreated = new global::System.Data.DataColumn("Created", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreated);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnTested = new global::System.Data.DataColumn("Tested", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTested);
                this.columnTestedButNoChangeBy = new global::System.Data.DataColumn("TestedButNoChangeBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTestedButNoChangeBy);
                this.columnUpdated = new global::System.Data.DataColumn("Updated", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdated);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDomainId}, true));
                this.columnDomainId.AutoIncrement = true;
                this.columnDomainId.AutoIncrementSeed = -1;
                this.columnDomainId.AutoIncrementStep = -1;
                this.columnDomainId.AllowDBNull = false;
                this.columnDomainId.ReadOnly = true;
                this.columnDomainId.Unique = true;
                this.columnDomainNm.AllowDBNull = false;
                this.columnDomainNm.MaxLength = 200;
                this.columnDomainType.MaxLength = 30;
                this.columnClientId.AllowDBNull = false;
                this.columnPurpose.MaxLength = 200;
                this.columnComments.MaxLength = 2147483647;
                this.columnSourceId.AllowDBNull = false;
                this.columnCreated.AllowDBNull = false;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnUpdated.AllowDBNull = false;
                this.columnUpdatedBy.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DomainsRow NewDomainsRow() {
                return ((DomainsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DomainsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DomainsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DomainsRowChanged != null)) {
                    this.DomainsRowChanged(this, new DomainsRowChangeEvent(((DomainsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DomainsRowChanging != null)) {
                    this.DomainsRowChanging(this, new DomainsRowChangeEvent(((DomainsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DomainsRowDeleted != null)) {
                    this.DomainsRowDeleted(this, new DomainsRowChangeEvent(((DomainsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DomainsRowDeleting != null)) {
                    this.DomainsRowDeleting(this, new DomainsRowChangeEvent(((DomainsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveDomainsRow(DomainsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DBABnch_LOCALDataSet ds = new DBABnch_LOCALDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DomainsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ServerAliasesDataTable : global::System.Data.TypedTableBase<ServerAliasesRow> {
            
            private global::System.Data.DataColumn columnAliasId;
            
            private global::System.Data.DataColumn columnAliasNm;
            
            private global::System.Data.DataColumn columnAliasType;
            
            private global::System.Data.DataColumn columnIsSQLConfiguration;
            
            private global::System.Data.DataColumn columnIsDSNAlias;
            
            private global::System.Data.DataColumn columnIsLnkSvrEntry;
            
            private global::System.Data.DataColumn columnFoundOnServerId;
            
            private global::System.Data.DataColumn columnPointsToServerId;
            
            private global::System.Data.DataColumn columnCreatedForApp;
            
            private global::System.Data.DataColumn columnCreatedForDBAConvenience;
            
            private global::System.Data.DataColumn columnFoundInDocument;
            
            private global::System.Data.DataColumn columnNoInfoDueToConnectFailure;
            
            private global::System.Data.DataColumn columnSkipBecauseLongTimeoutAndFailConnect;
            
            private global::System.Data.DataColumn columnSetSkipBecauseLongTimeoutAndFailConnect;
            
            private global::System.Data.DataColumn columnUnsetSkipBecauseLongTimeoutAndFailConnect;
            
            private global::System.Data.DataColumn columnTestQueryFailed;
            
            private global::System.Data.DataColumn columnTestQuerySucceeded;
            
            private global::System.Data.DataColumn columnPurpose;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnSourceId;
            
            private global::System.Data.DataColumn columnCreated;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnTested;
            
            private global::System.Data.DataColumn columnTestedButNoChangeBy;
            
            private global::System.Data.DataColumn columnUpdated;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ServerAliasesDataTable() {
                this.TableName = "ServerAliases";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ServerAliasesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ServerAliasesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AliasIdColumn {
                get {
                    return this.columnAliasId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AliasNmColumn {
                get {
                    return this.columnAliasNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AliasTypeColumn {
                get {
                    return this.columnAliasType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IsSQLConfigurationColumn {
                get {
                    return this.columnIsSQLConfiguration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IsDSNAliasColumn {
                get {
                    return this.columnIsDSNAlias;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IsLnkSvrEntryColumn {
                get {
                    return this.columnIsLnkSvrEntry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FoundOnServerIdColumn {
                get {
                    return this.columnFoundOnServerId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PointsToServerIdColumn {
                get {
                    return this.columnPointsToServerId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CreatedForAppColumn {
                get {
                    return this.columnCreatedForApp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CreatedForDBAConvenienceColumn {
                get {
                    return this.columnCreatedForDBAConvenience;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FoundInDocumentColumn {
                get {
                    return this.columnFoundInDocument;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NoInfoDueToConnectFailureColumn {
                get {
                    return this.columnNoInfoDueToConnectFailure;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SkipBecauseLongTimeoutAndFailConnectColumn {
                get {
                    return this.columnSkipBecauseLongTimeoutAndFailConnect;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SetSkipBecauseLongTimeoutAndFailConnectColumn {
                get {
                    return this.columnSetSkipBecauseLongTimeoutAndFailConnect;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UnsetSkipBecauseLongTimeoutAndFailConnectColumn {
                get {
                    return this.columnUnsetSkipBecauseLongTimeoutAndFailConnect;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TestQueryFailedColumn {
                get {
                    return this.columnTestQueryFailed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TestQuerySucceededColumn {
                get {
                    return this.columnTestQuerySucceeded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PurposeColumn {
                get {
                    return this.columnPurpose;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SourceIdColumn {
                get {
                    return this.columnSourceId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CreatedColumn {
                get {
                    return this.columnCreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TestedColumn {
                get {
                    return this.columnTested;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TestedButNoChangeByColumn {
                get {
                    return this.columnTestedButNoChangeBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UpdatedColumn {
                get {
                    return this.columnUpdated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ServerAliasesRow this[int index] {
                get {
                    return ((ServerAliasesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ServerAliasesRowChangeEventHandler ServerAliasesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ServerAliasesRowChangeEventHandler ServerAliasesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ServerAliasesRowChangeEventHandler ServerAliasesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ServerAliasesRowChangeEventHandler ServerAliasesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddServerAliasesRow(ServerAliasesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ServerAliasesRow AddServerAliasesRow(
                        string AliasNm, 
                        string AliasType, 
                        bool IsSQLConfiguration, 
                        bool IsDSNAlias, 
                        bool IsLnkSvrEntry, 
                        ServersRow parentServersRowByFK__Aliases__FoundOn__32381C97, 
                        ServersRow parentServersRowByFK__Aliases__PointsT__332C40D0, 
                        bool CreatedForApp, 
                        bool CreatedForDBAConvenience, 
                        bool FoundInDocument, 
                        bool NoInfoDueToConnectFailure, 
                        bool SkipBecauseLongTimeoutAndFailConnect, 
                        System.DateTimeOffset SetSkipBecauseLongTimeoutAndFailConnect, 
                        System.DateTimeOffset UnsetSkipBecauseLongTimeoutAndFailConnect, 
                        System.DateTimeOffset TestQueryFailed, 
                        System.DateTimeOffset TestQuerySucceeded, 
                        string Purpose, 
                        string Comments, 
                        int SourceId, 
                        System.DateTimeOffset Created, 
                        UsersRow parentUsersRowByFK_Alias_CreatedBy_User, 
                        System.DateTimeOffset Tested, 
                        UsersRow parentUsersRowByFK_Alias_TestedButNoChangeBy_User, 
                        System.DateTimeOffset Updated, 
                        UsersRow parentUsersRowByFK_Alias_UpdatedBy_User) {
                ServerAliasesRow rowServerAliasesRow = ((ServerAliasesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        AliasNm,
                        AliasType,
                        IsSQLConfiguration,
                        IsDSNAlias,
                        IsLnkSvrEntry,
                        null,
                        null,
                        CreatedForApp,
                        CreatedForDBAConvenience,
                        FoundInDocument,
                        NoInfoDueToConnectFailure,
                        SkipBecauseLongTimeoutAndFailConnect,
                        SetSkipBecauseLongTimeoutAndFailConnect,
                        UnsetSkipBecauseLongTimeoutAndFailConnect,
                        TestQueryFailed,
                        TestQuerySucceeded,
                        Purpose,
                        Comments,
                        SourceId,
                        Created,
                        null,
                        Tested,
                        null,
                        Updated,
                        null};
                if ((parentServersRowByFK__Aliases__FoundOn__32381C97 != null)) {
                    columnValuesArray[6] = parentServersRowByFK__Aliases__FoundOn__32381C97[0];
                }
                if ((parentServersRowByFK__Aliases__PointsT__332C40D0 != null)) {
                    columnValuesArray[7] = parentServersRowByFK__Aliases__PointsT__332C40D0[0];
                }
                if ((parentUsersRowByFK_Alias_CreatedBy_User != null)) {
                    columnValuesArray[21] = parentUsersRowByFK_Alias_CreatedBy_User[0];
                }
                if ((parentUsersRowByFK_Alias_TestedButNoChangeBy_User != null)) {
                    columnValuesArray[23] = parentUsersRowByFK_Alias_TestedButNoChangeBy_User[0];
                }
                if ((parentUsersRowByFK_Alias_UpdatedBy_User != null)) {
                    columnValuesArray[25] = parentUsersRowByFK_Alias_UpdatedBy_User[0];
                }
                rowServerAliasesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowServerAliasesRow);
                return rowServerAliasesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ServerAliasesRow FindByAliasId(int AliasId) {
                return ((ServerAliasesRow)(this.Rows.Find(new object[] {
                            AliasId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ServerAliasesDataTable cln = ((ServerAliasesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ServerAliasesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnAliasId = base.Columns["AliasId"];
                this.columnAliasNm = base.Columns["AliasNm"];
                this.columnAliasType = base.Columns["AliasType"];
                this.columnIsSQLConfiguration = base.Columns["IsSQLConfiguration"];
                this.columnIsDSNAlias = base.Columns["IsDSNAlias"];
                this.columnIsLnkSvrEntry = base.Columns["IsLnkSvrEntry"];
                this.columnFoundOnServerId = base.Columns["FoundOnServerId"];
                this.columnPointsToServerId = base.Columns["PointsToServerId"];
                this.columnCreatedForApp = base.Columns["CreatedForApp"];
                this.columnCreatedForDBAConvenience = base.Columns["CreatedForDBAConvenience"];
                this.columnFoundInDocument = base.Columns["FoundInDocument"];
                this.columnNoInfoDueToConnectFailure = base.Columns["NoInfoDueToConnectFailure"];
                this.columnSkipBecauseLongTimeoutAndFailConnect = base.Columns["SkipBecauseLongTimeoutAndFailConnect"];
                this.columnSetSkipBecauseLongTimeoutAndFailConnect = base.Columns["SetSkipBecauseLongTimeoutAndFailConnect"];
                this.columnUnsetSkipBecauseLongTimeoutAndFailConnect = base.Columns["UnsetSkipBecauseLongTimeoutAndFailConnect"];
                this.columnTestQueryFailed = base.Columns["TestQueryFailed"];
                this.columnTestQuerySucceeded = base.Columns["TestQuerySucceeded"];
                this.columnPurpose = base.Columns["Purpose"];
                this.columnComments = base.Columns["Comments"];
                this.columnSourceId = base.Columns["SourceId"];
                this.columnCreated = base.Columns["Created"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnTested = base.Columns["Tested"];
                this.columnTestedButNoChangeBy = base.Columns["TestedButNoChangeBy"];
                this.columnUpdated = base.Columns["Updated"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnAliasId = new global::System.Data.DataColumn("AliasId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAliasId);
                this.columnAliasNm = new global::System.Data.DataColumn("AliasNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAliasNm);
                this.columnAliasType = new global::System.Data.DataColumn("AliasType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAliasType);
                this.columnIsSQLConfiguration = new global::System.Data.DataColumn("IsSQLConfiguration", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsSQLConfiguration);
                this.columnIsDSNAlias = new global::System.Data.DataColumn("IsDSNAlias", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDSNAlias);
                this.columnIsLnkSvrEntry = new global::System.Data.DataColumn("IsLnkSvrEntry", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsLnkSvrEntry);
                this.columnFoundOnServerId = new global::System.Data.DataColumn("FoundOnServerId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFoundOnServerId);
                this.columnPointsToServerId = new global::System.Data.DataColumn("PointsToServerId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPointsToServerId);
                this.columnCreatedForApp = new global::System.Data.DataColumn("CreatedForApp", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedForApp);
                this.columnCreatedForDBAConvenience = new global::System.Data.DataColumn("CreatedForDBAConvenience", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedForDBAConvenience);
                this.columnFoundInDocument = new global::System.Data.DataColumn("FoundInDocument", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFoundInDocument);
                this.columnNoInfoDueToConnectFailure = new global::System.Data.DataColumn("NoInfoDueToConnectFailure", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoInfoDueToConnectFailure);
                this.columnSkipBecauseLongTimeoutAndFailConnect = new global::System.Data.DataColumn("SkipBecauseLongTimeoutAndFailConnect", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSkipBecauseLongTimeoutAndFailConnect);
                this.columnSetSkipBecauseLongTimeoutAndFailConnect = new global::System.Data.DataColumn("SetSkipBecauseLongTimeoutAndFailConnect", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSetSkipBecauseLongTimeoutAndFailConnect);
                this.columnUnsetSkipBecauseLongTimeoutAndFailConnect = new global::System.Data.DataColumn("UnsetSkipBecauseLongTimeoutAndFailConnect", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnsetSkipBecauseLongTimeoutAndFailConnect);
                this.columnTestQueryFailed = new global::System.Data.DataColumn("TestQueryFailed", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTestQueryFailed);
                this.columnTestQuerySucceeded = new global::System.Data.DataColumn("TestQuerySucceeded", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTestQuerySucceeded);
                this.columnPurpose = new global::System.Data.DataColumn("Purpose", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurpose);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnSourceId = new global::System.Data.DataColumn("SourceId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSourceId);
                this.columnCreated = new global::System.Data.DataColumn("Created", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreated);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnTested = new global::System.Data.DataColumn("Tested", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTested);
                this.columnTestedButNoChangeBy = new global::System.Data.DataColumn("TestedButNoChangeBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTestedButNoChangeBy);
                this.columnUpdated = new global::System.Data.DataColumn("Updated", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdated);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAliasId}, true));
                this.columnAliasId.AutoIncrement = true;
                this.columnAliasId.AutoIncrementSeed = -1;
                this.columnAliasId.AutoIncrementStep = -1;
                this.columnAliasId.AllowDBNull = false;
                this.columnAliasId.ReadOnly = true;
                this.columnAliasId.Unique = true;
                this.columnAliasNm.AllowDBNull = false;
                this.columnAliasNm.MaxLength = 200;
                this.columnAliasType.MaxLength = 30;
                this.columnPurpose.MaxLength = 200;
                this.columnComments.MaxLength = 2147483647;
                this.columnSourceId.AllowDBNull = false;
                this.columnCreated.AllowDBNull = false;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnUpdated.AllowDBNull = false;
                this.columnUpdatedBy.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ServerAliasesRow NewServerAliasesRow() {
                return ((ServerAliasesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ServerAliasesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ServerAliasesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ServerAliasesRowChanged != null)) {
                    this.ServerAliasesRowChanged(this, new ServerAliasesRowChangeEvent(((ServerAliasesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ServerAliasesRowChanging != null)) {
                    this.ServerAliasesRowChanging(this, new ServerAliasesRowChangeEvent(((ServerAliasesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ServerAliasesRowDeleted != null)) {
                    this.ServerAliasesRowDeleted(this, new ServerAliasesRowChangeEvent(((ServerAliasesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ServerAliasesRowDeleting != null)) {
                    this.ServerAliasesRowDeleting(this, new ServerAliasesRowChangeEvent(((ServerAliasesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveServerAliasesRow(ServerAliasesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DBABnch_LOCALDataSet ds = new DBABnch_LOCALDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ServerAliasesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ServersDataTable : global::System.Data.TypedTableBase<ServersRow> {
            
            private global::System.Data.DataColumn columnServerId;
            
            private global::System.Data.DataColumn columnServerNm;
            
            private global::System.Data.DataColumn columnServerType;
            
            private global::System.Data.DataColumn columnImpl;
            
            private global::System.Data.DataColumn columnServerDesc;
            
            private global::System.Data.DataColumn columnServerAliases;
            
            private global::System.Data.DataColumn columnServerEnvironments;
            
            private global::System.Data.DataColumn columnEnvironmentId;
            
            private global::System.Data.DataColumn columnRestrictionNotice;
            
            private global::System.Data.DataColumn columnRestrictedByNm;
            
            private global::System.Data.DataColumn columnRestricted;
            
            private global::System.Data.DataColumn columnInstanceNm;
            
            private global::System.Data.DataColumn columnIP4Address;
            
            private global::System.Data.DataColumn columnFoundInDocument;
            
            private global::System.Data.DataColumn columnLegacySource;
            
            private global::System.Data.DataColumn columnNoLongerExists;
            
            private global::System.Data.DataColumn columnNoInfoDueToConnectFailure;
            
            private global::System.Data.DataColumn columnLastTimePingSucceeded;
            
            private global::System.Data.DataColumn columnSuccessfulPingDurationNS;
            
            private global::System.Data.DataColumn columnLastTimePingFailed;
            
            private global::System.Data.DataColumn columnFailedPingDurationNS;
            
            private global::System.Data.DataColumn columnPingFailed;
            
            private global::System.Data.DataColumn columnLongTimeoutAndFailedToConnect;
            
            private global::System.Data.DataColumn columnLastTimeLongTimeoutAndFailedToConnect;
            
            private global::System.Data.DataColumn columnNoAccessForADUserId;
            
            private global::System.Data.DataColumn columnLastTimeNoAccessForADUserId;
            
            private global::System.Data.DataColumn columnConnectionAttemptTimedOut;
            
            private global::System.Data.DataColumn columnLastTimeConnectionAttemptTimedOut;
            
            private global::System.Data.DataColumn columnLastTimeConnectionAttemptSucceeded;
            
            private global::System.Data.DataColumn columnTimeItTookToConnect;
            
            private global::System.Data.DataColumn columnConnectTimeoutSetAtTimeOfTimeOut;
            
            private global::System.Data.DataColumn columnClientFailedToMakeAConnection;
            
            private global::System.Data.DataColumn columnLastTimeClientFailedToMakeAConnection;
            
            private global::System.Data.DataColumn columnLoginFailedForUserId;
            
            private global::System.Data.DataColumn columnLastTimeLoginFailedForUser;
            
            private global::System.Data.DataColumn columnSkip;
            
            private global::System.Data.DataColumn columnDomainNm;
            
            private global::System.Data.DataColumn columnDbLinkLoginId;
            
            private global::System.Data.DataColumn columnLinkedFromServerId;
            
            private global::System.Data.DataColumn columnHostId;
            
            private global::System.Data.DataColumn columnHostNm;
            
            private global::System.Data.DataColumn columnHostOSDesc;
            
            private global::System.Data.DataColumn columnHostNmPhysicalNetBIOS;
            
            private global::System.Data.DataColumn columnPurpose;
            
            private global::System.Data.DataColumn columnMethodsUsedToDeterminePurpose;
            
            private global::System.Data.DataColumn columnEdition;
            
            private global::System.Data.DataColumn columnEngineEdition;
            
            private global::System.Data.DataColumn columnEditionNm;
            
            private global::System.Data.DataColumn columnProductBuild;
            
            private global::System.Data.DataColumn columnProductBuildType;
            
            private global::System.Data.DataColumn columnProductReleaseYear;
            
            private global::System.Data.DataColumn columnProductVersion;
            
            private global::System.Data.DataColumn columnProductLevel;
            
            private global::System.Data.DataColumn columnLastKBApplied;
            
            private global::System.Data.DataColumn columnProductMajorVersion;
            
            private global::System.Data.DataColumn columnProductMinorVersion;
            
            private global::System.Data.DataColumn columnProductUpdateLevel;
            
            private global::System.Data.DataColumn columnCollation;
            
            private global::System.Data.DataColumn columnErrorLogFileNm;
            
            private global::System.Data.DataColumn columnFilestreamConfiguredLevel;
            
            private global::System.Data.DataColumn columnFilestreamShareNm;
            
            private global::System.Data.DataColumn columnHadrManagerStatus;
            
            private global::System.Data.DataColumn columnIsHadrEnabled;
            
            private global::System.Data.DataColumn columnIsXTPSupported;
            
            private global::System.Data.DataColumn columnIsClustered;
            
            private global::System.Data.DataColumn columnIsPolyBaseInstalled;
            
            private global::System.Data.DataColumn columnIsIntegratedSecurityOnly;
            
            private global::System.Data.DataColumn columnIsSingleUser;
            
            private global::System.Data.DataColumn columnIsFullTextInstalled;
            
            private global::System.Data.DataColumn columnIsAdvancedAnalyticsInstalled;
            
            private global::System.Data.DataColumn columnIsLocalDb;
            
            private global::System.Data.DataColumn columnBuildClrVersion;
            
            private global::System.Data.DataColumn columnProcessId;
            
            private global::System.Data.DataColumn columnComparisonStyle;
            
            private global::System.Data.DataColumn columnSqlCharSetNm;
            
            private global::System.Data.DataColumn columnSqlSortOrderNm;
            
            private global::System.Data.DataColumn columnBackupPrimaryPath;
            
            private global::System.Data.DataColumn columnBackupSecondaryPath;
            
            private global::System.Data.DataColumn columnLastBackupName;
            
            private global::System.Data.DataColumn columnCreated;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnUpdated;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnTestedButNoChange;
            
            private global::System.Data.DataColumn columnTestedButNoChangeBy;
            
            private global::System.Data.DataColumn columnAudited;
            
            private global::System.Data.DataColumn columnSourceId;
            
            private global::System.Data.DataColumn columnSourceId2;
            
            private global::System.Data.DataColumn columnSourceId3;
            
            private global::System.Data.DataColumn columnSourceId4;
            
            private global::System.Data.DataColumn columnIsDMZ;
            
            private global::System.Data.DataColumn columnFedFromServerId;
            
            private global::System.Data.DataColumn columnFeedsIntoServerId;
            
            private global::System.Data.DataColumn columnRegion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ServersDataTable() {
                this.TableName = "Servers";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ServersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ServersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ServerIdColumn {
                get {
                    return this.columnServerId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ServerNmColumn {
                get {
                    return this.columnServerNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ServerTypeColumn {
                get {
                    return this.columnServerType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ImplColumn {
                get {
                    return this.columnImpl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ServerDescColumn {
                get {
                    return this.columnServerDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ServerAliasesColumn {
                get {
                    return this.columnServerAliases;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ServerEnvironmentsColumn {
                get {
                    return this.columnServerEnvironments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EnvironmentIdColumn {
                get {
                    return this.columnEnvironmentId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RestrictionNoticeColumn {
                get {
                    return this.columnRestrictionNotice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RestrictedByNmColumn {
                get {
                    return this.columnRestrictedByNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RestrictedColumn {
                get {
                    return this.columnRestricted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InstanceNmColumn {
                get {
                    return this.columnInstanceNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IP4AddressColumn {
                get {
                    return this.columnIP4Address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FoundInDocumentColumn {
                get {
                    return this.columnFoundInDocument;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LegacySourceColumn {
                get {
                    return this.columnLegacySource;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NoLongerExistsColumn {
                get {
                    return this.columnNoLongerExists;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NoInfoDueToConnectFailureColumn {
                get {
                    return this.columnNoInfoDueToConnectFailure;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LastTimePingSucceededColumn {
                get {
                    return this.columnLastTimePingSucceeded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SuccessfulPingDurationNSColumn {
                get {
                    return this.columnSuccessfulPingDurationNS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LastTimePingFailedColumn {
                get {
                    return this.columnLastTimePingFailed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FailedPingDurationNSColumn {
                get {
                    return this.columnFailedPingDurationNS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PingFailedColumn {
                get {
                    return this.columnPingFailed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LongTimeoutAndFailedToConnectColumn {
                get {
                    return this.columnLongTimeoutAndFailedToConnect;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LastTimeLongTimeoutAndFailedToConnectColumn {
                get {
                    return this.columnLastTimeLongTimeoutAndFailedToConnect;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NoAccessForADUserIdColumn {
                get {
                    return this.columnNoAccessForADUserId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LastTimeNoAccessForADUserIdColumn {
                get {
                    return this.columnLastTimeNoAccessForADUserId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ConnectionAttemptTimedOutColumn {
                get {
                    return this.columnConnectionAttemptTimedOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LastTimeConnectionAttemptTimedOutColumn {
                get {
                    return this.columnLastTimeConnectionAttemptTimedOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LastTimeConnectionAttemptSucceededColumn {
                get {
                    return this.columnLastTimeConnectionAttemptSucceeded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TimeItTookToConnectColumn {
                get {
                    return this.columnTimeItTookToConnect;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ConnectTimeoutSetAtTimeOfTimeOutColumn {
                get {
                    return this.columnConnectTimeoutSetAtTimeOfTimeOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ClientFailedToMakeAConnectionColumn {
                get {
                    return this.columnClientFailedToMakeAConnection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LastTimeClientFailedToMakeAConnectionColumn {
                get {
                    return this.columnLastTimeClientFailedToMakeAConnection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LoginFailedForUserIdColumn {
                get {
                    return this.columnLoginFailedForUserId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LastTimeLoginFailedForUserColumn {
                get {
                    return this.columnLastTimeLoginFailedForUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SkipColumn {
                get {
                    return this.columnSkip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DomainNmColumn {
                get {
                    return this.columnDomainNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DbLinkLoginIdColumn {
                get {
                    return this.columnDbLinkLoginId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LinkedFromServerIdColumn {
                get {
                    return this.columnLinkedFromServerId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HostIdColumn {
                get {
                    return this.columnHostId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HostNmColumn {
                get {
                    return this.columnHostNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HostOSDescColumn {
                get {
                    return this.columnHostOSDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HostNmPhysicalNetBIOSColumn {
                get {
                    return this.columnHostNmPhysicalNetBIOS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PurposeColumn {
                get {
                    return this.columnPurpose;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MethodsUsedToDeterminePurposeColumn {
                get {
                    return this.columnMethodsUsedToDeterminePurpose;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EditionColumn {
                get {
                    return this.columnEdition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EngineEditionColumn {
                get {
                    return this.columnEngineEdition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EditionNmColumn {
                get {
                    return this.columnEditionNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ProductBuildColumn {
                get {
                    return this.columnProductBuild;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ProductBuildTypeColumn {
                get {
                    return this.columnProductBuildType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ProductReleaseYearColumn {
                get {
                    return this.columnProductReleaseYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ProductVersionColumn {
                get {
                    return this.columnProductVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ProductLevelColumn {
                get {
                    return this.columnProductLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LastKBAppliedColumn {
                get {
                    return this.columnLastKBApplied;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ProductMajorVersionColumn {
                get {
                    return this.columnProductMajorVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ProductMinorVersionColumn {
                get {
                    return this.columnProductMinorVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ProductUpdateLevelColumn {
                get {
                    return this.columnProductUpdateLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CollationColumn {
                get {
                    return this.columnCollation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ErrorLogFileNmColumn {
                get {
                    return this.columnErrorLogFileNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FilestreamConfiguredLevelColumn {
                get {
                    return this.columnFilestreamConfiguredLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FilestreamShareNmColumn {
                get {
                    return this.columnFilestreamShareNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HadrManagerStatusColumn {
                get {
                    return this.columnHadrManagerStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IsHadrEnabledColumn {
                get {
                    return this.columnIsHadrEnabled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IsXTPSupportedColumn {
                get {
                    return this.columnIsXTPSupported;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IsClusteredColumn {
                get {
                    return this.columnIsClustered;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IsPolyBaseInstalledColumn {
                get {
                    return this.columnIsPolyBaseInstalled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IsIntegratedSecurityOnlyColumn {
                get {
                    return this.columnIsIntegratedSecurityOnly;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IsSingleUserColumn {
                get {
                    return this.columnIsSingleUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IsFullTextInstalledColumn {
                get {
                    return this.columnIsFullTextInstalled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IsAdvancedAnalyticsInstalledColumn {
                get {
                    return this.columnIsAdvancedAnalyticsInstalled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IsLocalDbColumn {
                get {
                    return this.columnIsLocalDb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BuildClrVersionColumn {
                get {
                    return this.columnBuildClrVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ProcessIdColumn {
                get {
                    return this.columnProcessId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ComparisonStyleColumn {
                get {
                    return this.columnComparisonStyle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SqlCharSetNmColumn {
                get {
                    return this.columnSqlCharSetNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SqlSortOrderNmColumn {
                get {
                    return this.columnSqlSortOrderNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BackupPrimaryPathColumn {
                get {
                    return this.columnBackupPrimaryPath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BackupSecondaryPathColumn {
                get {
                    return this.columnBackupSecondaryPath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LastBackupNameColumn {
                get {
                    return this.columnLastBackupName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CreatedColumn {
                get {
                    return this.columnCreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UpdatedColumn {
                get {
                    return this.columnUpdated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TestedButNoChangeColumn {
                get {
                    return this.columnTestedButNoChange;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TestedButNoChangeByColumn {
                get {
                    return this.columnTestedButNoChangeBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AuditedColumn {
                get {
                    return this.columnAudited;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SourceIdColumn {
                get {
                    return this.columnSourceId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SourceId2Column {
                get {
                    return this.columnSourceId2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SourceId3Column {
                get {
                    return this.columnSourceId3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SourceId4Column {
                get {
                    return this.columnSourceId4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IsDMZColumn {
                get {
                    return this.columnIsDMZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FedFromServerIdColumn {
                get {
                    return this.columnFedFromServerId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FeedsIntoServerIdColumn {
                get {
                    return this.columnFeedsIntoServerId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RegionColumn {
                get {
                    return this.columnRegion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ServersRow this[int index] {
                get {
                    return ((ServersRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ServersRowChangeEventHandler ServersRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ServersRowChangeEventHandler ServersRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ServersRowChangeEventHandler ServersRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ServersRowChangeEventHandler ServersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddServersRow(ServersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ServersRow AddServersRow(
                        string ServerNm, 
                        string ServerType, 
                        string Impl, 
                        string ServerDesc, 
                        string ServerAliases, 
                        string ServerEnvironments, 
                        byte EnvironmentId, 
                        string RestrictionNotice, 
                        string RestrictedByNm, 
                        System.DateTimeOffset Restricted, 
                        string InstanceNm, 
                        byte[] IP4Address, 
                        bool FoundInDocument, 
                        bool LegacySource, 
                        bool NoLongerExists, 
                        bool NoInfoDueToConnectFailure, 
                        System.DateTimeOffset LastTimePingSucceeded, 
                        long SuccessfulPingDurationNS, 
                        System.DateTimeOffset LastTimePingFailed, 
                        long FailedPingDurationNS, 
                        int PingFailed, 
                        bool LongTimeoutAndFailedToConnect, 
                        System.DateTimeOffset LastTimeLongTimeoutAndFailedToConnect, 
                        int NoAccessForADUserId, 
                        System.DateTimeOffset LastTimeNoAccessForADUserId, 
                        bool ConnectionAttemptTimedOut, 
                        System.DateTimeOffset LastTimeConnectionAttemptTimedOut, 
                        System.DateTimeOffset LastTimeConnectionAttemptSucceeded, 
                        long TimeItTookToConnect, 
                        int ConnectTimeoutSetAtTimeOfTimeOut, 
                        bool ClientFailedToMakeAConnection, 
                        System.DateTimeOffset LastTimeClientFailedToMakeAConnection, 
                        int LoginFailedForUserId, 
                        System.DateTimeOffset LastTimeLoginFailedForUser, 
                        int Skip, 
                        string DomainNm, 
                        int DbLinkLoginId, 
                        ServersRow parentServersRowByFK_DBLinkServer_OnServer, 
                        int HostId, 
                        string HostNm, 
                        string HostOSDesc, 
                        string HostNmPhysicalNetBIOS, 
                        string Purpose, 
                        string MethodsUsedToDeterminePurpose, 
                        string Edition, 
                        int EngineEdition, 
                        string EditionNm, 
                        string ProductBuild, 
                        string ProductBuildType, 
                        string ProductReleaseYear, 
                        string ProductVersion, 
                        string ProductLevel, 
                        string LastKBApplied, 
                        string ProductMajorVersion, 
                        string ProductMinorVersion, 
                        string ProductUpdateLevel, 
                        string Collation, 
                        string ErrorLogFileNm, 
                        string FilestreamConfiguredLevel, 
                        string FilestreamShareNm, 
                        int HadrManagerStatus, 
                        int IsHadrEnabled, 
                        int IsXTPSupported, 
                        int IsClustered, 
                        int IsPolyBaseInstalled, 
                        int IsIntegratedSecurityOnly, 
                        int IsSingleUser, 
                        int IsFullTextInstalled, 
                        int IsAdvancedAnalyticsInstalled, 
                        int IsLocalDb, 
                        string BuildClrVersion, 
                        int ProcessId, 
                        int ComparisonStyle, 
                        string SqlCharSetNm, 
                        string SqlSortOrderNm, 
                        string BackupPrimaryPath, 
                        string BackupSecondaryPath, 
                        string LastBackupName, 
                        System.DateTimeOffset Created, 
                        UsersRow parentUsersRowByFK_Server_User_Created, 
                        System.DateTimeOffset Updated, 
                        UsersRow parentUsersRowByFK_Server_User_Updated, 
                        System.DateTimeOffset TestedButNoChange, 
                        UsersRow parentUsersRowByFK_Server_User_TestButNoChange, 
                        System.DateTimeOffset Audited, 
                        int SourceId, 
                        int SourceId2, 
                        int SourceId3, 
                        int SourceId4, 
                        bool IsDMZ, 
                        ServersRow parentServersRowByFK__Server__FedFromS__0BE8567D, 
                        ServersRow parentServersRowByFK__Server__FeedsInt__0CDC7AB6, 
                        string Region) {
                ServersRow rowServersRow = ((ServersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ServerNm,
                        ServerType,
                        Impl,
                        ServerDesc,
                        ServerAliases,
                        ServerEnvironments,
                        EnvironmentId,
                        RestrictionNotice,
                        RestrictedByNm,
                        Restricted,
                        InstanceNm,
                        IP4Address,
                        FoundInDocument,
                        LegacySource,
                        NoLongerExists,
                        NoInfoDueToConnectFailure,
                        LastTimePingSucceeded,
                        SuccessfulPingDurationNS,
                        LastTimePingFailed,
                        FailedPingDurationNS,
                        PingFailed,
                        LongTimeoutAndFailedToConnect,
                        LastTimeLongTimeoutAndFailedToConnect,
                        NoAccessForADUserId,
                        LastTimeNoAccessForADUserId,
                        ConnectionAttemptTimedOut,
                        LastTimeConnectionAttemptTimedOut,
                        LastTimeConnectionAttemptSucceeded,
                        TimeItTookToConnect,
                        ConnectTimeoutSetAtTimeOfTimeOut,
                        ClientFailedToMakeAConnection,
                        LastTimeClientFailedToMakeAConnection,
                        LoginFailedForUserId,
                        LastTimeLoginFailedForUser,
                        Skip,
                        DomainNm,
                        DbLinkLoginId,
                        null,
                        HostId,
                        HostNm,
                        HostOSDesc,
                        HostNmPhysicalNetBIOS,
                        Purpose,
                        MethodsUsedToDeterminePurpose,
                        Edition,
                        EngineEdition,
                        EditionNm,
                        ProductBuild,
                        ProductBuildType,
                        ProductReleaseYear,
                        ProductVersion,
                        ProductLevel,
                        LastKBApplied,
                        ProductMajorVersion,
                        ProductMinorVersion,
                        ProductUpdateLevel,
                        Collation,
                        ErrorLogFileNm,
                        FilestreamConfiguredLevel,
                        FilestreamShareNm,
                        HadrManagerStatus,
                        IsHadrEnabled,
                        IsXTPSupported,
                        IsClustered,
                        IsPolyBaseInstalled,
                        IsIntegratedSecurityOnly,
                        IsSingleUser,
                        IsFullTextInstalled,
                        IsAdvancedAnalyticsInstalled,
                        IsLocalDb,
                        BuildClrVersion,
                        ProcessId,
                        ComparisonStyle,
                        SqlCharSetNm,
                        SqlSortOrderNm,
                        BackupPrimaryPath,
                        BackupSecondaryPath,
                        LastBackupName,
                        Created,
                        null,
                        Updated,
                        null,
                        TestedButNoChange,
                        null,
                        Audited,
                        SourceId,
                        SourceId2,
                        SourceId3,
                        SourceId4,
                        IsDMZ,
                        null,
                        null,
                        Region};
                if ((parentServersRowByFK_DBLinkServer_OnServer != null)) {
                    columnValuesArray[38] = parentServersRowByFK_DBLinkServer_OnServer[0];
                }
                if ((parentUsersRowByFK_Server_User_Created != null)) {
                    columnValuesArray[80] = parentUsersRowByFK_Server_User_Created[0];
                }
                if ((parentUsersRowByFK_Server_User_Updated != null)) {
                    columnValuesArray[82] = parentUsersRowByFK_Server_User_Updated[0];
                }
                if ((parentUsersRowByFK_Server_User_TestButNoChange != null)) {
                    columnValuesArray[84] = parentUsersRowByFK_Server_User_TestButNoChange[0];
                }
                if ((parentServersRowByFK__Server__FedFromS__0BE8567D != null)) {
                    columnValuesArray[91] = parentServersRowByFK__Server__FedFromS__0BE8567D[0];
                }
                if ((parentServersRowByFK__Server__FeedsInt__0CDC7AB6 != null)) {
                    columnValuesArray[92] = parentServersRowByFK__Server__FeedsInt__0CDC7AB6[0];
                }
                rowServersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowServersRow);
                return rowServersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ServersRow FindByServerId(int ServerId) {
                return ((ServersRow)(this.Rows.Find(new object[] {
                            ServerId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ServersDataTable cln = ((ServersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ServersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnServerId = base.Columns["ServerId"];
                this.columnServerNm = base.Columns["ServerNm"];
                this.columnServerType = base.Columns["ServerType"];
                this.columnImpl = base.Columns["Impl"];
                this.columnServerDesc = base.Columns["ServerDesc"];
                this.columnServerAliases = base.Columns["ServerAliases"];
                this.columnServerEnvironments = base.Columns["ServerEnvironments"];
                this.columnEnvironmentId = base.Columns["EnvironmentId"];
                this.columnRestrictionNotice = base.Columns["RestrictionNotice"];
                this.columnRestrictedByNm = base.Columns["RestrictedByNm"];
                this.columnRestricted = base.Columns["Restricted"];
                this.columnInstanceNm = base.Columns["InstanceNm"];
                this.columnIP4Address = base.Columns["IP4Address"];
                this.columnFoundInDocument = base.Columns["FoundInDocument"];
                this.columnLegacySource = base.Columns["LegacySource"];
                this.columnNoLongerExists = base.Columns["NoLongerExists"];
                this.columnNoInfoDueToConnectFailure = base.Columns["NoInfoDueToConnectFailure"];
                this.columnLastTimePingSucceeded = base.Columns["LastTimePingSucceeded"];
                this.columnSuccessfulPingDurationNS = base.Columns["SuccessfulPingDurationNS"];
                this.columnLastTimePingFailed = base.Columns["LastTimePingFailed"];
                this.columnFailedPingDurationNS = base.Columns["FailedPingDurationNS"];
                this.columnPingFailed = base.Columns["PingFailed"];
                this.columnLongTimeoutAndFailedToConnect = base.Columns["LongTimeoutAndFailedToConnect"];
                this.columnLastTimeLongTimeoutAndFailedToConnect = base.Columns["LastTimeLongTimeoutAndFailedToConnect"];
                this.columnNoAccessForADUserId = base.Columns["NoAccessForADUserId"];
                this.columnLastTimeNoAccessForADUserId = base.Columns["LastTimeNoAccessForADUserId"];
                this.columnConnectionAttemptTimedOut = base.Columns["ConnectionAttemptTimedOut"];
                this.columnLastTimeConnectionAttemptTimedOut = base.Columns["LastTimeConnectionAttemptTimedOut"];
                this.columnLastTimeConnectionAttemptSucceeded = base.Columns["LastTimeConnectionAttemptSucceeded"];
                this.columnTimeItTookToConnect = base.Columns["TimeItTookToConnect"];
                this.columnConnectTimeoutSetAtTimeOfTimeOut = base.Columns["ConnectTimeoutSetAtTimeOfTimeOut"];
                this.columnClientFailedToMakeAConnection = base.Columns["ClientFailedToMakeAConnection"];
                this.columnLastTimeClientFailedToMakeAConnection = base.Columns["LastTimeClientFailedToMakeAConnection"];
                this.columnLoginFailedForUserId = base.Columns["LoginFailedForUserId"];
                this.columnLastTimeLoginFailedForUser = base.Columns["LastTimeLoginFailedForUser"];
                this.columnSkip = base.Columns["Skip"];
                this.columnDomainNm = base.Columns["DomainNm"];
                this.columnDbLinkLoginId = base.Columns["DbLinkLoginId"];
                this.columnLinkedFromServerId = base.Columns["LinkedFromServerId"];
                this.columnHostId = base.Columns["HostId"];
                this.columnHostNm = base.Columns["HostNm"];
                this.columnHostOSDesc = base.Columns["HostOSDesc"];
                this.columnHostNmPhysicalNetBIOS = base.Columns["HostNmPhysicalNetBIOS"];
                this.columnPurpose = base.Columns["Purpose"];
                this.columnMethodsUsedToDeterminePurpose = base.Columns["MethodsUsedToDeterminePurpose"];
                this.columnEdition = base.Columns["Edition"];
                this.columnEngineEdition = base.Columns["EngineEdition"];
                this.columnEditionNm = base.Columns["EditionNm"];
                this.columnProductBuild = base.Columns["ProductBuild"];
                this.columnProductBuildType = base.Columns["ProductBuildType"];
                this.columnProductReleaseYear = base.Columns["ProductReleaseYear"];
                this.columnProductVersion = base.Columns["ProductVersion"];
                this.columnProductLevel = base.Columns["ProductLevel"];
                this.columnLastKBApplied = base.Columns["LastKBApplied"];
                this.columnProductMajorVersion = base.Columns["ProductMajorVersion"];
                this.columnProductMinorVersion = base.Columns["ProductMinorVersion"];
                this.columnProductUpdateLevel = base.Columns["ProductUpdateLevel"];
                this.columnCollation = base.Columns["Collation"];
                this.columnErrorLogFileNm = base.Columns["ErrorLogFileNm"];
                this.columnFilestreamConfiguredLevel = base.Columns["FilestreamConfiguredLevel"];
                this.columnFilestreamShareNm = base.Columns["FilestreamShareNm"];
                this.columnHadrManagerStatus = base.Columns["HadrManagerStatus"];
                this.columnIsHadrEnabled = base.Columns["IsHadrEnabled"];
                this.columnIsXTPSupported = base.Columns["IsXTPSupported"];
                this.columnIsClustered = base.Columns["IsClustered"];
                this.columnIsPolyBaseInstalled = base.Columns["IsPolyBaseInstalled"];
                this.columnIsIntegratedSecurityOnly = base.Columns["IsIntegratedSecurityOnly"];
                this.columnIsSingleUser = base.Columns["IsSingleUser"];
                this.columnIsFullTextInstalled = base.Columns["IsFullTextInstalled"];
                this.columnIsAdvancedAnalyticsInstalled = base.Columns["IsAdvancedAnalyticsInstalled"];
                this.columnIsLocalDb = base.Columns["IsLocalDb"];
                this.columnBuildClrVersion = base.Columns["BuildClrVersion"];
                this.columnProcessId = base.Columns["ProcessId"];
                this.columnComparisonStyle = base.Columns["ComparisonStyle"];
                this.columnSqlCharSetNm = base.Columns["SqlCharSetNm"];
                this.columnSqlSortOrderNm = base.Columns["SqlSortOrderNm"];
                this.columnBackupPrimaryPath = base.Columns["BackupPrimaryPath"];
                this.columnBackupSecondaryPath = base.Columns["BackupSecondaryPath"];
                this.columnLastBackupName = base.Columns["LastBackupName"];
                this.columnCreated = base.Columns["Created"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnUpdated = base.Columns["Updated"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnTestedButNoChange = base.Columns["TestedButNoChange"];
                this.columnTestedButNoChangeBy = base.Columns["TestedButNoChangeBy"];
                this.columnAudited = base.Columns["Audited"];
                this.columnSourceId = base.Columns["SourceId"];
                this.columnSourceId2 = base.Columns["SourceId2"];
                this.columnSourceId3 = base.Columns["SourceId3"];
                this.columnSourceId4 = base.Columns["SourceId4"];
                this.columnIsDMZ = base.Columns["IsDMZ"];
                this.columnFedFromServerId = base.Columns["FedFromServerId"];
                this.columnFeedsIntoServerId = base.Columns["FeedsIntoServerId"];
                this.columnRegion = base.Columns["Region"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnServerId = new global::System.Data.DataColumn("ServerId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServerId);
                this.columnServerNm = new global::System.Data.DataColumn("ServerNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServerNm);
                this.columnServerType = new global::System.Data.DataColumn("ServerType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServerType);
                this.columnImpl = new global::System.Data.DataColumn("Impl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImpl);
                this.columnServerDesc = new global::System.Data.DataColumn("ServerDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServerDesc);
                this.columnServerAliases = new global::System.Data.DataColumn("ServerAliases", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServerAliases);
                this.columnServerEnvironments = new global::System.Data.DataColumn("ServerEnvironments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServerEnvironments);
                this.columnEnvironmentId = new global::System.Data.DataColumn("EnvironmentId", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnvironmentId);
                this.columnRestrictionNotice = new global::System.Data.DataColumn("RestrictionNotice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRestrictionNotice);
                this.columnRestrictedByNm = new global::System.Data.DataColumn("RestrictedByNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRestrictedByNm);
                this.columnRestricted = new global::System.Data.DataColumn("Restricted", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRestricted);
                this.columnInstanceNm = new global::System.Data.DataColumn("InstanceNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstanceNm);
                this.columnIP4Address = new global::System.Data.DataColumn("IP4Address", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIP4Address);
                this.columnFoundInDocument = new global::System.Data.DataColumn("FoundInDocument", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFoundInDocument);
                this.columnLegacySource = new global::System.Data.DataColumn("LegacySource", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLegacySource);
                this.columnNoLongerExists = new global::System.Data.DataColumn("NoLongerExists", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoLongerExists);
                this.columnNoInfoDueToConnectFailure = new global::System.Data.DataColumn("NoInfoDueToConnectFailure", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoInfoDueToConnectFailure);
                this.columnLastTimePingSucceeded = new global::System.Data.DataColumn("LastTimePingSucceeded", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastTimePingSucceeded);
                this.columnSuccessfulPingDurationNS = new global::System.Data.DataColumn("SuccessfulPingDurationNS", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuccessfulPingDurationNS);
                this.columnLastTimePingFailed = new global::System.Data.DataColumn("LastTimePingFailed", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastTimePingFailed);
                this.columnFailedPingDurationNS = new global::System.Data.DataColumn("FailedPingDurationNS", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFailedPingDurationNS);
                this.columnPingFailed = new global::System.Data.DataColumn("PingFailed", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPingFailed);
                this.columnLongTimeoutAndFailedToConnect = new global::System.Data.DataColumn("LongTimeoutAndFailedToConnect", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLongTimeoutAndFailedToConnect);
                this.columnLastTimeLongTimeoutAndFailedToConnect = new global::System.Data.DataColumn("LastTimeLongTimeoutAndFailedToConnect", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastTimeLongTimeoutAndFailedToConnect);
                this.columnNoAccessForADUserId = new global::System.Data.DataColumn("NoAccessForADUserId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoAccessForADUserId);
                this.columnLastTimeNoAccessForADUserId = new global::System.Data.DataColumn("LastTimeNoAccessForADUserId", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastTimeNoAccessForADUserId);
                this.columnConnectionAttemptTimedOut = new global::System.Data.DataColumn("ConnectionAttemptTimedOut", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConnectionAttemptTimedOut);
                this.columnLastTimeConnectionAttemptTimedOut = new global::System.Data.DataColumn("LastTimeConnectionAttemptTimedOut", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastTimeConnectionAttemptTimedOut);
                this.columnLastTimeConnectionAttemptSucceeded = new global::System.Data.DataColumn("LastTimeConnectionAttemptSucceeded", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastTimeConnectionAttemptSucceeded);
                this.columnTimeItTookToConnect = new global::System.Data.DataColumn("TimeItTookToConnect", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeItTookToConnect);
                this.columnConnectTimeoutSetAtTimeOfTimeOut = new global::System.Data.DataColumn("ConnectTimeoutSetAtTimeOfTimeOut", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConnectTimeoutSetAtTimeOfTimeOut);
                this.columnClientFailedToMakeAConnection = new global::System.Data.DataColumn("ClientFailedToMakeAConnection", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientFailedToMakeAConnection);
                this.columnLastTimeClientFailedToMakeAConnection = new global::System.Data.DataColumn("LastTimeClientFailedToMakeAConnection", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastTimeClientFailedToMakeAConnection);
                this.columnLoginFailedForUserId = new global::System.Data.DataColumn("LoginFailedForUserId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoginFailedForUserId);
                this.columnLastTimeLoginFailedForUser = new global::System.Data.DataColumn("LastTimeLoginFailedForUser", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastTimeLoginFailedForUser);
                this.columnSkip = new global::System.Data.DataColumn("Skip", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSkip);
                this.columnDomainNm = new global::System.Data.DataColumn("DomainNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDomainNm);
                this.columnDbLinkLoginId = new global::System.Data.DataColumn("DbLinkLoginId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDbLinkLoginId);
                this.columnLinkedFromServerId = new global::System.Data.DataColumn("LinkedFromServerId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinkedFromServerId);
                this.columnHostId = new global::System.Data.DataColumn("HostId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHostId);
                this.columnHostNm = new global::System.Data.DataColumn("HostNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHostNm);
                this.columnHostOSDesc = new global::System.Data.DataColumn("HostOSDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHostOSDesc);
                this.columnHostNmPhysicalNetBIOS = new global::System.Data.DataColumn("HostNmPhysicalNetBIOS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHostNmPhysicalNetBIOS);
                this.columnPurpose = new global::System.Data.DataColumn("Purpose", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurpose);
                this.columnMethodsUsedToDeterminePurpose = new global::System.Data.DataColumn("MethodsUsedToDeterminePurpose", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMethodsUsedToDeterminePurpose);
                this.columnEdition = new global::System.Data.DataColumn("Edition", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEdition);
                this.columnEngineEdition = new global::System.Data.DataColumn("EngineEdition", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEngineEdition);
                this.columnEditionNm = new global::System.Data.DataColumn("EditionNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEditionNm);
                this.columnProductBuild = new global::System.Data.DataColumn("ProductBuild", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductBuild);
                this.columnProductBuildType = new global::System.Data.DataColumn("ProductBuildType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductBuildType);
                this.columnProductReleaseYear = new global::System.Data.DataColumn("ProductReleaseYear", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductReleaseYear);
                this.columnProductVersion = new global::System.Data.DataColumn("ProductVersion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductVersion);
                this.columnProductLevel = new global::System.Data.DataColumn("ProductLevel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductLevel);
                this.columnLastKBApplied = new global::System.Data.DataColumn("LastKBApplied", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastKBApplied);
                this.columnProductMajorVersion = new global::System.Data.DataColumn("ProductMajorVersion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductMajorVersion);
                this.columnProductMinorVersion = new global::System.Data.DataColumn("ProductMinorVersion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductMinorVersion);
                this.columnProductUpdateLevel = new global::System.Data.DataColumn("ProductUpdateLevel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductUpdateLevel);
                this.columnCollation = new global::System.Data.DataColumn("Collation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCollation);
                this.columnErrorLogFileNm = new global::System.Data.DataColumn("ErrorLogFileNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnErrorLogFileNm);
                this.columnFilestreamConfiguredLevel = new global::System.Data.DataColumn("FilestreamConfiguredLevel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFilestreamConfiguredLevel);
                this.columnFilestreamShareNm = new global::System.Data.DataColumn("FilestreamShareNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFilestreamShareNm);
                this.columnHadrManagerStatus = new global::System.Data.DataColumn("HadrManagerStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHadrManagerStatus);
                this.columnIsHadrEnabled = new global::System.Data.DataColumn("IsHadrEnabled", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsHadrEnabled);
                this.columnIsXTPSupported = new global::System.Data.DataColumn("IsXTPSupported", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsXTPSupported);
                this.columnIsClustered = new global::System.Data.DataColumn("IsClustered", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsClustered);
                this.columnIsPolyBaseInstalled = new global::System.Data.DataColumn("IsPolyBaseInstalled", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsPolyBaseInstalled);
                this.columnIsIntegratedSecurityOnly = new global::System.Data.DataColumn("IsIntegratedSecurityOnly", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsIntegratedSecurityOnly);
                this.columnIsSingleUser = new global::System.Data.DataColumn("IsSingleUser", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsSingleUser);
                this.columnIsFullTextInstalled = new global::System.Data.DataColumn("IsFullTextInstalled", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsFullTextInstalled);
                this.columnIsAdvancedAnalyticsInstalled = new global::System.Data.DataColumn("IsAdvancedAnalyticsInstalled", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsAdvancedAnalyticsInstalled);
                this.columnIsLocalDb = new global::System.Data.DataColumn("IsLocalDb", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsLocalDb);
                this.columnBuildClrVersion = new global::System.Data.DataColumn("BuildClrVersion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuildClrVersion);
                this.columnProcessId = new global::System.Data.DataColumn("ProcessId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProcessId);
                this.columnComparisonStyle = new global::System.Data.DataColumn("ComparisonStyle", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComparisonStyle);
                this.columnSqlCharSetNm = new global::System.Data.DataColumn("SqlCharSetNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSqlCharSetNm);
                this.columnSqlSortOrderNm = new global::System.Data.DataColumn("SqlSortOrderNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSqlSortOrderNm);
                this.columnBackupPrimaryPath = new global::System.Data.DataColumn("BackupPrimaryPath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackupPrimaryPath);
                this.columnBackupSecondaryPath = new global::System.Data.DataColumn("BackupSecondaryPath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackupSecondaryPath);
                this.columnLastBackupName = new global::System.Data.DataColumn("LastBackupName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastBackupName);
                this.columnCreated = new global::System.Data.DataColumn("Created", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreated);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnUpdated = new global::System.Data.DataColumn("Updated", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdated);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnTestedButNoChange = new global::System.Data.DataColumn("TestedButNoChange", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTestedButNoChange);
                this.columnTestedButNoChangeBy = new global::System.Data.DataColumn("TestedButNoChangeBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTestedButNoChangeBy);
                this.columnAudited = new global::System.Data.DataColumn("Audited", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAudited);
                this.columnSourceId = new global::System.Data.DataColumn("SourceId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSourceId);
                this.columnSourceId2 = new global::System.Data.DataColumn("SourceId2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSourceId2);
                this.columnSourceId3 = new global::System.Data.DataColumn("SourceId3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSourceId3);
                this.columnSourceId4 = new global::System.Data.DataColumn("SourceId4", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSourceId4);
                this.columnIsDMZ = new global::System.Data.DataColumn("IsDMZ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDMZ);
                this.columnFedFromServerId = new global::System.Data.DataColumn("FedFromServerId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFedFromServerId);
                this.columnFeedsIntoServerId = new global::System.Data.DataColumn("FeedsIntoServerId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeedsIntoServerId);
                this.columnRegion = new global::System.Data.DataColumn("Region", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegion);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnServerId}, true));
                this.columnServerId.AutoIncrement = true;
                this.columnServerId.AutoIncrementSeed = -1;
                this.columnServerId.AutoIncrementStep = -1;
                this.columnServerId.AllowDBNull = false;
                this.columnServerId.ReadOnly = true;
                this.columnServerId.Unique = true;
                this.columnServerNm.AllowDBNull = false;
                this.columnServerNm.MaxLength = 261;
                this.columnServerType.MaxLength = 100;
                this.columnImpl.MaxLength = 30;
                this.columnServerDesc.MaxLength = 2147483647;
                this.columnServerAliases.MaxLength = 200;
                this.columnServerEnvironments.MaxLength = 60;
                this.columnRestrictionNotice.MaxLength = 400;
                this.columnRestrictedByNm.MaxLength = 250;
                this.columnInstanceNm.MaxLength = 128;
                this.columnNoInfoDueToConnectFailure.AllowDBNull = false;
                this.columnPingFailed.ReadOnly = true;
                this.columnSkip.ReadOnly = true;
                this.columnDomainNm.AllowDBNull = false;
                this.columnDomainNm.MaxLength = 128;
                this.columnHostNm.MaxLength = 200;
                this.columnHostOSDesc.MaxLength = 200;
                this.columnHostNmPhysicalNetBIOS.MaxLength = 200;
                this.columnPurpose.MaxLength = 200;
                this.columnMethodsUsedToDeterminePurpose.MaxLength = 200;
                this.columnEdition.MaxLength = 40;
                this.columnEditionNm.MaxLength = 50;
                this.columnProductBuild.MaxLength = 200;
                this.columnProductBuildType.MaxLength = 200;
                this.columnProductReleaseYear.MaxLength = 10;
                this.columnProductVersion.MaxLength = 200;
                this.columnProductLevel.MaxLength = 200;
                this.columnLastKBApplied.MaxLength = 200;
                this.columnProductMajorVersion.MaxLength = 20;
                this.columnProductMinorVersion.MaxLength = 20;
                this.columnProductUpdateLevel.MaxLength = 20;
                this.columnCollation.MaxLength = 100;
                this.columnErrorLogFileNm.MaxLength = 2147483647;
                this.columnFilestreamConfiguredLevel.MaxLength = 200;
                this.columnFilestreamShareNm.MaxLength = 200;
                this.columnBuildClrVersion.MaxLength = 200;
                this.columnSqlCharSetNm.MaxLength = 200;
                this.columnSqlSortOrderNm.MaxLength = 200;
                this.columnBackupPrimaryPath.MaxLength = 400;
                this.columnBackupSecondaryPath.MaxLength = 400;
                this.columnLastBackupName.MaxLength = 400;
                this.columnSourceId.AllowDBNull = false;
                this.columnRegion.MaxLength = 4;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ServersRow NewServersRow() {
                return ((ServersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ServersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ServersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ServersRowChanged != null)) {
                    this.ServersRowChanged(this, new ServersRowChangeEvent(((ServersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ServersRowChanging != null)) {
                    this.ServersRowChanging(this, new ServersRowChangeEvent(((ServersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ServersRowDeleted != null)) {
                    this.ServersRowDeleted(this, new ServersRowChangeEvent(((ServersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ServersRowDeleting != null)) {
                    this.ServersRowDeleting(this, new ServersRowChangeEvent(((ServersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveServersRow(ServersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DBABnch_LOCALDataSet ds = new DBABnch_LOCALDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ServersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UsersDataTable : global::System.Data.TypedTableBase<UsersRow> {
            
            private global::System.Data.DataColumn columnUserId;
            
            private global::System.Data.DataColumn columnDomainCd;
            
            private global::System.Data.DataColumn columnUserLogonNm;
            
            private global::System.Data.DataColumn columnUserLogonNm2000;
            
            private global::System.Data.DataColumn columnFirstName;
            
            private global::System.Data.DataColumn columnLastName;
            
            private global::System.Data.DataColumn columnDisplayName;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnOffice;
            
            private global::System.Data.DataColumn columnLongFormLogonNm;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UsersDataTable() {
                this.TableName = "Users";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal UsersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected UsersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UserIdColumn {
                get {
                    return this.columnUserId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DomainCdColumn {
                get {
                    return this.columnDomainCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UserLogonNmColumn {
                get {
                    return this.columnUserLogonNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UserLogonNm2000Column {
                get {
                    return this.columnUserLogonNm2000;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FirstNameColumn {
                get {
                    return this.columnFirstName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LastNameColumn {
                get {
                    return this.columnLastName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DisplayNameColumn {
                get {
                    return this.columnDisplayName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OfficeColumn {
                get {
                    return this.columnOffice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LongFormLogonNmColumn {
                get {
                    return this.columnLongFormLogonNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UsersRow this[int index] {
                get {
                    return ((UsersRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event UsersRowChangeEventHandler UsersRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event UsersRowChangeEventHandler UsersRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event UsersRowChangeEventHandler UsersRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event UsersRowChangeEventHandler UsersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddUsersRow(UsersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UsersRow AddUsersRow(string DomainCd, string UserLogonNm, string UserLogonNm2000, string FirstName, string LastName, string DisplayName, string Description, string Office, string LongFormLogonNm) {
                UsersRow rowUsersRow = ((UsersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        DomainCd,
                        UserLogonNm,
                        UserLogonNm2000,
                        FirstName,
                        LastName,
                        DisplayName,
                        Description,
                        Office,
                        LongFormLogonNm};
                rowUsersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUsersRow);
                return rowUsersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UsersRow FindByUserId(int UserId) {
                return ((UsersRow)(this.Rows.Find(new object[] {
                            UserId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                UsersDataTable cln = ((UsersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UsersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnUserId = base.Columns["UserId"];
                this.columnDomainCd = base.Columns["DomainCd"];
                this.columnUserLogonNm = base.Columns["UserLogonNm"];
                this.columnUserLogonNm2000 = base.Columns["UserLogonNm2000"];
                this.columnFirstName = base.Columns["FirstName"];
                this.columnLastName = base.Columns["LastName"];
                this.columnDisplayName = base.Columns["DisplayName"];
                this.columnDescription = base.Columns["Description"];
                this.columnOffice = base.Columns["Office"];
                this.columnLongFormLogonNm = base.Columns["LongFormLogonNm"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnUserId = new global::System.Data.DataColumn("UserId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserId);
                this.columnDomainCd = new global::System.Data.DataColumn("DomainCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDomainCd);
                this.columnUserLogonNm = new global::System.Data.DataColumn("UserLogonNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserLogonNm);
                this.columnUserLogonNm2000 = new global::System.Data.DataColumn("UserLogonNm2000", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserLogonNm2000);
                this.columnFirstName = new global::System.Data.DataColumn("FirstName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstName);
                this.columnLastName = new global::System.Data.DataColumn("LastName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastName);
                this.columnDisplayName = new global::System.Data.DataColumn("DisplayName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisplayName);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnOffice = new global::System.Data.DataColumn("Office", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOffice);
                this.columnLongFormLogonNm = new global::System.Data.DataColumn("LongFormLogonNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLongFormLogonNm);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnUserId}, true));
                this.columnUserId.AutoIncrement = true;
                this.columnUserId.AutoIncrementSeed = -1;
                this.columnUserId.AutoIncrementStep = -1;
                this.columnUserId.AllowDBNull = false;
                this.columnUserId.ReadOnly = true;
                this.columnUserId.Unique = true;
                this.columnDomainCd.AllowDBNull = false;
                this.columnDomainCd.MaxLength = 128;
                this.columnUserLogonNm.AllowDBNull = false;
                this.columnUserLogonNm.MaxLength = 100;
                this.columnUserLogonNm2000.AllowDBNull = false;
                this.columnUserLogonNm2000.MaxLength = 20;
                this.columnFirstName.AllowDBNull = false;
                this.columnFirstName.MaxLength = 128;
                this.columnLastName.MaxLength = 128;
                this.columnDisplayName.MaxLength = 128;
                this.columnDescription.MaxLength = 400;
                this.columnOffice.MaxLength = 200;
                this.columnLongFormLogonNm.ReadOnly = true;
                this.columnLongFormLogonNm.MaxLength = 149;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UsersRow NewUsersRow() {
                return ((UsersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UsersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(UsersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UsersRowChanged != null)) {
                    this.UsersRowChanged(this, new UsersRowChangeEvent(((UsersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UsersRowChanging != null)) {
                    this.UsersRowChanging(this, new UsersRowChangeEvent(((UsersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UsersRowDeleted != null)) {
                    this.UsersRowDeleted(this, new UsersRowChangeEvent(((UsersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UsersRowDeleting != null)) {
                    this.UsersRowDeleting(this, new UsersRowChangeEvent(((UsersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveUsersRow(UsersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DBABnch_LOCALDataSet ds = new DBABnch_LOCALDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UsersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TicketsDataTable : global::System.Data.TypedTableBase<TicketsRow> {
            
            private global::System.Data.DataColumn columnIncident_RecID;
            
            private global::System.Data.DataColumn columnIncidentID;
            
            private global::System.Data.DataColumn columnGlobalRegionCd;
            
            private global::System.Data.DataColumn columnJournalLastModified;
            
            private global::System.Data.DataColumn columnLastModifiedDateTime;
            
            private global::System.Data.DataColumn columnLocation;
            
            private global::System.Data.DataColumn columnSTATUS;
            
            private global::System.Data.DataColumn columnStat_NumberOfTouches;
            
            private global::System.Data.DataColumn columnWaiting4ThsMnyApprovals;
            
            private global::System.Data.DataColumn columnNofApprovedApprovals;
            
            private global::System.Data.DataColumn columnNofDeniedApprovals;
            
            private global::System.Data.DataColumn columnPendingReason;
            
            private global::System.Data.DataColumn columnStat_SLAResponseGood;
            
            private global::System.Data.DataColumn columnStat_SLAResponseWarning;
            
            private global::System.Data.DataColumn columnStat_SLAResponseBreached;
            
            private global::System.Data.DataColumn columnBreachNotes;
            
            private global::System.Data.DataColumn columnReasonForBreach;
            
            private global::System.Data.DataColumn columnStat_SLAResolutionWarning;
            
            private global::System.Data.DataColumn columnStat_SLAResolutionGood;
            
            private global::System.Data.DataColumn columnStat_SLAResolutionBreached;
            
            private global::System.Data.DataColumn columnNofUnreadJournals;
            
            private global::System.Data.DataColumn columnWithdrawn;
            
            private global::System.Data.DataColumn columnNeverFixedIncident;
            
            private global::System.Data.DataColumn columnCause;
            
            private global::System.Data.DataColumn columnPRIORITY;
            
            private global::System.Data.DataColumn columnImpact;
            
            private global::System.Data.DataColumn columnUrgency;
            
            private global::System.Data.DataColumn columnTeamTier;
            
            private global::System.Data.DataColumn columnL4Escalation;
            
            private global::System.Data.DataColumn columnInterestingDesc;
            
            private global::System.Data.DataColumn columnEnhancementDesc;
            
            private global::System.Data.DataColumn columnCommentsEntry;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnCloseDescription;
            
            private global::System.Data.DataColumn columnSERVICE;
            
            private global::System.Data.DataColumn columnCategory;
            
            private global::System.Data.DataColumn columnSubcategory;
            
            private global::System.Data.DataColumn columnWorkOrderType;
            
            private global::System.Data.DataColumn columnSupportArea;
            
            private global::System.Data.DataColumn columnPlatform;
            
            private global::System.Data.DataColumn columnSmartClassifySearchString;
            
            private global::System.Data.DataColumn columnMatchingText;
            
            private global::System.Data.DataColumn columnIncidentType;
            
            private global::System.Data.DataColumn columnAPPLICATION;
            
            private global::System.Data.DataColumn columnApplicationCommonName;
            
            private global::System.Data.DataColumn columnCallSource;
            
            private global::System.Data.DataColumn columnInitialITContact;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnSubmitOnBehalfOf;
            
            private global::System.Data.DataColumn columnSubmitOnBehalfOfTitle;
            
            private global::System.Data.DataColumn columnAssignedBy;
            
            private global::System.Data.DataColumn columnOwnedBy;
            
            private global::System.Data.DataColumn columnPreviousOwnedBy;
            
            private global::System.Data.DataColumn columnActualL1Approval;
            
            private global::System.Data.DataColumn columnOwnedByManager;
            
            private global::System.Data.DataColumn columnBRM;
            
            private global::System.Data.DataColumn columnCustomerDisplayName;
            
            private global::System.Data.DataColumn columnLastModBy;
            
            private global::System.Data.DataColumn columnWatchList;
            
            private global::System.Data.DataColumn columnCustomerWatchList;
            
            private global::System.Data.DataColumn columnTechnicianWatchList;
            
            private global::System.Data.DataColumn columnCCWatchlistRecipient;
            
            private global::System.Data.DataColumn columnOwnedByTeam;
            
            private global::System.Data.DataColumn columnCustomerDepartment;
            
            private global::System.Data.DataColumn columnBusinessGroup;
            
            private global::System.Data.DataColumn columnITBusinessGroup;
            
            private global::System.Data.DataColumn columnBusinessUnit;
            
            private global::System.Data.DataColumn columnDefaultTeam;
            
            private global::System.Data.DataColumn columnOldOwnedByTeam;
            
            private global::System.Data.DataColumn columnInitialAssignedTeam;
            
            private global::System.Data.DataColumn columnEDMHoldingTeam;
            
            private global::System.Data.DataColumn columnEDMApprovalAssignmentTeam;
            
            private global::System.Data.DataColumn columnEDMAssignmentTeam;
            
            private global::System.Data.DataColumn columnTeamOrPersonInvolvedWthThsTicket;
            
            private global::System.Data.DataColumn columnTeamOrPersonInvolvedNickName;
            
            private global::System.Data.DataColumn columnTeamOrPersonInvolvedLogin;
            
            private global::System.Data.DataColumn columnReasonForInvolvement;
            
            private global::System.Data.DataColumn columnNoteOnInvolvement;
            
            private global::System.Data.DataColumn columnCreatedDateTime;
            
            private global::System.Data.DataColumn columnCreatedDay;
            
            private global::System.Data.DataColumn columnCreatedHour;
            
            private global::System.Data.DataColumn columnNeedByDate1;
            
            private global::System.Data.DataColumn columnStat_DateTimeAssigned;
            
            private global::System.Data.DataColumn columnSLARespondByDeadline;
            
            private global::System.Data.DataColumn columnSLAResponseWarning;
            
            private global::System.Data.DataColumn columnStat_DateTimeResponded;
            
            private global::System.Data.DataColumn columnStat_DateTimeInProgress;
            
            private global::System.Data.DataColumn columnSLAResolutionWarning;
            
            private global::System.Data.DataColumn columnSLAResolveByDeadline;
            
            private global::System.Data.DataColumn columnStat_DateTimeResolved;
            
            private global::System.Data.DataColumn columnInvolvementLastModified;
            
            private global::System.Data.DataColumn columnStat_DateTimeClosed;
            
            private global::System.Data.DataColumn columnClosedDateTime;
            
            private global::System.Data.DataColumn columnStat_IncidentReopened;
            
            private global::System.Data.DataColumn columnStat_DateTimeReOpened;
            
            private global::System.Data.DataColumn _columnIncident_s_Been_Open_n_Hours;
            
            private global::System.Data.DataColumn columnStat_24x7ElapsedTime;
            
            private global::System.Data.DataColumn columnSTCTimeInMinutes;
            
            private global::System.Data.DataColumn columnTotalSTCTimeInMinutes;
            
            private global::System.Data.DataColumn columnTimeInApproval247;
            
            private global::System.Data.DataColumn columnIncidentDurationFromAssignToResolve;
            
            private global::System.Data.DataColumn columnIncidentDurationInBusinessHours;
            
            private global::System.Data.DataColumn columnIncidentDurationInHours;
            
            private global::System.Data.DataColumn columnIncidentDurationWOPending;
            
            private global::System.Data.DataColumn columnIncidentDUrationBusinessDaysPendings;
            
            private global::System.Data.DataColumn columnIncidentDurationWithoutPendingBH;
            
            private global::System.Data.DataColumn columnIncidentDurationWithoutPendingH;
            
            private global::System.Data.DataColumn columnTotalTaskTime;
            
            private global::System.Data.DataColumn columnTotalNofTasks;
            
            private global::System.Data.DataColumn columnHasAtLeastOneTaskInProgress;
            
            private global::System.Data.DataColumn columnHasAtLeastOneTaskOnHold;
            
            private global::System.Data.DataColumn columnHasAtLeastOneClosedTask;
            
            private global::System.Data.DataColumn columnTaskClosedCount;
            
            private global::System.Data.DataColumn columnHasNoOpenTasks;
            
            private global::System.Data.DataColumn columnCherwellVersion;
            
            private global::System.Data.DataColumn columnCherwellVersionNm;
            
            private global::System.Data.DataColumn columnLastInvolvment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TicketsDataTable() {
                this.TableName = "Tickets";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TicketsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected TicketsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Incident_RecIDColumn {
                get {
                    return this.columnIncident_RecID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IncidentIDColumn {
                get {
                    return this.columnIncidentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GlobalRegionCdColumn {
                get {
                    return this.columnGlobalRegionCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn JournalLastModifiedColumn {
                get {
                    return this.columnJournalLastModified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LastModifiedDateTimeColumn {
                get {
                    return this.columnLastModifiedDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LocationColumn {
                get {
                    return this.columnLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn STATUSColumn {
                get {
                    return this.columnSTATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Stat_NumberOfTouchesColumn {
                get {
                    return this.columnStat_NumberOfTouches;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Waiting4ThsMnyApprovalsColumn {
                get {
                    return this.columnWaiting4ThsMnyApprovals;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NofApprovedApprovalsColumn {
                get {
                    return this.columnNofApprovedApprovals;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NofDeniedApprovalsColumn {
                get {
                    return this.columnNofDeniedApprovals;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PendingReasonColumn {
                get {
                    return this.columnPendingReason;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Stat_SLAResponseGoodColumn {
                get {
                    return this.columnStat_SLAResponseGood;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Stat_SLAResponseWarningColumn {
                get {
                    return this.columnStat_SLAResponseWarning;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Stat_SLAResponseBreachedColumn {
                get {
                    return this.columnStat_SLAResponseBreached;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BreachNotesColumn {
                get {
                    return this.columnBreachNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ReasonForBreachColumn {
                get {
                    return this.columnReasonForBreach;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Stat_SLAResolutionWarningColumn {
                get {
                    return this.columnStat_SLAResolutionWarning;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Stat_SLAResolutionGoodColumn {
                get {
                    return this.columnStat_SLAResolutionGood;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Stat_SLAResolutionBreachedColumn {
                get {
                    return this.columnStat_SLAResolutionBreached;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NofUnreadJournalsColumn {
                get {
                    return this.columnNofUnreadJournals;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WithdrawnColumn {
                get {
                    return this.columnWithdrawn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NeverFixedIncidentColumn {
                get {
                    return this.columnNeverFixedIncident;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CauseColumn {
                get {
                    return this.columnCause;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PRIORITYColumn {
                get {
                    return this.columnPRIORITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ImpactColumn {
                get {
                    return this.columnImpact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UrgencyColumn {
                get {
                    return this.columnUrgency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TeamTierColumn {
                get {
                    return this.columnTeamTier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn L4EscalationColumn {
                get {
                    return this.columnL4Escalation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InterestingDescColumn {
                get {
                    return this.columnInterestingDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EnhancementDescColumn {
                get {
                    return this.columnEnhancementDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CommentsEntryColumn {
                get {
                    return this.columnCommentsEntry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CloseDescriptionColumn {
                get {
                    return this.columnCloseDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SERVICEColumn {
                get {
                    return this.columnSERVICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CategoryColumn {
                get {
                    return this.columnCategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SubcategoryColumn {
                get {
                    return this.columnSubcategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WorkOrderTypeColumn {
                get {
                    return this.columnWorkOrderType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SupportAreaColumn {
                get {
                    return this.columnSupportArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PlatformColumn {
                get {
                    return this.columnPlatform;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SmartClassifySearchStringColumn {
                get {
                    return this.columnSmartClassifySearchString;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MatchingTextColumn {
                get {
                    return this.columnMatchingText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IncidentTypeColumn {
                get {
                    return this.columnIncidentType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn APPLICATIONColumn {
                get {
                    return this.columnAPPLICATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ApplicationCommonNameColumn {
                get {
                    return this.columnApplicationCommonName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CallSourceColumn {
                get {
                    return this.columnCallSource;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InitialITContactColumn {
                get {
                    return this.columnInitialITContact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SubmitOnBehalfOfColumn {
                get {
                    return this.columnSubmitOnBehalfOf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SubmitOnBehalfOfTitleColumn {
                get {
                    return this.columnSubmitOnBehalfOfTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AssignedByColumn {
                get {
                    return this.columnAssignedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OwnedByColumn {
                get {
                    return this.columnOwnedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PreviousOwnedByColumn {
                get {
                    return this.columnPreviousOwnedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ActualL1ApprovalColumn {
                get {
                    return this.columnActualL1Approval;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OwnedByManagerColumn {
                get {
                    return this.columnOwnedByManager;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BRMColumn {
                get {
                    return this.columnBRM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CustomerDisplayNameColumn {
                get {
                    return this.columnCustomerDisplayName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LastModByColumn {
                get {
                    return this.columnLastModBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WatchListColumn {
                get {
                    return this.columnWatchList;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CustomerWatchListColumn {
                get {
                    return this.columnCustomerWatchList;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TechnicianWatchListColumn {
                get {
                    return this.columnTechnicianWatchList;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CCWatchlistRecipientColumn {
                get {
                    return this.columnCCWatchlistRecipient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OwnedByTeamColumn {
                get {
                    return this.columnOwnedByTeam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CustomerDepartmentColumn {
                get {
                    return this.columnCustomerDepartment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BusinessGroupColumn {
                get {
                    return this.columnBusinessGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ITBusinessGroupColumn {
                get {
                    return this.columnITBusinessGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BusinessUnitColumn {
                get {
                    return this.columnBusinessUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DefaultTeamColumn {
                get {
                    return this.columnDefaultTeam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OldOwnedByTeamColumn {
                get {
                    return this.columnOldOwnedByTeam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InitialAssignedTeamColumn {
                get {
                    return this.columnInitialAssignedTeam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EDMHoldingTeamColumn {
                get {
                    return this.columnEDMHoldingTeam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EDMApprovalAssignmentTeamColumn {
                get {
                    return this.columnEDMApprovalAssignmentTeam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EDMAssignmentTeamColumn {
                get {
                    return this.columnEDMAssignmentTeam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TeamOrPersonInvolvedWthThsTicketColumn {
                get {
                    return this.columnTeamOrPersonInvolvedWthThsTicket;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TeamOrPersonInvolvedNickNameColumn {
                get {
                    return this.columnTeamOrPersonInvolvedNickName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TeamOrPersonInvolvedLoginColumn {
                get {
                    return this.columnTeamOrPersonInvolvedLogin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ReasonForInvolvementColumn {
                get {
                    return this.columnReasonForInvolvement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NoteOnInvolvementColumn {
                get {
                    return this.columnNoteOnInvolvement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CreatedDateTimeColumn {
                get {
                    return this.columnCreatedDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CreatedDayColumn {
                get {
                    return this.columnCreatedDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CreatedHourColumn {
                get {
                    return this.columnCreatedHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NeedByDate1Column {
                get {
                    return this.columnNeedByDate1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Stat_DateTimeAssignedColumn {
                get {
                    return this.columnStat_DateTimeAssigned;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SLARespondByDeadlineColumn {
                get {
                    return this.columnSLARespondByDeadline;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SLAResponseWarningColumn {
                get {
                    return this.columnSLAResponseWarning;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Stat_DateTimeRespondedColumn {
                get {
                    return this.columnStat_DateTimeResponded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Stat_DateTimeInProgressColumn {
                get {
                    return this.columnStat_DateTimeInProgress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SLAResolutionWarningColumn {
                get {
                    return this.columnSLAResolutionWarning;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SLAResolveByDeadlineColumn {
                get {
                    return this.columnSLAResolveByDeadline;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Stat_DateTimeResolvedColumn {
                get {
                    return this.columnStat_DateTimeResolved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InvolvementLastModifiedColumn {
                get {
                    return this.columnInvolvementLastModified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Stat_DateTimeClosedColumn {
                get {
                    return this.columnStat_DateTimeClosed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ClosedDateTimeColumn {
                get {
                    return this.columnClosedDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Stat_IncidentReopenedColumn {
                get {
                    return this.columnStat_IncidentReopened;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Stat_DateTimeReOpenedColumn {
                get {
                    return this.columnStat_DateTimeReOpened;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn _Incident_s_Been_Open_n_HoursColumn {
                get {
                    return this._columnIncident_s_Been_Open_n_Hours;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Stat_24x7ElapsedTimeColumn {
                get {
                    return this.columnStat_24x7ElapsedTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn STCTimeInMinutesColumn {
                get {
                    return this.columnSTCTimeInMinutes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TotalSTCTimeInMinutesColumn {
                get {
                    return this.columnTotalSTCTimeInMinutes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TimeInApproval247Column {
                get {
                    return this.columnTimeInApproval247;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IncidentDurationFromAssignToResolveColumn {
                get {
                    return this.columnIncidentDurationFromAssignToResolve;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IncidentDurationInBusinessHoursColumn {
                get {
                    return this.columnIncidentDurationInBusinessHours;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IncidentDurationInHoursColumn {
                get {
                    return this.columnIncidentDurationInHours;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IncidentDurationWOPendingColumn {
                get {
                    return this.columnIncidentDurationWOPending;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IncidentDUrationBusinessDaysPendingsColumn {
                get {
                    return this.columnIncidentDUrationBusinessDaysPendings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IncidentDurationWithoutPendingBHColumn {
                get {
                    return this.columnIncidentDurationWithoutPendingBH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IncidentDurationWithoutPendingHColumn {
                get {
                    return this.columnIncidentDurationWithoutPendingH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TotalTaskTimeColumn {
                get {
                    return this.columnTotalTaskTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TotalNofTasksColumn {
                get {
                    return this.columnTotalNofTasks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HasAtLeastOneTaskInProgressColumn {
                get {
                    return this.columnHasAtLeastOneTaskInProgress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HasAtLeastOneTaskOnHoldColumn {
                get {
                    return this.columnHasAtLeastOneTaskOnHold;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HasAtLeastOneClosedTaskColumn {
                get {
                    return this.columnHasAtLeastOneClosedTask;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TaskClosedCountColumn {
                get {
                    return this.columnTaskClosedCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HasNoOpenTasksColumn {
                get {
                    return this.columnHasNoOpenTasks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CherwellVersionColumn {
                get {
                    return this.columnCherwellVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CherwellVersionNmColumn {
                get {
                    return this.columnCherwellVersionNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LastInvolvmentColumn {
                get {
                    return this.columnLastInvolvment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TicketsRow this[int index] {
                get {
                    return ((TicketsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TicketsRowChangeEventHandler TicketsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TicketsRowChangeEventHandler TicketsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TicketsRowChangeEventHandler TicketsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TicketsRowChangeEventHandler TicketsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddTicketsRow(TicketsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TicketsRow AddTicketsRow(
                        string Incident_RecID, 
                        string IncidentID, 
                        string GlobalRegionCd, 
                        System.DateTime JournalLastModified, 
                        System.DateTime LastModifiedDateTime, 
                        string Location, 
                        string STATUS, 
                        int Stat_NumberOfTouches, 
                        int Waiting4ThsMnyApprovals, 
                        int NofApprovedApprovals, 
                        int NofDeniedApprovals, 
                        string PendingReason, 
                        string Stat_SLAResponseGood, 
                        bool Stat_SLAResponseWarning, 
                        string Stat_SLAResponseBreached, 
                        string BreachNotes, 
                        string ReasonForBreach, 
                        bool Stat_SLAResolutionWarning, 
                        bool Stat_SLAResolutionGood, 
                        bool Stat_SLAResolutionBreached, 
                        string NofUnreadJournals, 
                        bool Withdrawn, 
                        bool NeverFixedIncident, 
                        string Cause, 
                        string PRIORITY, 
                        string Impact, 
                        string Urgency, 
                        int TeamTier, 
                        bool L4Escalation, 
                        string InterestingDesc, 
                        string EnhancementDesc, 
                        string CommentsEntry, 
                        string Comments, 
                        string CloseDescription, 
                        string SERVICE, 
                        string Category, 
                        string Subcategory, 
                        string WorkOrderType, 
                        string SupportArea, 
                        string Platform, 
                        string SmartClassifySearchString, 
                        string MatchingText, 
                        string IncidentType, 
                        string APPLICATION, 
                        string ApplicationCommonName, 
                        string CallSource, 
                        string InitialITContact, 
                        string CreatedBy, 
                        string SubmitOnBehalfOf, 
                        string SubmitOnBehalfOfTitle, 
                        string AssignedBy, 
                        string OwnedBy, 
                        string PreviousOwnedBy, 
                        string ActualL1Approval, 
                        string OwnedByManager, 
                        string BRM, 
                        string CustomerDisplayName, 
                        string LastModBy, 
                        string WatchList, 
                        string CustomerWatchList, 
                        string TechnicianWatchList, 
                        string CCWatchlistRecipient, 
                        string OwnedByTeam, 
                        string CustomerDepartment, 
                        string BusinessGroup, 
                        string ITBusinessGroup, 
                        string BusinessUnit, 
                        string DefaultTeam, 
                        string OldOwnedByTeam, 
                        string InitialAssignedTeam, 
                        string EDMHoldingTeam, 
                        string EDMApprovalAssignmentTeam, 
                        string EDMAssignmentTeam, 
                        string TeamOrPersonInvolvedWthThsTicket, 
                        string TeamOrPersonInvolvedNickName, 
                        string TeamOrPersonInvolvedLogin, 
                        string ReasonForInvolvement, 
                        string NoteOnInvolvement, 
                        System.DateTime CreatedDateTime, 
                        string CreatedDay, 
                        string CreatedHour, 
                        System.DateTime NeedByDate1, 
                        System.DateTime Stat_DateTimeAssigned, 
                        System.DateTime SLARespondByDeadline, 
                        System.DateTime SLAResponseWarning, 
                        System.DateTime Stat_DateTimeResponded, 
                        System.DateTime Stat_DateTimeInProgress, 
                        System.DateTime SLAResolutionWarning, 
                        System.DateTime SLAResolveByDeadline, 
                        System.DateTime Stat_DateTimeResolved, 
                        System.DateTime InvolvementLastModified, 
                        System.DateTime Stat_DateTimeClosed, 
                        System.DateTime ClosedDateTime, 
                        bool Stat_IncidentReopened, 
                        System.DateTime Stat_DateTimeReOpened, 
                        decimal _Incident_s_Been_Open_n_Hours, 
                        int Stat_24x7ElapsedTime, 
                        int STCTimeInMinutes, 
                        int TotalSTCTimeInMinutes, 
                        decimal TimeInApproval247, 
                        decimal IncidentDurationFromAssignToResolve, 
                        decimal IncidentDurationInBusinessHours, 
                        decimal IncidentDurationInHours, 
                        decimal IncidentDurationWOPending, 
                        int IncidentDUrationBusinessDaysPendings, 
                        decimal IncidentDurationWithoutPendingBH, 
                        decimal IncidentDurationWithoutPendingH, 
                        decimal TotalTaskTime, 
                        int TotalNofTasks, 
                        bool HasAtLeastOneTaskInProgress, 
                        bool HasAtLeastOneTaskOnHold, 
                        bool HasAtLeastOneClosedTask, 
                        int TaskClosedCount, 
                        bool HasNoOpenTasks, 
                        int CherwellVersion, 
                        string CherwellVersionNm, 
                        System.DateTime LastInvolvment) {
                TicketsRow rowTicketsRow = ((TicketsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Incident_RecID,
                        IncidentID,
                        GlobalRegionCd,
                        JournalLastModified,
                        LastModifiedDateTime,
                        Location,
                        STATUS,
                        Stat_NumberOfTouches,
                        Waiting4ThsMnyApprovals,
                        NofApprovedApprovals,
                        NofDeniedApprovals,
                        PendingReason,
                        Stat_SLAResponseGood,
                        Stat_SLAResponseWarning,
                        Stat_SLAResponseBreached,
                        BreachNotes,
                        ReasonForBreach,
                        Stat_SLAResolutionWarning,
                        Stat_SLAResolutionGood,
                        Stat_SLAResolutionBreached,
                        NofUnreadJournals,
                        Withdrawn,
                        NeverFixedIncident,
                        Cause,
                        PRIORITY,
                        Impact,
                        Urgency,
                        TeamTier,
                        L4Escalation,
                        InterestingDesc,
                        EnhancementDesc,
                        CommentsEntry,
                        Comments,
                        CloseDescription,
                        SERVICE,
                        Category,
                        Subcategory,
                        WorkOrderType,
                        SupportArea,
                        Platform,
                        SmartClassifySearchString,
                        MatchingText,
                        IncidentType,
                        APPLICATION,
                        ApplicationCommonName,
                        CallSource,
                        InitialITContact,
                        CreatedBy,
                        SubmitOnBehalfOf,
                        SubmitOnBehalfOfTitle,
                        AssignedBy,
                        OwnedBy,
                        PreviousOwnedBy,
                        ActualL1Approval,
                        OwnedByManager,
                        BRM,
                        CustomerDisplayName,
                        LastModBy,
                        WatchList,
                        CustomerWatchList,
                        TechnicianWatchList,
                        CCWatchlistRecipient,
                        OwnedByTeam,
                        CustomerDepartment,
                        BusinessGroup,
                        ITBusinessGroup,
                        BusinessUnit,
                        DefaultTeam,
                        OldOwnedByTeam,
                        InitialAssignedTeam,
                        EDMHoldingTeam,
                        EDMApprovalAssignmentTeam,
                        EDMAssignmentTeam,
                        TeamOrPersonInvolvedWthThsTicket,
                        TeamOrPersonInvolvedNickName,
                        TeamOrPersonInvolvedLogin,
                        ReasonForInvolvement,
                        NoteOnInvolvement,
                        CreatedDateTime,
                        CreatedDay,
                        CreatedHour,
                        NeedByDate1,
                        Stat_DateTimeAssigned,
                        SLARespondByDeadline,
                        SLAResponseWarning,
                        Stat_DateTimeResponded,
                        Stat_DateTimeInProgress,
                        SLAResolutionWarning,
                        SLAResolveByDeadline,
                        Stat_DateTimeResolved,
                        InvolvementLastModified,
                        Stat_DateTimeClosed,
                        ClosedDateTime,
                        Stat_IncidentReopened,
                        Stat_DateTimeReOpened,
                        _Incident_s_Been_Open_n_Hours,
                        Stat_24x7ElapsedTime,
                        STCTimeInMinutes,
                        TotalSTCTimeInMinutes,
                        TimeInApproval247,
                        IncidentDurationFromAssignToResolve,
                        IncidentDurationInBusinessHours,
                        IncidentDurationInHours,
                        IncidentDurationWOPending,
                        IncidentDUrationBusinessDaysPendings,
                        IncidentDurationWithoutPendingBH,
                        IncidentDurationWithoutPendingH,
                        TotalTaskTime,
                        TotalNofTasks,
                        HasAtLeastOneTaskInProgress,
                        HasAtLeastOneTaskOnHold,
                        HasAtLeastOneClosedTask,
                        TaskClosedCount,
                        HasNoOpenTasks,
                        CherwellVersion,
                        CherwellVersionNm,
                        LastInvolvment};
                rowTicketsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTicketsRow);
                return rowTicketsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TicketsDataTable cln = ((TicketsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TicketsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnIncident_RecID = base.Columns["Incident_RecID"];
                this.columnIncidentID = base.Columns["IncidentID"];
                this.columnGlobalRegionCd = base.Columns["GlobalRegionCd"];
                this.columnJournalLastModified = base.Columns["JournalLastModified"];
                this.columnLastModifiedDateTime = base.Columns["LastModifiedDateTime"];
                this.columnLocation = base.Columns["Location"];
                this.columnSTATUS = base.Columns["STATUS"];
                this.columnStat_NumberOfTouches = base.Columns["Stat_NumberOfTouches"];
                this.columnWaiting4ThsMnyApprovals = base.Columns["Waiting4ThsMnyApprovals"];
                this.columnNofApprovedApprovals = base.Columns["NofApprovedApprovals"];
                this.columnNofDeniedApprovals = base.Columns["NofDeniedApprovals"];
                this.columnPendingReason = base.Columns["PendingReason"];
                this.columnStat_SLAResponseGood = base.Columns["Stat_SLAResponseGood"];
                this.columnStat_SLAResponseWarning = base.Columns["Stat_SLAResponseWarning"];
                this.columnStat_SLAResponseBreached = base.Columns["Stat_SLAResponseBreached"];
                this.columnBreachNotes = base.Columns["BreachNotes"];
                this.columnReasonForBreach = base.Columns["ReasonForBreach"];
                this.columnStat_SLAResolutionWarning = base.Columns["Stat_SLAResolutionWarning"];
                this.columnStat_SLAResolutionGood = base.Columns["Stat_SLAResolutionGood"];
                this.columnStat_SLAResolutionBreached = base.Columns["Stat_SLAResolutionBreached"];
                this.columnNofUnreadJournals = base.Columns["NofUnreadJournals"];
                this.columnWithdrawn = base.Columns["Withdrawn"];
                this.columnNeverFixedIncident = base.Columns["NeverFixedIncident"];
                this.columnCause = base.Columns["Cause"];
                this.columnPRIORITY = base.Columns["PRIORITY"];
                this.columnImpact = base.Columns["Impact"];
                this.columnUrgency = base.Columns["Urgency"];
                this.columnTeamTier = base.Columns["TeamTier"];
                this.columnL4Escalation = base.Columns["L4Escalation"];
                this.columnInterestingDesc = base.Columns["InterestingDesc"];
                this.columnEnhancementDesc = base.Columns["EnhancementDesc"];
                this.columnCommentsEntry = base.Columns["CommentsEntry"];
                this.columnComments = base.Columns["Comments"];
                this.columnCloseDescription = base.Columns["CloseDescription"];
                this.columnSERVICE = base.Columns["SERVICE"];
                this.columnCategory = base.Columns["Category"];
                this.columnSubcategory = base.Columns["Subcategory"];
                this.columnWorkOrderType = base.Columns["WorkOrderType"];
                this.columnSupportArea = base.Columns["SupportArea"];
                this.columnPlatform = base.Columns["Platform"];
                this.columnSmartClassifySearchString = base.Columns["SmartClassifySearchString"];
                this.columnMatchingText = base.Columns["MatchingText"];
                this.columnIncidentType = base.Columns["IncidentType"];
                this.columnAPPLICATION = base.Columns["APPLICATION"];
                this.columnApplicationCommonName = base.Columns["ApplicationCommonName"];
                this.columnCallSource = base.Columns["CallSource"];
                this.columnInitialITContact = base.Columns["InitialITContact"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnSubmitOnBehalfOf = base.Columns["SubmitOnBehalfOf"];
                this.columnSubmitOnBehalfOfTitle = base.Columns["SubmitOnBehalfOfTitle"];
                this.columnAssignedBy = base.Columns["AssignedBy"];
                this.columnOwnedBy = base.Columns["OwnedBy"];
                this.columnPreviousOwnedBy = base.Columns["PreviousOwnedBy"];
                this.columnActualL1Approval = base.Columns["ActualL1Approval"];
                this.columnOwnedByManager = base.Columns["OwnedByManager"];
                this.columnBRM = base.Columns["BRM"];
                this.columnCustomerDisplayName = base.Columns["CustomerDisplayName"];
                this.columnLastModBy = base.Columns["LastModBy"];
                this.columnWatchList = base.Columns["WatchList"];
                this.columnCustomerWatchList = base.Columns["CustomerWatchList"];
                this.columnTechnicianWatchList = base.Columns["TechnicianWatchList"];
                this.columnCCWatchlistRecipient = base.Columns["CCWatchlistRecipient"];
                this.columnOwnedByTeam = base.Columns["OwnedByTeam"];
                this.columnCustomerDepartment = base.Columns["CustomerDepartment"];
                this.columnBusinessGroup = base.Columns["BusinessGroup"];
                this.columnITBusinessGroup = base.Columns["ITBusinessGroup"];
                this.columnBusinessUnit = base.Columns["BusinessUnit"];
                this.columnDefaultTeam = base.Columns["DefaultTeam"];
                this.columnOldOwnedByTeam = base.Columns["OldOwnedByTeam"];
                this.columnInitialAssignedTeam = base.Columns["InitialAssignedTeam"];
                this.columnEDMHoldingTeam = base.Columns["EDMHoldingTeam"];
                this.columnEDMApprovalAssignmentTeam = base.Columns["EDMApprovalAssignmentTeam"];
                this.columnEDMAssignmentTeam = base.Columns["EDMAssignmentTeam"];
                this.columnTeamOrPersonInvolvedWthThsTicket = base.Columns["TeamOrPersonInvolvedWthThsTicket"];
                this.columnTeamOrPersonInvolvedNickName = base.Columns["TeamOrPersonInvolvedNickName"];
                this.columnTeamOrPersonInvolvedLogin = base.Columns["TeamOrPersonInvolvedLogin"];
                this.columnReasonForInvolvement = base.Columns["ReasonForInvolvement"];
                this.columnNoteOnInvolvement = base.Columns["NoteOnInvolvement"];
                this.columnCreatedDateTime = base.Columns["CreatedDateTime"];
                this.columnCreatedDay = base.Columns["CreatedDay"];
                this.columnCreatedHour = base.Columns["CreatedHour"];
                this.columnNeedByDate1 = base.Columns["NeedByDate1"];
                this.columnStat_DateTimeAssigned = base.Columns["Stat_DateTimeAssigned"];
                this.columnSLARespondByDeadline = base.Columns["SLARespondByDeadline"];
                this.columnSLAResponseWarning = base.Columns["SLAResponseWarning"];
                this.columnStat_DateTimeResponded = base.Columns["Stat_DateTimeResponded"];
                this.columnStat_DateTimeInProgress = base.Columns["Stat_DateTimeInProgress"];
                this.columnSLAResolutionWarning = base.Columns["SLAResolutionWarning"];
                this.columnSLAResolveByDeadline = base.Columns["SLAResolveByDeadline"];
                this.columnStat_DateTimeResolved = base.Columns["Stat_DateTimeResolved"];
                this.columnInvolvementLastModified = base.Columns["InvolvementLastModified"];
                this.columnStat_DateTimeClosed = base.Columns["Stat_DateTimeClosed"];
                this.columnClosedDateTime = base.Columns["ClosedDateTime"];
                this.columnStat_IncidentReopened = base.Columns["Stat_IncidentReopened"];
                this.columnStat_DateTimeReOpened = base.Columns["Stat_DateTimeReOpened"];
                this._columnIncident_s_Been_Open_n_Hours = base.Columns["Incident\'s Been Open n Hours"];
                this.columnStat_24x7ElapsedTime = base.Columns["Stat_24x7ElapsedTime"];
                this.columnSTCTimeInMinutes = base.Columns["STCTimeInMinutes"];
                this.columnTotalSTCTimeInMinutes = base.Columns["TotalSTCTimeInMinutes"];
                this.columnTimeInApproval247 = base.Columns["TimeInApproval247"];
                this.columnIncidentDurationFromAssignToResolve = base.Columns["IncidentDurationFromAssignToResolve"];
                this.columnIncidentDurationInBusinessHours = base.Columns["IncidentDurationInBusinessHours"];
                this.columnIncidentDurationInHours = base.Columns["IncidentDurationInHours"];
                this.columnIncidentDurationWOPending = base.Columns["IncidentDurationWOPending"];
                this.columnIncidentDUrationBusinessDaysPendings = base.Columns["IncidentDUrationBusinessDaysPendings"];
                this.columnIncidentDurationWithoutPendingBH = base.Columns["IncidentDurationWithoutPendingBH"];
                this.columnIncidentDurationWithoutPendingH = base.Columns["IncidentDurationWithoutPendingH"];
                this.columnTotalTaskTime = base.Columns["TotalTaskTime"];
                this.columnTotalNofTasks = base.Columns["TotalNofTasks"];
                this.columnHasAtLeastOneTaskInProgress = base.Columns["HasAtLeastOneTaskInProgress"];
                this.columnHasAtLeastOneTaskOnHold = base.Columns["HasAtLeastOneTaskOnHold"];
                this.columnHasAtLeastOneClosedTask = base.Columns["HasAtLeastOneClosedTask"];
                this.columnTaskClosedCount = base.Columns["TaskClosedCount"];
                this.columnHasNoOpenTasks = base.Columns["HasNoOpenTasks"];
                this.columnCherwellVersion = base.Columns["CherwellVersion"];
                this.columnCherwellVersionNm = base.Columns["CherwellVersionNm"];
                this.columnLastInvolvment = base.Columns["LastInvolvment"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnIncident_RecID = new global::System.Data.DataColumn("Incident_RecID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncident_RecID);
                this.columnIncidentID = new global::System.Data.DataColumn("IncidentID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncidentID);
                this.columnGlobalRegionCd = new global::System.Data.DataColumn("GlobalRegionCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGlobalRegionCd);
                this.columnJournalLastModified = new global::System.Data.DataColumn("JournalLastModified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJournalLastModified);
                this.columnLastModifiedDateTime = new global::System.Data.DataColumn("LastModifiedDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastModifiedDateTime);
                this.columnLocation = new global::System.Data.DataColumn("Location", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation);
                this.columnSTATUS = new global::System.Data.DataColumn("STATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATUS);
                this.columnStat_NumberOfTouches = new global::System.Data.DataColumn("Stat_NumberOfTouches", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStat_NumberOfTouches);
                this.columnWaiting4ThsMnyApprovals = new global::System.Data.DataColumn("Waiting4ThsMnyApprovals", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWaiting4ThsMnyApprovals);
                this.columnNofApprovedApprovals = new global::System.Data.DataColumn("NofApprovedApprovals", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNofApprovedApprovals);
                this.columnNofDeniedApprovals = new global::System.Data.DataColumn("NofDeniedApprovals", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNofDeniedApprovals);
                this.columnPendingReason = new global::System.Data.DataColumn("PendingReason", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPendingReason);
                this.columnStat_SLAResponseGood = new global::System.Data.DataColumn("Stat_SLAResponseGood", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStat_SLAResponseGood);
                this.columnStat_SLAResponseWarning = new global::System.Data.DataColumn("Stat_SLAResponseWarning", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStat_SLAResponseWarning);
                this.columnStat_SLAResponseBreached = new global::System.Data.DataColumn("Stat_SLAResponseBreached", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStat_SLAResponseBreached);
                this.columnBreachNotes = new global::System.Data.DataColumn("BreachNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBreachNotes);
                this.columnReasonForBreach = new global::System.Data.DataColumn("ReasonForBreach", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReasonForBreach);
                this.columnStat_SLAResolutionWarning = new global::System.Data.DataColumn("Stat_SLAResolutionWarning", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStat_SLAResolutionWarning);
                this.columnStat_SLAResolutionGood = new global::System.Data.DataColumn("Stat_SLAResolutionGood", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStat_SLAResolutionGood);
                this.columnStat_SLAResolutionBreached = new global::System.Data.DataColumn("Stat_SLAResolutionBreached", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStat_SLAResolutionBreached);
                this.columnNofUnreadJournals = new global::System.Data.DataColumn("NofUnreadJournals", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNofUnreadJournals);
                this.columnWithdrawn = new global::System.Data.DataColumn("Withdrawn", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWithdrawn);
                this.columnNeverFixedIncident = new global::System.Data.DataColumn("NeverFixedIncident", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNeverFixedIncident);
                this.columnCause = new global::System.Data.DataColumn("Cause", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCause);
                this.columnPRIORITY = new global::System.Data.DataColumn("PRIORITY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRIORITY);
                this.columnImpact = new global::System.Data.DataColumn("Impact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImpact);
                this.columnUrgency = new global::System.Data.DataColumn("Urgency", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUrgency);
                this.columnTeamTier = new global::System.Data.DataColumn("TeamTier", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTeamTier);
                this.columnL4Escalation = new global::System.Data.DataColumn("L4Escalation", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL4Escalation);
                this.columnInterestingDesc = new global::System.Data.DataColumn("InterestingDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterestingDesc);
                this.columnEnhancementDesc = new global::System.Data.DataColumn("EnhancementDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnhancementDesc);
                this.columnCommentsEntry = new global::System.Data.DataColumn("CommentsEntry", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommentsEntry);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnCloseDescription = new global::System.Data.DataColumn("CloseDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCloseDescription);
                this.columnSERVICE = new global::System.Data.DataColumn("SERVICE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERVICE);
                this.columnCategory = new global::System.Data.DataColumn("Category", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategory);
                this.columnSubcategory = new global::System.Data.DataColumn("Subcategory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubcategory);
                this.columnWorkOrderType = new global::System.Data.DataColumn("WorkOrderType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkOrderType);
                this.columnSupportArea = new global::System.Data.DataColumn("SupportArea", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupportArea);
                this.columnPlatform = new global::System.Data.DataColumn("Platform", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlatform);
                this.columnSmartClassifySearchString = new global::System.Data.DataColumn("SmartClassifySearchString", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSmartClassifySearchString);
                this.columnMatchingText = new global::System.Data.DataColumn("MatchingText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMatchingText);
                this.columnIncidentType = new global::System.Data.DataColumn("IncidentType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncidentType);
                this.columnAPPLICATION = new global::System.Data.DataColumn("APPLICATION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPPLICATION);
                this.columnApplicationCommonName = new global::System.Data.DataColumn("ApplicationCommonName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplicationCommonName);
                this.columnCallSource = new global::System.Data.DataColumn("CallSource", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCallSource);
                this.columnInitialITContact = new global::System.Data.DataColumn("InitialITContact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInitialITContact);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnSubmitOnBehalfOf = new global::System.Data.DataColumn("SubmitOnBehalfOf", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubmitOnBehalfOf);
                this.columnSubmitOnBehalfOfTitle = new global::System.Data.DataColumn("SubmitOnBehalfOfTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubmitOnBehalfOfTitle);
                this.columnAssignedBy = new global::System.Data.DataColumn("AssignedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssignedBy);
                this.columnOwnedBy = new global::System.Data.DataColumn("OwnedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnedBy);
                this.columnPreviousOwnedBy = new global::System.Data.DataColumn("PreviousOwnedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreviousOwnedBy);
                this.columnActualL1Approval = new global::System.Data.DataColumn("ActualL1Approval", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualL1Approval);
                this.columnOwnedByManager = new global::System.Data.DataColumn("OwnedByManager", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnedByManager);
                this.columnBRM = new global::System.Data.DataColumn("BRM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRM);
                this.columnCustomerDisplayName = new global::System.Data.DataColumn("CustomerDisplayName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerDisplayName);
                this.columnLastModBy = new global::System.Data.DataColumn("LastModBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastModBy);
                this.columnWatchList = new global::System.Data.DataColumn("WatchList", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWatchList);
                this.columnCustomerWatchList = new global::System.Data.DataColumn("CustomerWatchList", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerWatchList);
                this.columnTechnicianWatchList = new global::System.Data.DataColumn("TechnicianWatchList", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTechnicianWatchList);
                this.columnCCWatchlistRecipient = new global::System.Data.DataColumn("CCWatchlistRecipient", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCCWatchlistRecipient);
                this.columnOwnedByTeam = new global::System.Data.DataColumn("OwnedByTeam", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnedByTeam);
                this.columnCustomerDepartment = new global::System.Data.DataColumn("CustomerDepartment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerDepartment);
                this.columnBusinessGroup = new global::System.Data.DataColumn("BusinessGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessGroup);
                this.columnITBusinessGroup = new global::System.Data.DataColumn("ITBusinessGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITBusinessGroup);
                this.columnBusinessUnit = new global::System.Data.DataColumn("BusinessUnit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessUnit);
                this.columnDefaultTeam = new global::System.Data.DataColumn("DefaultTeam", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultTeam);
                this.columnOldOwnedByTeam = new global::System.Data.DataColumn("OldOwnedByTeam", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOldOwnedByTeam);
                this.columnInitialAssignedTeam = new global::System.Data.DataColumn("InitialAssignedTeam", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInitialAssignedTeam);
                this.columnEDMHoldingTeam = new global::System.Data.DataColumn("EDMHoldingTeam", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEDMHoldingTeam);
                this.columnEDMApprovalAssignmentTeam = new global::System.Data.DataColumn("EDMApprovalAssignmentTeam", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEDMApprovalAssignmentTeam);
                this.columnEDMAssignmentTeam = new global::System.Data.DataColumn("EDMAssignmentTeam", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEDMAssignmentTeam);
                this.columnTeamOrPersonInvolvedWthThsTicket = new global::System.Data.DataColumn("TeamOrPersonInvolvedWthThsTicket", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTeamOrPersonInvolvedWthThsTicket);
                this.columnTeamOrPersonInvolvedNickName = new global::System.Data.DataColumn("TeamOrPersonInvolvedNickName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTeamOrPersonInvolvedNickName);
                this.columnTeamOrPersonInvolvedLogin = new global::System.Data.DataColumn("TeamOrPersonInvolvedLogin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTeamOrPersonInvolvedLogin);
                this.columnReasonForInvolvement = new global::System.Data.DataColumn("ReasonForInvolvement", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReasonForInvolvement);
                this.columnNoteOnInvolvement = new global::System.Data.DataColumn("NoteOnInvolvement", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoteOnInvolvement);
                this.columnCreatedDateTime = new global::System.Data.DataColumn("CreatedDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDateTime);
                this.columnCreatedDay = new global::System.Data.DataColumn("CreatedDay", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDay);
                this.columnCreatedHour = new global::System.Data.DataColumn("CreatedHour", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedHour);
                this.columnNeedByDate1 = new global::System.Data.DataColumn("NeedByDate1", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNeedByDate1);
                this.columnStat_DateTimeAssigned = new global::System.Data.DataColumn("Stat_DateTimeAssigned", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStat_DateTimeAssigned);
                this.columnSLARespondByDeadline = new global::System.Data.DataColumn("SLARespondByDeadline", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSLARespondByDeadline);
                this.columnSLAResponseWarning = new global::System.Data.DataColumn("SLAResponseWarning", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSLAResponseWarning);
                this.columnStat_DateTimeResponded = new global::System.Data.DataColumn("Stat_DateTimeResponded", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStat_DateTimeResponded);
                this.columnStat_DateTimeInProgress = new global::System.Data.DataColumn("Stat_DateTimeInProgress", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStat_DateTimeInProgress);
                this.columnSLAResolutionWarning = new global::System.Data.DataColumn("SLAResolutionWarning", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSLAResolutionWarning);
                this.columnSLAResolveByDeadline = new global::System.Data.DataColumn("SLAResolveByDeadline", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSLAResolveByDeadline);
                this.columnStat_DateTimeResolved = new global::System.Data.DataColumn("Stat_DateTimeResolved", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStat_DateTimeResolved);
                this.columnInvolvementLastModified = new global::System.Data.DataColumn("InvolvementLastModified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvolvementLastModified);
                this.columnStat_DateTimeClosed = new global::System.Data.DataColumn("Stat_DateTimeClosed", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStat_DateTimeClosed);
                this.columnClosedDateTime = new global::System.Data.DataColumn("ClosedDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosedDateTime);
                this.columnStat_IncidentReopened = new global::System.Data.DataColumn("Stat_IncidentReopened", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStat_IncidentReopened);
                this.columnStat_DateTimeReOpened = new global::System.Data.DataColumn("Stat_DateTimeReOpened", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStat_DateTimeReOpened);
                this._columnIncident_s_Been_Open_n_Hours = new global::System.Data.DataColumn("Incident\'s Been Open n Hours", typeof(decimal), null, global::System.Data.MappingType.Element);
                this._columnIncident_s_Been_Open_n_Hours.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnIncident_s_Been_Open_n_Hours");
                this._columnIncident_s_Been_Open_n_Hours.ExtendedProperties.Add("Generator_UserColumnName", "Incident\'s Been Open n Hours");
                base.Columns.Add(this._columnIncident_s_Been_Open_n_Hours);
                this.columnStat_24x7ElapsedTime = new global::System.Data.DataColumn("Stat_24x7ElapsedTime", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStat_24x7ElapsedTime);
                this.columnSTCTimeInMinutes = new global::System.Data.DataColumn("STCTimeInMinutes", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTCTimeInMinutes);
                this.columnTotalSTCTimeInMinutes = new global::System.Data.DataColumn("TotalSTCTimeInMinutes", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalSTCTimeInMinutes);
                this.columnTimeInApproval247 = new global::System.Data.DataColumn("TimeInApproval247", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeInApproval247);
                this.columnIncidentDurationFromAssignToResolve = new global::System.Data.DataColumn("IncidentDurationFromAssignToResolve", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncidentDurationFromAssignToResolve);
                this.columnIncidentDurationInBusinessHours = new global::System.Data.DataColumn("IncidentDurationInBusinessHours", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncidentDurationInBusinessHours);
                this.columnIncidentDurationInHours = new global::System.Data.DataColumn("IncidentDurationInHours", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncidentDurationInHours);
                this.columnIncidentDurationWOPending = new global::System.Data.DataColumn("IncidentDurationWOPending", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncidentDurationWOPending);
                this.columnIncidentDUrationBusinessDaysPendings = new global::System.Data.DataColumn("IncidentDUrationBusinessDaysPendings", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncidentDUrationBusinessDaysPendings);
                this.columnIncidentDurationWithoutPendingBH = new global::System.Data.DataColumn("IncidentDurationWithoutPendingBH", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncidentDurationWithoutPendingBH);
                this.columnIncidentDurationWithoutPendingH = new global::System.Data.DataColumn("IncidentDurationWithoutPendingH", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncidentDurationWithoutPendingH);
                this.columnTotalTaskTime = new global::System.Data.DataColumn("TotalTaskTime", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalTaskTime);
                this.columnTotalNofTasks = new global::System.Data.DataColumn("TotalNofTasks", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalNofTasks);
                this.columnHasAtLeastOneTaskInProgress = new global::System.Data.DataColumn("HasAtLeastOneTaskInProgress", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHasAtLeastOneTaskInProgress);
                this.columnHasAtLeastOneTaskOnHold = new global::System.Data.DataColumn("HasAtLeastOneTaskOnHold", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHasAtLeastOneTaskOnHold);
                this.columnHasAtLeastOneClosedTask = new global::System.Data.DataColumn("HasAtLeastOneClosedTask", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHasAtLeastOneClosedTask);
                this.columnTaskClosedCount = new global::System.Data.DataColumn("TaskClosedCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaskClosedCount);
                this.columnHasNoOpenTasks = new global::System.Data.DataColumn("HasNoOpenTasks", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHasNoOpenTasks);
                this.columnCherwellVersion = new global::System.Data.DataColumn("CherwellVersion", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCherwellVersion);
                this.columnCherwellVersionNm = new global::System.Data.DataColumn("CherwellVersionNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCherwellVersionNm);
                this.columnLastInvolvment = new global::System.Data.DataColumn("LastInvolvment", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastInvolvment);
                this.columnIncident_RecID.AllowDBNull = false;
                this.columnIncident_RecID.MaxLength = 42;
                this.columnIncidentID.AllowDBNull = false;
                this.columnIncidentID.MaxLength = 20;
                this.columnGlobalRegionCd.MaxLength = 15;
                this.columnLocation.MaxLength = 50;
                this.columnSTATUS.MaxLength = 45;
                this.columnPendingReason.MaxLength = 45;
                this.columnStat_SLAResponseGood.AllowDBNull = false;
                this.columnStat_SLAResponseGood.MaxLength = 18;
                this.columnStat_SLAResponseBreached.AllowDBNull = false;
                this.columnStat_SLAResponseBreached.MaxLength = 13;
                this.columnBreachNotes.MaxLength = 2147483647;
                this.columnReasonForBreach.MaxLength = 50;
                this.columnNofUnreadJournals.MaxLength = 5;
                this.columnCause.MaxLength = 45;
                this.columnPRIORITY.MaxLength = 15;
                this.columnImpact.MaxLength = 35;
                this.columnUrgency.MaxLength = 35;
                this.columnL4Escalation.AllowDBNull = false;
                this.columnInterestingDesc.MaxLength = 2147483647;
                this.columnEnhancementDesc.MaxLength = 2147483647;
                this.columnCommentsEntry.MaxLength = 2147483647;
                this.columnComments.MaxLength = 2147483647;
                this.columnCloseDescription.MaxLength = 2147483647;
                this.columnSERVICE.MaxLength = 50;
                this.columnCategory.MaxLength = 67;
                this.columnSubcategory.MaxLength = 67;
                this.columnWorkOrderType.MaxLength = 100;
                this.columnSupportArea.MaxLength = 30;
                this.columnPlatform.MaxLength = 35;
                this.columnSmartClassifySearchString.MaxLength = 4000;
                this.columnMatchingText.MaxLength = 100;
                this.columnIncidentType.MaxLength = 22;
                this.columnAPPLICATION.MaxLength = 50;
                this.columnApplicationCommonName.MaxLength = 100;
                this.columnCallSource.MaxLength = 22;
                this.columnInitialITContact.MaxLength = 50;
                this.columnCreatedBy.MaxLength = 50;
                this.columnSubmitOnBehalfOf.MaxLength = 50;
                this.columnSubmitOnBehalfOfTitle.MaxLength = 50;
                this.columnAssignedBy.MaxLength = 75;
                this.columnOwnedBy.MaxLength = 50;
                this.columnPreviousOwnedBy.MaxLength = 50;
                this.columnActualL1Approval.MaxLength = 100;
                this.columnOwnedByManager.MaxLength = 50;
                this.columnBRM.MaxLength = 30;
                this.columnCustomerDisplayName.MaxLength = 50;
                this.columnLastModBy.MaxLength = 50;
                this.columnWatchList.MaxLength = 4000;
                this.columnCustomerWatchList.MaxLength = 4000;
                this.columnTechnicianWatchList.MaxLength = 4000;
                this.columnCCWatchlistRecipient.MaxLength = 4000;
                this.columnOwnedByTeam.MaxLength = 40;
                this.columnCustomerDepartment.MaxLength = 50;
                this.columnBusinessGroup.MaxLength = 50;
                this.columnITBusinessGroup.MaxLength = 50;
                this.columnBusinessUnit.MaxLength = 50;
                this.columnDefaultTeam.MaxLength = 30;
                this.columnOldOwnedByTeam.MaxLength = 30;
                this.columnInitialAssignedTeam.MaxLength = 75;
                this.columnEDMHoldingTeam.MaxLength = 255;
                this.columnEDMApprovalAssignmentTeam.MaxLength = 255;
                this.columnEDMAssignmentTeam.MaxLength = 255;
                this.columnTeamOrPersonInvolvedWthThsTicket.MaxLength = 255;
                this.columnTeamOrPersonInvolvedNickName.MaxLength = 50;
                this.columnTeamOrPersonInvolvedLogin.MaxLength = 100;
                this.columnReasonForInvolvement.MaxLength = 100;
                this.columnNoteOnInvolvement.MaxLength = 100;
                this.columnCreatedDay.MaxLength = 15;
                this.columnCreatedHour.AllowDBNull = false;
                this.columnCreatedHour.MaxLength = 18;
                this.columnHasAtLeastOneTaskOnHold.AllowDBNull = false;
                this.columnHasAtLeastOneClosedTask.AllowDBNull = false;
                this.columnCherwellVersionNm.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TicketsRow NewTicketsRow() {
                return ((TicketsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TicketsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TicketsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TicketsRowChanged != null)) {
                    this.TicketsRowChanged(this, new TicketsRowChangeEvent(((TicketsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TicketsRowChanging != null)) {
                    this.TicketsRowChanging(this, new TicketsRowChangeEvent(((TicketsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TicketsRowDeleted != null)) {
                    this.TicketsRowDeleted(this, new TicketsRowChangeEvent(((TicketsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TicketsRowDeleting != null)) {
                    this.TicketsRowDeleting(this, new TicketsRowChangeEvent(((TicketsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveTicketsRow(TicketsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DBABnch_LOCALDataSet ds = new DBABnch_LOCALDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TicketsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TicketsOverMidMonthDataTable : global::System.Data.TypedTableBase<TicketsOverMidMonthRow> {
            
            private global::System.Data.DataColumn columnfromdate;
            
            private global::System.Data.DataColumn columntodate;
            
            private global::System.Data.DataColumn columnOwnedBy;
            
            private global::System.Data.DataColumn columnAll;
            
            private global::System.Data.DataColumn columnResolved;
            
            private global::System.Data.DataColumn columnClosed;
            
            private global::System.Data.DataColumn columnAssigned;
            
            private global::System.Data.DataColumn columnInProcess;
            
            private global::System.Data.DataColumn columnPending;
            
            private global::System.Data.DataColumn columnNew;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TicketsOverMidMonthDataTable() {
                this.TableName = "TicketsOverMidMonth";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TicketsOverMidMonthDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected TicketsOverMidMonthDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn fromdateColumn {
                get {
                    return this.columnfromdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn todateColumn {
                get {
                    return this.columntodate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OwnedByColumn {
                get {
                    return this.columnOwnedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AllColumn {
                get {
                    return this.columnAll;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ResolvedColumn {
                get {
                    return this.columnResolved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ClosedColumn {
                get {
                    return this.columnClosed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AssignedColumn {
                get {
                    return this.columnAssigned;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InProcessColumn {
                get {
                    return this.columnInProcess;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PendingColumn {
                get {
                    return this.columnPending;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NewColumn {
                get {
                    return this.columnNew;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TicketsOverMidMonthRow this[int index] {
                get {
                    return ((TicketsOverMidMonthRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TicketsOverMidMonthRowChangeEventHandler TicketsOverMidMonthRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TicketsOverMidMonthRowChangeEventHandler TicketsOverMidMonthRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TicketsOverMidMonthRowChangeEventHandler TicketsOverMidMonthRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TicketsOverMidMonthRowChangeEventHandler TicketsOverMidMonthRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddTicketsOverMidMonthRow(TicketsOverMidMonthRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TicketsOverMidMonthRow AddTicketsOverMidMonthRow(System.DateTime fromdate, System.DateTime todate, string OwnedBy, int All, int Resolved, int Closed, int Assigned, int InProcess, int Pending, int New) {
                TicketsOverMidMonthRow rowTicketsOverMidMonthRow = ((TicketsOverMidMonthRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        fromdate,
                        todate,
                        OwnedBy,
                        All,
                        Resolved,
                        Closed,
                        Assigned,
                        InProcess,
                        Pending,
                        New};
                rowTicketsOverMidMonthRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTicketsOverMidMonthRow);
                return rowTicketsOverMidMonthRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TicketsOverMidMonthDataTable cln = ((TicketsOverMidMonthDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TicketsOverMidMonthDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnfromdate = base.Columns["fromdate"];
                this.columntodate = base.Columns["todate"];
                this.columnOwnedBy = base.Columns["OwnedBy"];
                this.columnAll = base.Columns["All"];
                this.columnResolved = base.Columns["Resolved"];
                this.columnClosed = base.Columns["Closed"];
                this.columnAssigned = base.Columns["Assigned"];
                this.columnInProcess = base.Columns["InProcess"];
                this.columnPending = base.Columns["Pending"];
                this.columnNew = base.Columns["New"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnfromdate = new global::System.Data.DataColumn("fromdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfromdate);
                this.columntodate = new global::System.Data.DataColumn("todate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntodate);
                this.columnOwnedBy = new global::System.Data.DataColumn("OwnedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnedBy);
                this.columnAll = new global::System.Data.DataColumn("All", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAll);
                this.columnResolved = new global::System.Data.DataColumn("Resolved", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResolved);
                this.columnClosed = new global::System.Data.DataColumn("Closed", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosed);
                this.columnAssigned = new global::System.Data.DataColumn("Assigned", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssigned);
                this.columnInProcess = new global::System.Data.DataColumn("InProcess", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInProcess);
                this.columnPending = new global::System.Data.DataColumn("Pending", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPending);
                this.columnNew = new global::System.Data.DataColumn("New", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNew);
                this.columnOwnedBy.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TicketsOverMidMonthRow NewTicketsOverMidMonthRow() {
                return ((TicketsOverMidMonthRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TicketsOverMidMonthRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TicketsOverMidMonthRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TicketsOverMidMonthRowChanged != null)) {
                    this.TicketsOverMidMonthRowChanged(this, new TicketsOverMidMonthRowChangeEvent(((TicketsOverMidMonthRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TicketsOverMidMonthRowChanging != null)) {
                    this.TicketsOverMidMonthRowChanging(this, new TicketsOverMidMonthRowChangeEvent(((TicketsOverMidMonthRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TicketsOverMidMonthRowDeleted != null)) {
                    this.TicketsOverMidMonthRowDeleted(this, new TicketsOverMidMonthRowChangeEvent(((TicketsOverMidMonthRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TicketsOverMidMonthRowDeleting != null)) {
                    this.TicketsOverMidMonthRowDeleting(this, new TicketsOverMidMonthRowChangeEvent(((TicketsOverMidMonthRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveTicketsOverMidMonthRow(TicketsOverMidMonthRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DBABnch_LOCALDataSet ds = new DBABnch_LOCALDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TicketsOverMidMonthDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class sp_who3DataTable : global::System.Data.TypedTableBase<sp_who3Row> {
            
            private global::System.Data.DataColumn columnsession_id;
            
            private global::System.Data.DataColumn columnhost_name;
            
            private global::System.Data.DataColumn columnlogin_name;
            
            private global::System.Data.DataColumn columndbname;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columncommand;
            
            private global::System.Data.DataColumn columnrunning_time;
            
            private global::System.Data.DataColumn columnBlkBy;
            
            private global::System.Data.DataColumn columnNoOfOpenTran;
            
            private global::System.Data.DataColumn columnwait_type;
            
            private global::System.Data.DataColumn columngranted_memory_GB;
            
            private global::System.Data.DataColumn columnobject_name;
            
            private global::System.Data.DataColumn columnprogram_name;
            
            private global::System.Data.DataColumn columnquery_plan;
            
            private global::System.Data.DataColumn columnsql_text;
            
            private global::System.Data.DataColumn columncpu_time;
            
            private global::System.Data.DataColumn columnstart_time;
            
            private global::System.Data.DataColumn columnpercent_complete;
            
            private global::System.Data.DataColumn columnest_time_to_go;
            
            private global::System.Data.DataColumn columnest_completion_time;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public sp_who3DataTable() {
                this.TableName = "sp_who3";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal sp_who3DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected sp_who3DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn session_idColumn {
                get {
                    return this.columnsession_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn host_nameColumn {
                get {
                    return this.columnhost_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn login_nameColumn {
                get {
                    return this.columnlogin_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn dbnameColumn {
                get {
                    return this.columndbname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn commandColumn {
                get {
                    return this.columncommand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn running_timeColumn {
                get {
                    return this.columnrunning_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BlkByColumn {
                get {
                    return this.columnBlkBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NoOfOpenTranColumn {
                get {
                    return this.columnNoOfOpenTran;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn wait_typeColumn {
                get {
                    return this.columnwait_type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn granted_memory_GBColumn {
                get {
                    return this.columngranted_memory_GB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn object_nameColumn {
                get {
                    return this.columnobject_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn program_nameColumn {
                get {
                    return this.columnprogram_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn query_planColumn {
                get {
                    return this.columnquery_plan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn sql_textColumn {
                get {
                    return this.columnsql_text;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn cpu_timeColumn {
                get {
                    return this.columncpu_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn start_timeColumn {
                get {
                    return this.columnstart_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn percent_completeColumn {
                get {
                    return this.columnpercent_complete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn est_time_to_goColumn {
                get {
                    return this.columnest_time_to_go;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn est_completion_timeColumn {
                get {
                    return this.columnest_completion_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public sp_who3Row this[int index] {
                get {
                    return ((sp_who3Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event sp_who3RowChangeEventHandler sp_who3RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event sp_who3RowChangeEventHandler sp_who3RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event sp_who3RowChangeEventHandler sp_who3RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event sp_who3RowChangeEventHandler sp_who3RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Addsp_who3Row(sp_who3Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public sp_who3Row Addsp_who3Row(
                        short session_id, 
                        string host_name, 
                        string login_name, 
                        string dbname, 
                        string status, 
                        string command, 
                        string running_time, 
                        short BlkBy, 
                        int NoOfOpenTran, 
                        string wait_type, 
                        decimal granted_memory_GB, 
                        string object_name, 
                        string program_name, 
                        string query_plan, 
                        string sql_text, 
                        int cpu_time, 
                        System.DateTime start_time, 
                        float percent_complete, 
                        string est_time_to_go, 
                        System.DateTime est_completion_time) {
                sp_who3Row rowsp_who3Row = ((sp_who3Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        session_id,
                        host_name,
                        login_name,
                        dbname,
                        status,
                        command,
                        running_time,
                        BlkBy,
                        NoOfOpenTran,
                        wait_type,
                        granted_memory_GB,
                        object_name,
                        program_name,
                        query_plan,
                        sql_text,
                        cpu_time,
                        start_time,
                        percent_complete,
                        est_time_to_go,
                        est_completion_time};
                rowsp_who3Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowsp_who3Row);
                return rowsp_who3Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                sp_who3DataTable cln = ((sp_who3DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new sp_who3DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnsession_id = base.Columns["session_id"];
                this.columnhost_name = base.Columns["host_name"];
                this.columnlogin_name = base.Columns["login_name"];
                this.columndbname = base.Columns["dbname"];
                this.columnstatus = base.Columns["status"];
                this.columncommand = base.Columns["command"];
                this.columnrunning_time = base.Columns["running_time"];
                this.columnBlkBy = base.Columns["BlkBy"];
                this.columnNoOfOpenTran = base.Columns["NoOfOpenTran"];
                this.columnwait_type = base.Columns["wait_type"];
                this.columngranted_memory_GB = base.Columns["granted_memory_GB"];
                this.columnobject_name = base.Columns["object_name"];
                this.columnprogram_name = base.Columns["program_name"];
                this.columnquery_plan = base.Columns["query_plan"];
                this.columnsql_text = base.Columns["sql_text"];
                this.columncpu_time = base.Columns["cpu_time"];
                this.columnstart_time = base.Columns["start_time"];
                this.columnpercent_complete = base.Columns["percent_complete"];
                this.columnest_time_to_go = base.Columns["est_time_to_go"];
                this.columnest_completion_time = base.Columns["est_completion_time"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnsession_id = new global::System.Data.DataColumn("session_id", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsession_id);
                this.columnhost_name = new global::System.Data.DataColumn("host_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhost_name);
                this.columnlogin_name = new global::System.Data.DataColumn("login_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogin_name);
                this.columndbname = new global::System.Data.DataColumn("dbname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndbname);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columncommand = new global::System.Data.DataColumn("command", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncommand);
                this.columnrunning_time = new global::System.Data.DataColumn("running_time", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrunning_time);
                this.columnBlkBy = new global::System.Data.DataColumn("BlkBy", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBlkBy);
                this.columnNoOfOpenTran = new global::System.Data.DataColumn("NoOfOpenTran", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoOfOpenTran);
                this.columnwait_type = new global::System.Data.DataColumn("wait_type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwait_type);
                this.columngranted_memory_GB = new global::System.Data.DataColumn("granted_memory_GB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngranted_memory_GB);
                this.columnobject_name = new global::System.Data.DataColumn("object_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnobject_name);
                this.columnprogram_name = new global::System.Data.DataColumn("program_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprogram_name);
                this.columnquery_plan = new global::System.Data.DataColumn("query_plan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnquery_plan);
                this.columnsql_text = new global::System.Data.DataColumn("sql_text", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsql_text);
                this.columncpu_time = new global::System.Data.DataColumn("cpu_time", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncpu_time);
                this.columnstart_time = new global::System.Data.DataColumn("start_time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstart_time);
                this.columnpercent_complete = new global::System.Data.DataColumn("percent_complete", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpercent_complete);
                this.columnest_time_to_go = new global::System.Data.DataColumn("est_time_to_go", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnest_time_to_go);
                this.columnest_completion_time = new global::System.Data.DataColumn("est_completion_time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnest_completion_time);
                this.columnsession_id.AllowDBNull = false;
                this.columnhost_name.MaxLength = 128;
                this.columnlogin_name.AllowDBNull = false;
                this.columnlogin_name.MaxLength = 128;
                this.columndbname.ReadOnly = true;
                this.columndbname.MaxLength = 128;
                this.columnstatus.AllowDBNull = false;
                this.columnstatus.MaxLength = 30;
                this.columncommand.AllowDBNull = false;
                this.columncommand.MaxLength = 32;
                this.columnrunning_time.ReadOnly = true;
                this.columnrunning_time.MaxLength = 109;
                this.columnNoOfOpenTran.AllowDBNull = false;
                this.columnwait_type.MaxLength = 60;
                this.columngranted_memory_GB.ReadOnly = true;
                this.columnobject_name.ReadOnly = true;
                this.columnobject_name.MaxLength = 257;
                this.columnprogram_name.MaxLength = 128;
                this.columnquery_plan.MaxLength = 2147483647;
                this.columnsql_text.ReadOnly = true;
                this.columnsql_text.MaxLength = 2147483647;
                this.columncpu_time.AllowDBNull = false;
                this.columnstart_time.AllowDBNull = false;
                this.columnpercent_complete.AllowDBNull = false;
                this.columnest_time_to_go.ReadOnly = true;
                this.columnest_time_to_go.MaxLength = 109;
                this.columnest_completion_time.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public sp_who3Row Newsp_who3Row() {
                return ((sp_who3Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new sp_who3Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(sp_who3Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sp_who3RowChanged != null)) {
                    this.sp_who3RowChanged(this, new sp_who3RowChangeEvent(((sp_who3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sp_who3RowChanging != null)) {
                    this.sp_who3RowChanging(this, new sp_who3RowChangeEvent(((sp_who3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sp_who3RowDeleted != null)) {
                    this.sp_who3RowDeleted(this, new sp_who3RowChangeEvent(((sp_who3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sp_who3RowDeleting != null)) {
                    this.sp_who3RowDeleting(this, new sp_who3RowChangeEvent(((sp_who3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Removesp_who3Row(sp_who3Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DBABnch_LOCALDataSet ds = new DBABnch_LOCALDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "sp_who3DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ClientsRow : global::System.Data.DataRow {
            
            private ClientsDataTable tableClients;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ClientsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableClients = ((ClientsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ClientId {
                get {
                    return ((int)(this[this.tableClients.ClientIdColumn]));
                }
                set {
                    this[this.tableClients.ClientIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ClientNm {
                get {
                    try {
                        return ((string)(this[this.tableClients.ClientNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientNm\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.ClientNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ParentClientId {
                get {
                    try {
                        return ((int)(this[this.tableClients.ParentClientIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParentClientId\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.ParentClientIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool FoundInDocument {
                get {
                    try {
                        return ((bool)(this[this.tableClients.FoundInDocumentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FoundInDocument\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.FoundInDocumentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool NoInfoDueToConnectFailure {
                get {
                    try {
                        return ((bool)(this[this.tableClients.NoInfoDueToConnectFailureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoInfoDueToConnectFailure\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.NoInfoDueToConnectFailureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SkipBecauseLongTimeoutAndFailConnect {
                get {
                    try {
                        return ((bool)(this[this.tableClients.SkipBecauseLongTimeoutAndFailConnectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SkipBecauseLongTimeoutAndFailConnect\' in table \'Clients\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.SkipBecauseLongTimeoutAndFailConnectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTimeOffset SetSkipBecauseLongTimeoutAndFailConnect {
                get {
                    try {
                        return ((global::System.DateTimeOffset)(this[this.tableClients.SetSkipBecauseLongTimeoutAndFailConnectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SetSkipBecauseLongTimeoutAndFailConnect\' in table \'Clients\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.SetSkipBecauseLongTimeoutAndFailConnectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTimeOffset UnsetSkipBecauseLongTimeoutAndFailConnect {
                get {
                    try {
                        return ((global::System.DateTimeOffset)(this[this.tableClients.UnsetSkipBecauseLongTimeoutAndFailConnectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnsetSkipBecauseLongTimeoutAndFailConnect\' in table \'Client" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.UnsetSkipBecauseLongTimeoutAndFailConnectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Purpose {
                get {
                    try {
                        return ((string)(this[this.tableClients.PurposeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purpose\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.PurposeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableClients.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SourceId {
                get {
                    return ((int)(this[this.tableClients.SourceIdColumn]));
                }
                set {
                    this[this.tableClients.SourceIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTimeOffset Created {
                get {
                    return ((global::System.DateTimeOffset)(this[this.tableClients.CreatedColumn]));
                }
                set {
                    this[this.tableClients.CreatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int CreatedBy {
                get {
                    return ((int)(this[this.tableClients.CreatedByColumn]));
                }
                set {
                    this[this.tableClients.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTimeOffset Tested {
                get {
                    try {
                        return ((global::System.DateTimeOffset)(this[this.tableClients.TestedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tested\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.TestedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int TestedButNoChangeBy {
                get {
                    try {
                        return ((int)(this[this.tableClients.TestedButNoChangeByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TestedButNoChangeBy\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.TestedButNoChangeByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTimeOffset Updated {
                get {
                    return ((global::System.DateTimeOffset)(this[this.tableClients.UpdatedColumn]));
                }
                set {
                    this[this.tableClients.UpdatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int UpdatedBy {
                get {
                    return ((int)(this[this.tableClients.UpdatedByColumn]));
                }
                set {
                    this[this.tableClients.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UsersRow UsersRowByFK_Client_CreatedBy_User {
                get {
                    return ((UsersRow)(this.GetParentRow(this.Table.ParentRelations["FK_Client_CreatedBy_User"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Client_CreatedBy_User"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ClientsRow ClientsRowParent {
                get {
                    return ((ClientsRow)(this.GetParentRow(this.Table.ParentRelations["FK_Client_Of_ParentClient"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Client_Of_ParentClient"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UsersRow UsersRowByFK_Client_TestedButNoChangeBy_User {
                get {
                    return ((UsersRow)(this.GetParentRow(this.Table.ParentRelations["FK_Client_TestedButNoChangeBy_User"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Client_TestedButNoChangeBy_User"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UsersRow UsersRowByFK_Client_UpdatedBy_User {
                get {
                    return ((UsersRow)(this.GetParentRow(this.Table.ParentRelations["FK_Client_UpdatedBy_User"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Client_UpdatedBy_User"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsClientNmNull() {
                return this.IsNull(this.tableClients.ClientNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetClientNmNull() {
                this[this.tableClients.ClientNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsParentClientIdNull() {
                return this.IsNull(this.tableClients.ParentClientIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetParentClientIdNull() {
                this[this.tableClients.ParentClientIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFoundInDocumentNull() {
                return this.IsNull(this.tableClients.FoundInDocumentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFoundInDocumentNull() {
                this[this.tableClients.FoundInDocumentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNoInfoDueToConnectFailureNull() {
                return this.IsNull(this.tableClients.NoInfoDueToConnectFailureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNoInfoDueToConnectFailureNull() {
                this[this.tableClients.NoInfoDueToConnectFailureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSkipBecauseLongTimeoutAndFailConnectNull() {
                return this.IsNull(this.tableClients.SkipBecauseLongTimeoutAndFailConnectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSkipBecauseLongTimeoutAndFailConnectNull() {
                this[this.tableClients.SkipBecauseLongTimeoutAndFailConnectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSetSkipBecauseLongTimeoutAndFailConnectNull() {
                return this.IsNull(this.tableClients.SetSkipBecauseLongTimeoutAndFailConnectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSetSkipBecauseLongTimeoutAndFailConnectNull() {
                this[this.tableClients.SetSkipBecauseLongTimeoutAndFailConnectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUnsetSkipBecauseLongTimeoutAndFailConnectNull() {
                return this.IsNull(this.tableClients.UnsetSkipBecauseLongTimeoutAndFailConnectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUnsetSkipBecauseLongTimeoutAndFailConnectNull() {
                this[this.tableClients.UnsetSkipBecauseLongTimeoutAndFailConnectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPurposeNull() {
                return this.IsNull(this.tableClients.PurposeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPurposeNull() {
                this[this.tableClients.PurposeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableClients.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCommentsNull() {
                this[this.tableClients.CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTestedNull() {
                return this.IsNull(this.tableClients.TestedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTestedNull() {
                this[this.tableClients.TestedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTestedButNoChangeByNull() {
                return this.IsNull(this.tableClients.TestedButNoChangeByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTestedButNoChangeByNull() {
                this[this.tableClients.TestedButNoChangeByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ClientsRow[] GetClientsRows() {
                if ((this.Table.ChildRelations["FK_Client_Of_ParentClient"] == null)) {
                    return new ClientsRow[0];
                }
                else {
                    return ((ClientsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Client_Of_ParentClient"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DatabasesRow : global::System.Data.DataRow {
            
            private DatabasesDataTable tableDatabases;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal DatabasesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDatabases = ((DatabasesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int DbId {
                get {
                    return ((int)(this[this.tableDatabases.DbIdColumn]));
                }
                set {
                    this[this.tableDatabases.DbIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int DbScannedID {
                get {
                    return ((int)(this[this.tableDatabases.DbScannedIDColumn]));
                }
                set {
                    this[this.tableDatabases.DbScannedIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SvrToScanID {
                get {
                    return ((int)(this[this.tableDatabases.SvrToScanIDColumn]));
                }
                set {
                    this[this.tableDatabases.SvrToScanIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LinkSvrNm {
                get {
                    try {
                        return ((string)(this[this.tableDatabases.LinkSvrNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LinkSvrNm\' in table \'Databases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatabases.LinkSvrNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SvrNm {
                get {
                    try {
                        return ((string)(this[this.tableDatabases.SvrNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SvrNm\' in table \'Databases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatabases.SvrNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DbNm {
                get {
                    try {
                        return ((string)(this[this.tableDatabases.DbNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DbNm\' in table \'Databases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatabases.DbNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RanAsUser {
                get {
                    try {
                        return ((string)(this[this.tableDatabases.RanAsUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RanAsUser\' in table \'Databases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatabases.RanAsUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDatabases.CreatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Created\' in table \'Databases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatabases.CreatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int compatibility_level {
                get {
                    try {
                        return ((int)(this[this.tableDatabases.compatibility_levelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'compatibility_level\' in table \'Databases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatabases.compatibility_levelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool is_read_committed_snapshot_on {
                get {
                    try {
                        return ((bool)(this[this.tableDatabases.is_read_committed_snapshot_onColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'is_read_committed_snapshot_on\' in table \'Databases\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableDatabases.is_read_committed_snapshot_onColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool is_trustworthy_on {
                get {
                    try {
                        return ((bool)(this[this.tableDatabases.is_trustworthy_onColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'is_trustworthy_on\' in table \'Databases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatabases.is_trustworthy_onColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool is_db_chaining_on {
                get {
                    try {
                        return ((bool)(this[this.tableDatabases.is_db_chaining_onColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'is_db_chaining_on\' in table \'Databases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatabases.is_db_chaining_onColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool is_fulltext_enabled {
                get {
                    try {
                        return ((bool)(this[this.tableDatabases.is_fulltext_enabledColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'is_fulltext_enabled\' in table \'Databases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatabases.is_fulltext_enabledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool is_numeric_roundabort_on {
                get {
                    try {
                        return ((bool)(this[this.tableDatabases.is_numeric_roundabort_onColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'is_numeric_roundabort_on\' in table \'Databases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatabases.is_numeric_roundabort_onColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool is_arithabort_on {
                get {
                    try {
                        return ((bool)(this[this.tableDatabases.is_arithabort_onColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'is_arithabort_on\' in table \'Databases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatabases.is_arithabort_onColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool is_master_key_encrypted_by_server {
                get {
                    try {
                        return ((bool)(this[this.tableDatabases.is_master_key_encrypted_by_serverColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'is_master_key_encrypted_by_server\' in table \'Databases\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatabases.is_master_key_encrypted_by_serverColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool is_read_only {
                get {
                    try {
                        return ((bool)(this[this.tableDatabases.is_read_onlyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'is_read_only\' in table \'Databases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatabases.is_read_onlyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool is_cdc_enabled {
                get {
                    try {
                        return ((bool)(this[this.tableDatabases.is_cdc_enabledColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'is_cdc_enabled\' in table \'Databases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatabases.is_cdc_enabledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool is_query_store_on {
                get {
                    try {
                        return ((bool)(this[this.tableDatabases.is_query_store_onColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'is_query_store_on\' in table \'Databases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatabases.is_query_store_onColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string delayed_durability_desc {
                get {
                    try {
                        return ((string)(this[this.tableDatabases.delayed_durability_descColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'delayed_durability_desc\' in table \'Databases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatabases.delayed_durability_descColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string recovery_model_desc {
                get {
                    try {
                        return ((string)(this[this.tableDatabases.recovery_model_descColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'recovery_model_desc\' in table \'Databases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatabases.recovery_model_descColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string snapshot_isolation_state_desc {
                get {
                    try {
                        return ((string)(this[this.tableDatabases.snapshot_isolation_state_descColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'snapshot_isolation_state_desc\' in table \'Databases\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableDatabases.snapshot_isolation_state_descColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string collation_name {
                get {
                    try {
                        return ((string)(this[this.tableDatabases.collation_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'collation_name\' in table \'Databases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatabases.collation_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Skip {
                get {
                    try {
                        return ((bool)(this[this.tableDatabases.SkipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Skip\' in table \'Databases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatabases.SkipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool PingFailed {
                get {
                    try {
                        return ((bool)(this[this.tableDatabases.PingFailedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PingFailed\' in table \'Databases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatabases.PingFailedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool NoLongerExists {
                get {
                    try {
                        return ((bool)(this[this.tableDatabases.NoLongerExistsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoLongerExists\' in table \'Databases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatabases.NoLongerExistsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool ConnectionAttemptTimedOut {
                get {
                    try {
                        return ((bool)(this[this.tableDatabases.ConnectionAttemptTimedOutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConnectionAttemptTimedOut\' in table \'Databases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatabases.ConnectionAttemptTimedOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool ClientFailedToMakeAConnection {
                get {
                    try {
                        return ((bool)(this[this.tableDatabases.ClientFailedToMakeAConnectionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientFailedToMakeAConnection\' in table \'Databases\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableDatabases.ClientFailedToMakeAConnectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int NoAccessForADUserId {
                get {
                    try {
                        return ((int)(this[this.tableDatabases.NoAccessForADUserIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoAccessForADUserId\' in table \'Databases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatabases.NoAccessForADUserIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool LongTimeoutAndFailedToConnect {
                get {
                    try {
                        return ((bool)(this[this.tableDatabases.LongTimeoutAndFailedToConnectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LongTimeoutAndFailedToConnect\' in table \'Databases\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableDatabases.LongTimeoutAndFailedToConnectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTimeOffset RemoteTimeStampAtCaptureOFFSET {
                get {
                    try {
                        return ((global::System.DateTimeOffset)(this[this.tableDatabases.RemoteTimeStampAtCaptureOFFSETColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RemoteTimeStampAtCaptureOFFSET\' in table \'Databases\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableDatabases.RemoteTimeStampAtCaptureOFFSETColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime RemoteTimeStampAtCaptureUTC {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDatabases.RemoteTimeStampAtCaptureUTCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RemoteTimeStampAtCaptureUTC\' in table \'Databases\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableDatabases.RemoteTimeStampAtCaptureUTCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTimeOffset Captured {
                get {
                    return ((global::System.DateTimeOffset)(this[this.tableDatabases.CapturedColumn]));
                }
                set {
                    this[this.tableDatabases.CapturedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CapturedBy {
                get {
                    try {
                        return ((string)(this[this.tableDatabases.CapturedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CapturedBy\' in table \'Databases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatabases.CapturedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CapturedOnSvr {
                get {
                    try {
                        return ((string)(this[this.tableDatabases.CapturedOnSvrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CapturedOnSvr\' in table \'Databases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatabases.CapturedOnSvrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CapturedOnDb {
                get {
                    try {
                        return ((string)(this[this.tableDatabases.CapturedOnDbColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CapturedOnDb\' in table \'Databases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatabases.CapturedOnDbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CapturingProcess {
                get {
                    return ((string)(this[this.tableDatabases.CapturingProcessColumn]));
                }
                set {
                    this[this.tableDatabases.CapturingProcessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime CapturingProcessVersion {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDatabases.CapturingProcessVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CapturingProcessVersion\' in table \'Databases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatabases.CapturingProcessVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLinkSvrNmNull() {
                return this.IsNull(this.tableDatabases.LinkSvrNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLinkSvrNmNull() {
                this[this.tableDatabases.LinkSvrNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSvrNmNull() {
                return this.IsNull(this.tableDatabases.SvrNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSvrNmNull() {
                this[this.tableDatabases.SvrNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDbNmNull() {
                return this.IsNull(this.tableDatabases.DbNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDbNmNull() {
                this[this.tableDatabases.DbNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRanAsUserNull() {
                return this.IsNull(this.tableDatabases.RanAsUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRanAsUserNull() {
                this[this.tableDatabases.RanAsUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCreatedNull() {
                return this.IsNull(this.tableDatabases.CreatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCreatedNull() {
                this[this.tableDatabases.CreatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Iscompatibility_levelNull() {
                return this.IsNull(this.tableDatabases.compatibility_levelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setcompatibility_levelNull() {
                this[this.tableDatabases.compatibility_levelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isis_read_committed_snapshot_onNull() {
                return this.IsNull(this.tableDatabases.is_read_committed_snapshot_onColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setis_read_committed_snapshot_onNull() {
                this[this.tableDatabases.is_read_committed_snapshot_onColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isis_trustworthy_onNull() {
                return this.IsNull(this.tableDatabases.is_trustworthy_onColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setis_trustworthy_onNull() {
                this[this.tableDatabases.is_trustworthy_onColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isis_db_chaining_onNull() {
                return this.IsNull(this.tableDatabases.is_db_chaining_onColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setis_db_chaining_onNull() {
                this[this.tableDatabases.is_db_chaining_onColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isis_fulltext_enabledNull() {
                return this.IsNull(this.tableDatabases.is_fulltext_enabledColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setis_fulltext_enabledNull() {
                this[this.tableDatabases.is_fulltext_enabledColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isis_numeric_roundabort_onNull() {
                return this.IsNull(this.tableDatabases.is_numeric_roundabort_onColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setis_numeric_roundabort_onNull() {
                this[this.tableDatabases.is_numeric_roundabort_onColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isis_arithabort_onNull() {
                return this.IsNull(this.tableDatabases.is_arithabort_onColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setis_arithabort_onNull() {
                this[this.tableDatabases.is_arithabort_onColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isis_master_key_encrypted_by_serverNull() {
                return this.IsNull(this.tableDatabases.is_master_key_encrypted_by_serverColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setis_master_key_encrypted_by_serverNull() {
                this[this.tableDatabases.is_master_key_encrypted_by_serverColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isis_read_onlyNull() {
                return this.IsNull(this.tableDatabases.is_read_onlyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setis_read_onlyNull() {
                this[this.tableDatabases.is_read_onlyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isis_cdc_enabledNull() {
                return this.IsNull(this.tableDatabases.is_cdc_enabledColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setis_cdc_enabledNull() {
                this[this.tableDatabases.is_cdc_enabledColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isis_query_store_onNull() {
                return this.IsNull(this.tableDatabases.is_query_store_onColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setis_query_store_onNull() {
                this[this.tableDatabases.is_query_store_onColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isdelayed_durability_descNull() {
                return this.IsNull(this.tableDatabases.delayed_durability_descColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setdelayed_durability_descNull() {
                this[this.tableDatabases.delayed_durability_descColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isrecovery_model_descNull() {
                return this.IsNull(this.tableDatabases.recovery_model_descColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setrecovery_model_descNull() {
                this[this.tableDatabases.recovery_model_descColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Issnapshot_isolation_state_descNull() {
                return this.IsNull(this.tableDatabases.snapshot_isolation_state_descColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setsnapshot_isolation_state_descNull() {
                this[this.tableDatabases.snapshot_isolation_state_descColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Iscollation_nameNull() {
                return this.IsNull(this.tableDatabases.collation_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setcollation_nameNull() {
                this[this.tableDatabases.collation_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSkipNull() {
                return this.IsNull(this.tableDatabases.SkipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSkipNull() {
                this[this.tableDatabases.SkipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPingFailedNull() {
                return this.IsNull(this.tableDatabases.PingFailedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPingFailedNull() {
                this[this.tableDatabases.PingFailedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNoLongerExistsNull() {
                return this.IsNull(this.tableDatabases.NoLongerExistsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNoLongerExistsNull() {
                this[this.tableDatabases.NoLongerExistsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsConnectionAttemptTimedOutNull() {
                return this.IsNull(this.tableDatabases.ConnectionAttemptTimedOutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetConnectionAttemptTimedOutNull() {
                this[this.tableDatabases.ConnectionAttemptTimedOutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsClientFailedToMakeAConnectionNull() {
                return this.IsNull(this.tableDatabases.ClientFailedToMakeAConnectionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetClientFailedToMakeAConnectionNull() {
                this[this.tableDatabases.ClientFailedToMakeAConnectionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNoAccessForADUserIdNull() {
                return this.IsNull(this.tableDatabases.NoAccessForADUserIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNoAccessForADUserIdNull() {
                this[this.tableDatabases.NoAccessForADUserIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLongTimeoutAndFailedToConnectNull() {
                return this.IsNull(this.tableDatabases.LongTimeoutAndFailedToConnectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLongTimeoutAndFailedToConnectNull() {
                this[this.tableDatabases.LongTimeoutAndFailedToConnectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRemoteTimeStampAtCaptureOFFSETNull() {
                return this.IsNull(this.tableDatabases.RemoteTimeStampAtCaptureOFFSETColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRemoteTimeStampAtCaptureOFFSETNull() {
                this[this.tableDatabases.RemoteTimeStampAtCaptureOFFSETColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRemoteTimeStampAtCaptureUTCNull() {
                return this.IsNull(this.tableDatabases.RemoteTimeStampAtCaptureUTCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRemoteTimeStampAtCaptureUTCNull() {
                this[this.tableDatabases.RemoteTimeStampAtCaptureUTCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCapturedByNull() {
                return this.IsNull(this.tableDatabases.CapturedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCapturedByNull() {
                this[this.tableDatabases.CapturedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCapturedOnSvrNull() {
                return this.IsNull(this.tableDatabases.CapturedOnSvrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCapturedOnSvrNull() {
                this[this.tableDatabases.CapturedOnSvrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCapturedOnDbNull() {
                return this.IsNull(this.tableDatabases.CapturedOnDbColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCapturedOnDbNull() {
                this[this.tableDatabases.CapturedOnDbColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCapturingProcessVersionNull() {
                return this.IsNull(this.tableDatabases.CapturingProcessVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCapturingProcessVersionNull() {
                this[this.tableDatabases.CapturingProcessVersionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DomainsRow : global::System.Data.DataRow {
            
            private DomainsDataTable tableDomains;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal DomainsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDomains = ((DomainsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int DomainId {
                get {
                    return ((int)(this[this.tableDomains.DomainIdColumn]));
                }
                set {
                    this[this.tableDomains.DomainIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DomainNm {
                get {
                    return ((string)(this[this.tableDomains.DomainNmColumn]));
                }
                set {
                    this[this.tableDomains.DomainNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DomainType {
                get {
                    try {
                        return ((string)(this[this.tableDomains.DomainTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DomainType\' in table \'Domains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDomains.DomainTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ClientId {
                get {
                    return ((int)(this[this.tableDomains.ClientIdColumn]));
                }
                set {
                    this[this.tableDomains.ClientIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool FoundInDocument {
                get {
                    try {
                        return ((bool)(this[this.tableDomains.FoundInDocumentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FoundInDocument\' in table \'Domains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDomains.FoundInDocumentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool NoInfoDueToConnectFailure {
                get {
                    try {
                        return ((bool)(this[this.tableDomains.NoInfoDueToConnectFailureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoInfoDueToConnectFailure\' in table \'Domains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDomains.NoInfoDueToConnectFailureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SkipBecauseLongTimeoutAndFailConnect {
                get {
                    try {
                        return ((bool)(this[this.tableDomains.SkipBecauseLongTimeoutAndFailConnectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SkipBecauseLongTimeoutAndFailConnect\' in table \'Domains\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableDomains.SkipBecauseLongTimeoutAndFailConnectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTimeOffset SetSkipBecauseLongTimeoutAndFailConnect {
                get {
                    try {
                        return ((global::System.DateTimeOffset)(this[this.tableDomains.SetSkipBecauseLongTimeoutAndFailConnectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SetSkipBecauseLongTimeoutAndFailConnect\' in table \'Domains\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDomains.SetSkipBecauseLongTimeoutAndFailConnectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTimeOffset UnsetSkipBecauseLongTimeoutAndFailConnect {
                get {
                    try {
                        return ((global::System.DateTimeOffset)(this[this.tableDomains.UnsetSkipBecauseLongTimeoutAndFailConnectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnsetSkipBecauseLongTimeoutAndFailConnect\' in table \'Domain" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDomains.UnsetSkipBecauseLongTimeoutAndFailConnectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Purpose {
                get {
                    try {
                        return ((string)(this[this.tableDomains.PurposeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purpose\' in table \'Domains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDomains.PurposeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableDomains.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'Domains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDomains.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SourceId {
                get {
                    return ((int)(this[this.tableDomains.SourceIdColumn]));
                }
                set {
                    this[this.tableDomains.SourceIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTimeOffset Created {
                get {
                    return ((global::System.DateTimeOffset)(this[this.tableDomains.CreatedColumn]));
                }
                set {
                    this[this.tableDomains.CreatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int CreatedBy {
                get {
                    return ((int)(this[this.tableDomains.CreatedByColumn]));
                }
                set {
                    this[this.tableDomains.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTimeOffset Tested {
                get {
                    try {
                        return ((global::System.DateTimeOffset)(this[this.tableDomains.TestedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tested\' in table \'Domains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDomains.TestedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int TestedButNoChangeBy {
                get {
                    try {
                        return ((int)(this[this.tableDomains.TestedButNoChangeByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TestedButNoChangeBy\' in table \'Domains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDomains.TestedButNoChangeByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTimeOffset Updated {
                get {
                    return ((global::System.DateTimeOffset)(this[this.tableDomains.UpdatedColumn]));
                }
                set {
                    this[this.tableDomains.UpdatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int UpdatedBy {
                get {
                    return ((int)(this[this.tableDomains.UpdatedByColumn]));
                }
                set {
                    this[this.tableDomains.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UsersRow UsersRowByFK_Domain_CreatedBy_User {
                get {
                    return ((UsersRow)(this.GetParentRow(this.Table.ParentRelations["FK_Domain_CreatedBy_User"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Domain_CreatedBy_User"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UsersRow UsersRowByFK_Domain_TestedButNoChangeBy_User {
                get {
                    return ((UsersRow)(this.GetParentRow(this.Table.ParentRelations["FK_Domain_TestedButNoChangeBy_User"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Domain_TestedButNoChangeBy_User"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UsersRow UsersRowByFK_Domain_UpdatedBy_User {
                get {
                    return ((UsersRow)(this.GetParentRow(this.Table.ParentRelations["FK_Domain_UpdatedBy_User"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Domain_UpdatedBy_User"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDomainTypeNull() {
                return this.IsNull(this.tableDomains.DomainTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDomainTypeNull() {
                this[this.tableDomains.DomainTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFoundInDocumentNull() {
                return this.IsNull(this.tableDomains.FoundInDocumentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFoundInDocumentNull() {
                this[this.tableDomains.FoundInDocumentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNoInfoDueToConnectFailureNull() {
                return this.IsNull(this.tableDomains.NoInfoDueToConnectFailureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNoInfoDueToConnectFailureNull() {
                this[this.tableDomains.NoInfoDueToConnectFailureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSkipBecauseLongTimeoutAndFailConnectNull() {
                return this.IsNull(this.tableDomains.SkipBecauseLongTimeoutAndFailConnectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSkipBecauseLongTimeoutAndFailConnectNull() {
                this[this.tableDomains.SkipBecauseLongTimeoutAndFailConnectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSetSkipBecauseLongTimeoutAndFailConnectNull() {
                return this.IsNull(this.tableDomains.SetSkipBecauseLongTimeoutAndFailConnectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSetSkipBecauseLongTimeoutAndFailConnectNull() {
                this[this.tableDomains.SetSkipBecauseLongTimeoutAndFailConnectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUnsetSkipBecauseLongTimeoutAndFailConnectNull() {
                return this.IsNull(this.tableDomains.UnsetSkipBecauseLongTimeoutAndFailConnectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUnsetSkipBecauseLongTimeoutAndFailConnectNull() {
                this[this.tableDomains.UnsetSkipBecauseLongTimeoutAndFailConnectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPurposeNull() {
                return this.IsNull(this.tableDomains.PurposeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPurposeNull() {
                this[this.tableDomains.PurposeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableDomains.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCommentsNull() {
                this[this.tableDomains.CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTestedNull() {
                return this.IsNull(this.tableDomains.TestedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTestedNull() {
                this[this.tableDomains.TestedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTestedButNoChangeByNull() {
                return this.IsNull(this.tableDomains.TestedButNoChangeByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTestedButNoChangeByNull() {
                this[this.tableDomains.TestedButNoChangeByColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ServerAliasesRow : global::System.Data.DataRow {
            
            private ServerAliasesDataTable tableServerAliases;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ServerAliasesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableServerAliases = ((ServerAliasesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int AliasId {
                get {
                    return ((int)(this[this.tableServerAliases.AliasIdColumn]));
                }
                set {
                    this[this.tableServerAliases.AliasIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AliasNm {
                get {
                    return ((string)(this[this.tableServerAliases.AliasNmColumn]));
                }
                set {
                    this[this.tableServerAliases.AliasNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AliasType {
                get {
                    try {
                        return ((string)(this[this.tableServerAliases.AliasTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AliasType\' in table \'ServerAliases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServerAliases.AliasTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSQLConfiguration {
                get {
                    try {
                        return ((bool)(this[this.tableServerAliases.IsSQLConfigurationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsSQLConfiguration\' in table \'ServerAliases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServerAliases.IsSQLConfigurationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDSNAlias {
                get {
                    try {
                        return ((bool)(this[this.tableServerAliases.IsDSNAliasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDSNAlias\' in table \'ServerAliases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServerAliases.IsDSNAliasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLnkSvrEntry {
                get {
                    try {
                        return ((bool)(this[this.tableServerAliases.IsLnkSvrEntryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsLnkSvrEntry\' in table \'ServerAliases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServerAliases.IsLnkSvrEntryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int FoundOnServerId {
                get {
                    try {
                        return ((int)(this[this.tableServerAliases.FoundOnServerIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FoundOnServerId\' in table \'ServerAliases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServerAliases.FoundOnServerIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int PointsToServerId {
                get {
                    try {
                        return ((int)(this[this.tableServerAliases.PointsToServerIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PointsToServerId\' in table \'ServerAliases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServerAliases.PointsToServerIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool CreatedForApp {
                get {
                    try {
                        return ((bool)(this[this.tableServerAliases.CreatedForAppColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedForApp\' in table \'ServerAliases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServerAliases.CreatedForAppColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool CreatedForDBAConvenience {
                get {
                    try {
                        return ((bool)(this[this.tableServerAliases.CreatedForDBAConvenienceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedForDBAConvenience\' in table \'ServerAliases\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableServerAliases.CreatedForDBAConvenienceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool FoundInDocument {
                get {
                    try {
                        return ((bool)(this[this.tableServerAliases.FoundInDocumentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FoundInDocument\' in table \'ServerAliases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServerAliases.FoundInDocumentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool NoInfoDueToConnectFailure {
                get {
                    try {
                        return ((bool)(this[this.tableServerAliases.NoInfoDueToConnectFailureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoInfoDueToConnectFailure\' in table \'ServerAliases\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableServerAliases.NoInfoDueToConnectFailureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SkipBecauseLongTimeoutAndFailConnect {
                get {
                    try {
                        return ((bool)(this[this.tableServerAliases.SkipBecauseLongTimeoutAndFailConnectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SkipBecauseLongTimeoutAndFailConnect\' in table \'ServerAlias" +
                                "es\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServerAliases.SkipBecauseLongTimeoutAndFailConnectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTimeOffset SetSkipBecauseLongTimeoutAndFailConnect {
                get {
                    try {
                        return ((global::System.DateTimeOffset)(this[this.tableServerAliases.SetSkipBecauseLongTimeoutAndFailConnectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SetSkipBecauseLongTimeoutAndFailConnect\' in table \'ServerAl" +
                                "iases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServerAliases.SetSkipBecauseLongTimeoutAndFailConnectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTimeOffset UnsetSkipBecauseLongTimeoutAndFailConnect {
                get {
                    try {
                        return ((global::System.DateTimeOffset)(this[this.tableServerAliases.UnsetSkipBecauseLongTimeoutAndFailConnectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnsetSkipBecauseLongTimeoutAndFailConnect\' in table \'Server" +
                                "Aliases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServerAliases.UnsetSkipBecauseLongTimeoutAndFailConnectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTimeOffset TestQueryFailed {
                get {
                    try {
                        return ((global::System.DateTimeOffset)(this[this.tableServerAliases.TestQueryFailedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TestQueryFailed\' in table \'ServerAliases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServerAliases.TestQueryFailedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTimeOffset TestQuerySucceeded {
                get {
                    try {
                        return ((global::System.DateTimeOffset)(this[this.tableServerAliases.TestQuerySucceededColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TestQuerySucceeded\' in table \'ServerAliases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServerAliases.TestQuerySucceededColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Purpose {
                get {
                    try {
                        return ((string)(this[this.tableServerAliases.PurposeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purpose\' in table \'ServerAliases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServerAliases.PurposeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableServerAliases.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'ServerAliases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServerAliases.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SourceId {
                get {
                    return ((int)(this[this.tableServerAliases.SourceIdColumn]));
                }
                set {
                    this[this.tableServerAliases.SourceIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTimeOffset Created {
                get {
                    return ((global::System.DateTimeOffset)(this[this.tableServerAliases.CreatedColumn]));
                }
                set {
                    this[this.tableServerAliases.CreatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int CreatedBy {
                get {
                    return ((int)(this[this.tableServerAliases.CreatedByColumn]));
                }
                set {
                    this[this.tableServerAliases.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTimeOffset Tested {
                get {
                    try {
                        return ((global::System.DateTimeOffset)(this[this.tableServerAliases.TestedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tested\' in table \'ServerAliases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServerAliases.TestedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int TestedButNoChangeBy {
                get {
                    try {
                        return ((int)(this[this.tableServerAliases.TestedButNoChangeByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TestedButNoChangeBy\' in table \'ServerAliases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServerAliases.TestedButNoChangeByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTimeOffset Updated {
                get {
                    return ((global::System.DateTimeOffset)(this[this.tableServerAliases.UpdatedColumn]));
                }
                set {
                    this[this.tableServerAliases.UpdatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int UpdatedBy {
                get {
                    return ((int)(this[this.tableServerAliases.UpdatedByColumn]));
                }
                set {
                    this[this.tableServerAliases.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ServersRow ServersRowByFK__Aliases__FoundOn__32381C97 {
                get {
                    return ((ServersRow)(this.GetParentRow(this.Table.ParentRelations["FK__Aliases__FoundOn__32381C97"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Aliases__FoundOn__32381C97"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ServersRow ServersRowByFK__Aliases__PointsT__332C40D0 {
                get {
                    return ((ServersRow)(this.GetParentRow(this.Table.ParentRelations["FK__Aliases__PointsT__332C40D0"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Aliases__PointsT__332C40D0"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UsersRow UsersRowByFK_Alias_CreatedBy_User {
                get {
                    return ((UsersRow)(this.GetParentRow(this.Table.ParentRelations["FK_Alias_CreatedBy_User"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Alias_CreatedBy_User"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UsersRow UsersRowByFK_Alias_TestedButNoChangeBy_User {
                get {
                    return ((UsersRow)(this.GetParentRow(this.Table.ParentRelations["FK_Alias_TestedButNoChangeBy_User"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Alias_TestedButNoChangeBy_User"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UsersRow UsersRowByFK_Alias_UpdatedBy_User {
                get {
                    return ((UsersRow)(this.GetParentRow(this.Table.ParentRelations["FK_Alias_UpdatedBy_User"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Alias_UpdatedBy_User"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAliasTypeNull() {
                return this.IsNull(this.tableServerAliases.AliasTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAliasTypeNull() {
                this[this.tableServerAliases.AliasTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIsSQLConfigurationNull() {
                return this.IsNull(this.tableServerAliases.IsSQLConfigurationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIsSQLConfigurationNull() {
                this[this.tableServerAliases.IsSQLConfigurationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIsDSNAliasNull() {
                return this.IsNull(this.tableServerAliases.IsDSNAliasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIsDSNAliasNull() {
                this[this.tableServerAliases.IsDSNAliasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIsLnkSvrEntryNull() {
                return this.IsNull(this.tableServerAliases.IsLnkSvrEntryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIsLnkSvrEntryNull() {
                this[this.tableServerAliases.IsLnkSvrEntryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFoundOnServerIdNull() {
                return this.IsNull(this.tableServerAliases.FoundOnServerIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFoundOnServerIdNull() {
                this[this.tableServerAliases.FoundOnServerIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPointsToServerIdNull() {
                return this.IsNull(this.tableServerAliases.PointsToServerIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPointsToServerIdNull() {
                this[this.tableServerAliases.PointsToServerIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCreatedForAppNull() {
                return this.IsNull(this.tableServerAliases.CreatedForAppColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCreatedForAppNull() {
                this[this.tableServerAliases.CreatedForAppColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCreatedForDBAConvenienceNull() {
                return this.IsNull(this.tableServerAliases.CreatedForDBAConvenienceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCreatedForDBAConvenienceNull() {
                this[this.tableServerAliases.CreatedForDBAConvenienceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFoundInDocumentNull() {
                return this.IsNull(this.tableServerAliases.FoundInDocumentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFoundInDocumentNull() {
                this[this.tableServerAliases.FoundInDocumentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNoInfoDueToConnectFailureNull() {
                return this.IsNull(this.tableServerAliases.NoInfoDueToConnectFailureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNoInfoDueToConnectFailureNull() {
                this[this.tableServerAliases.NoInfoDueToConnectFailureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSkipBecauseLongTimeoutAndFailConnectNull() {
                return this.IsNull(this.tableServerAliases.SkipBecauseLongTimeoutAndFailConnectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSkipBecauseLongTimeoutAndFailConnectNull() {
                this[this.tableServerAliases.SkipBecauseLongTimeoutAndFailConnectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSetSkipBecauseLongTimeoutAndFailConnectNull() {
                return this.IsNull(this.tableServerAliases.SetSkipBecauseLongTimeoutAndFailConnectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSetSkipBecauseLongTimeoutAndFailConnectNull() {
                this[this.tableServerAliases.SetSkipBecauseLongTimeoutAndFailConnectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUnsetSkipBecauseLongTimeoutAndFailConnectNull() {
                return this.IsNull(this.tableServerAliases.UnsetSkipBecauseLongTimeoutAndFailConnectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUnsetSkipBecauseLongTimeoutAndFailConnectNull() {
                this[this.tableServerAliases.UnsetSkipBecauseLongTimeoutAndFailConnectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTestQueryFailedNull() {
                return this.IsNull(this.tableServerAliases.TestQueryFailedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTestQueryFailedNull() {
                this[this.tableServerAliases.TestQueryFailedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTestQuerySucceededNull() {
                return this.IsNull(this.tableServerAliases.TestQuerySucceededColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTestQuerySucceededNull() {
                this[this.tableServerAliases.TestQuerySucceededColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPurposeNull() {
                return this.IsNull(this.tableServerAliases.PurposeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPurposeNull() {
                this[this.tableServerAliases.PurposeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableServerAliases.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCommentsNull() {
                this[this.tableServerAliases.CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTestedNull() {
                return this.IsNull(this.tableServerAliases.TestedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTestedNull() {
                this[this.tableServerAliases.TestedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTestedButNoChangeByNull() {
                return this.IsNull(this.tableServerAliases.TestedButNoChangeByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTestedButNoChangeByNull() {
                this[this.tableServerAliases.TestedButNoChangeByColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ServersRow : global::System.Data.DataRow {
            
            private ServersDataTable tableServers;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ServersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableServers = ((ServersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ServerId {
                get {
                    return ((int)(this[this.tableServers.ServerIdColumn]));
                }
                set {
                    this[this.tableServers.ServerIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ServerNm {
                get {
                    return ((string)(this[this.tableServers.ServerNmColumn]));
                }
                set {
                    this[this.tableServers.ServerNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ServerType {
                get {
                    try {
                        return ((string)(this[this.tableServers.ServerTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServerType\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.ServerTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Impl {
                get {
                    try {
                        return ((string)(this[this.tableServers.ImplColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Impl\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.ImplColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ServerDesc {
                get {
                    try {
                        return ((string)(this[this.tableServers.ServerDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServerDesc\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.ServerDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ServerAliases {
                get {
                    try {
                        return ((string)(this[this.tableServers.ServerAliasesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServerAliases\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.ServerAliasesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ServerEnvironments {
                get {
                    try {
                        return ((string)(this[this.tableServers.ServerEnvironmentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServerEnvironments\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.ServerEnvironmentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte EnvironmentId {
                get {
                    try {
                        return ((byte)(this[this.tableServers.EnvironmentIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EnvironmentId\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.EnvironmentIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RestrictionNotice {
                get {
                    try {
                        return ((string)(this[this.tableServers.RestrictionNoticeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RestrictionNotice\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.RestrictionNoticeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RestrictedByNm {
                get {
                    try {
                        return ((string)(this[this.tableServers.RestrictedByNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RestrictedByNm\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.RestrictedByNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTimeOffset Restricted {
                get {
                    try {
                        return ((global::System.DateTimeOffset)(this[this.tableServers.RestrictedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Restricted\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.RestrictedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string InstanceNm {
                get {
                    try {
                        return ((string)(this[this.tableServers.InstanceNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InstanceNm\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.InstanceNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] IP4Address {
                get {
                    try {
                        return ((byte[])(this[this.tableServers.IP4AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IP4Address\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.IP4AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool FoundInDocument {
                get {
                    try {
                        return ((bool)(this[this.tableServers.FoundInDocumentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FoundInDocument\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.FoundInDocumentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool LegacySource {
                get {
                    try {
                        return ((bool)(this[this.tableServers.LegacySourceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LegacySource\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.LegacySourceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool NoLongerExists {
                get {
                    try {
                        return ((bool)(this[this.tableServers.NoLongerExistsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoLongerExists\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.NoLongerExistsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool NoInfoDueToConnectFailure {
                get {
                    return ((bool)(this[this.tableServers.NoInfoDueToConnectFailureColumn]));
                }
                set {
                    this[this.tableServers.NoInfoDueToConnectFailureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTimeOffset LastTimePingSucceeded {
                get {
                    try {
                        return ((global::System.DateTimeOffset)(this[this.tableServers.LastTimePingSucceededColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastTimePingSucceeded\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.LastTimePingSucceededColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long SuccessfulPingDurationNS {
                get {
                    try {
                        return ((long)(this[this.tableServers.SuccessfulPingDurationNSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SuccessfulPingDurationNS\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.SuccessfulPingDurationNSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTimeOffset LastTimePingFailed {
                get {
                    try {
                        return ((global::System.DateTimeOffset)(this[this.tableServers.LastTimePingFailedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastTimePingFailed\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.LastTimePingFailedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long FailedPingDurationNS {
                get {
                    try {
                        return ((long)(this[this.tableServers.FailedPingDurationNSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FailedPingDurationNS\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.FailedPingDurationNSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int PingFailed {
                get {
                    try {
                        return ((int)(this[this.tableServers.PingFailedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PingFailed\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.PingFailedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool LongTimeoutAndFailedToConnect {
                get {
                    try {
                        return ((bool)(this[this.tableServers.LongTimeoutAndFailedToConnectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LongTimeoutAndFailedToConnect\' in table \'Servers\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableServers.LongTimeoutAndFailedToConnectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTimeOffset LastTimeLongTimeoutAndFailedToConnect {
                get {
                    try {
                        return ((global::System.DateTimeOffset)(this[this.tableServers.LastTimeLongTimeoutAndFailedToConnectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastTimeLongTimeoutAndFailedToConnect\' in table \'Servers\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.LastTimeLongTimeoutAndFailedToConnectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int NoAccessForADUserId {
                get {
                    try {
                        return ((int)(this[this.tableServers.NoAccessForADUserIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoAccessForADUserId\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.NoAccessForADUserIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTimeOffset LastTimeNoAccessForADUserId {
                get {
                    try {
                        return ((global::System.DateTimeOffset)(this[this.tableServers.LastTimeNoAccessForADUserIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastTimeNoAccessForADUserId\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.LastTimeNoAccessForADUserIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool ConnectionAttemptTimedOut {
                get {
                    try {
                        return ((bool)(this[this.tableServers.ConnectionAttemptTimedOutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConnectionAttemptTimedOut\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.ConnectionAttemptTimedOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTimeOffset LastTimeConnectionAttemptTimedOut {
                get {
                    try {
                        return ((global::System.DateTimeOffset)(this[this.tableServers.LastTimeConnectionAttemptTimedOutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastTimeConnectionAttemptTimedOut\' in table \'Servers\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableServers.LastTimeConnectionAttemptTimedOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTimeOffset LastTimeConnectionAttemptSucceeded {
                get {
                    try {
                        return ((global::System.DateTimeOffset)(this[this.tableServers.LastTimeConnectionAttemptSucceededColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastTimeConnectionAttemptSucceeded\' in table \'Servers\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableServers.LastTimeConnectionAttemptSucceededColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long TimeItTookToConnect {
                get {
                    try {
                        return ((long)(this[this.tableServers.TimeItTookToConnectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TimeItTookToConnect\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.TimeItTookToConnectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ConnectTimeoutSetAtTimeOfTimeOut {
                get {
                    try {
                        return ((int)(this[this.tableServers.ConnectTimeoutSetAtTimeOfTimeOutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConnectTimeoutSetAtTimeOfTimeOut\' in table \'Servers\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableServers.ConnectTimeoutSetAtTimeOfTimeOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool ClientFailedToMakeAConnection {
                get {
                    try {
                        return ((bool)(this[this.tableServers.ClientFailedToMakeAConnectionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientFailedToMakeAConnection\' in table \'Servers\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableServers.ClientFailedToMakeAConnectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTimeOffset LastTimeClientFailedToMakeAConnection {
                get {
                    try {
                        return ((global::System.DateTimeOffset)(this[this.tableServers.LastTimeClientFailedToMakeAConnectionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastTimeClientFailedToMakeAConnection\' in table \'Servers\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.LastTimeClientFailedToMakeAConnectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int LoginFailedForUserId {
                get {
                    try {
                        return ((int)(this[this.tableServers.LoginFailedForUserIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LoginFailedForUserId\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.LoginFailedForUserIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTimeOffset LastTimeLoginFailedForUser {
                get {
                    try {
                        return ((global::System.DateTimeOffset)(this[this.tableServers.LastTimeLoginFailedForUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastTimeLoginFailedForUser\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.LastTimeLoginFailedForUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Skip {
                get {
                    try {
                        return ((int)(this[this.tableServers.SkipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Skip\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.SkipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DomainNm {
                get {
                    return ((string)(this[this.tableServers.DomainNmColumn]));
                }
                set {
                    this[this.tableServers.DomainNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int DbLinkLoginId {
                get {
                    try {
                        return ((int)(this[this.tableServers.DbLinkLoginIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DbLinkLoginId\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.DbLinkLoginIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int LinkedFromServerId {
                get {
                    try {
                        return ((int)(this[this.tableServers.LinkedFromServerIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LinkedFromServerId\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.LinkedFromServerIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int HostId {
                get {
                    try {
                        return ((int)(this[this.tableServers.HostIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HostId\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.HostIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string HostNm {
                get {
                    try {
                        return ((string)(this[this.tableServers.HostNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HostNm\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.HostNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string HostOSDesc {
                get {
                    try {
                        return ((string)(this[this.tableServers.HostOSDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HostOSDesc\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.HostOSDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string HostNmPhysicalNetBIOS {
                get {
                    try {
                        return ((string)(this[this.tableServers.HostNmPhysicalNetBIOSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HostNmPhysicalNetBIOS\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.HostNmPhysicalNetBIOSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Purpose {
                get {
                    try {
                        return ((string)(this[this.tableServers.PurposeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purpose\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.PurposeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MethodsUsedToDeterminePurpose {
                get {
                    try {
                        return ((string)(this[this.tableServers.MethodsUsedToDeterminePurposeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MethodsUsedToDeterminePurpose\' in table \'Servers\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableServers.MethodsUsedToDeterminePurposeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Edition {
                get {
                    try {
                        return ((string)(this[this.tableServers.EditionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Edition\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.EditionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int EngineEdition {
                get {
                    try {
                        return ((int)(this[this.tableServers.EngineEditionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EngineEdition\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.EngineEditionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EditionNm {
                get {
                    try {
                        return ((string)(this[this.tableServers.EditionNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EditionNm\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.EditionNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ProductBuild {
                get {
                    try {
                        return ((string)(this[this.tableServers.ProductBuildColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductBuild\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.ProductBuildColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ProductBuildType {
                get {
                    try {
                        return ((string)(this[this.tableServers.ProductBuildTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductBuildType\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.ProductBuildTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ProductReleaseYear {
                get {
                    try {
                        return ((string)(this[this.tableServers.ProductReleaseYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductReleaseYear\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.ProductReleaseYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ProductVersion {
                get {
                    try {
                        return ((string)(this[this.tableServers.ProductVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductVersion\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.ProductVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ProductLevel {
                get {
                    try {
                        return ((string)(this[this.tableServers.ProductLevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductLevel\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.ProductLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LastKBApplied {
                get {
                    try {
                        return ((string)(this[this.tableServers.LastKBAppliedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastKBApplied\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.LastKBAppliedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ProductMajorVersion {
                get {
                    try {
                        return ((string)(this[this.tableServers.ProductMajorVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductMajorVersion\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.ProductMajorVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ProductMinorVersion {
                get {
                    try {
                        return ((string)(this[this.tableServers.ProductMinorVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductMinorVersion\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.ProductMinorVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ProductUpdateLevel {
                get {
                    try {
                        return ((string)(this[this.tableServers.ProductUpdateLevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductUpdateLevel\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.ProductUpdateLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Collation {
                get {
                    try {
                        return ((string)(this[this.tableServers.CollationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Collation\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.CollationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ErrorLogFileNm {
                get {
                    try {
                        return ((string)(this[this.tableServers.ErrorLogFileNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ErrorLogFileNm\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.ErrorLogFileNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FilestreamConfiguredLevel {
                get {
                    try {
                        return ((string)(this[this.tableServers.FilestreamConfiguredLevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FilestreamConfiguredLevel\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.FilestreamConfiguredLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FilestreamShareNm {
                get {
                    try {
                        return ((string)(this[this.tableServers.FilestreamShareNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FilestreamShareNm\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.FilestreamShareNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int HadrManagerStatus {
                get {
                    try {
                        return ((int)(this[this.tableServers.HadrManagerStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HadrManagerStatus\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.HadrManagerStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int IsHadrEnabled {
                get {
                    try {
                        return ((int)(this[this.tableServers.IsHadrEnabledColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsHadrEnabled\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.IsHadrEnabledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int IsXTPSupported {
                get {
                    try {
                        return ((int)(this[this.tableServers.IsXTPSupportedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsXTPSupported\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.IsXTPSupportedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int IsClustered {
                get {
                    try {
                        return ((int)(this[this.tableServers.IsClusteredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsClustered\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.IsClusteredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int IsPolyBaseInstalled {
                get {
                    try {
                        return ((int)(this[this.tableServers.IsPolyBaseInstalledColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsPolyBaseInstalled\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.IsPolyBaseInstalledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int IsIntegratedSecurityOnly {
                get {
                    try {
                        return ((int)(this[this.tableServers.IsIntegratedSecurityOnlyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsIntegratedSecurityOnly\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.IsIntegratedSecurityOnlyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int IsSingleUser {
                get {
                    try {
                        return ((int)(this[this.tableServers.IsSingleUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsSingleUser\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.IsSingleUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int IsFullTextInstalled {
                get {
                    try {
                        return ((int)(this[this.tableServers.IsFullTextInstalledColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsFullTextInstalled\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.IsFullTextInstalledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int IsAdvancedAnalyticsInstalled {
                get {
                    try {
                        return ((int)(this[this.tableServers.IsAdvancedAnalyticsInstalledColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsAdvancedAnalyticsInstalled\' in table \'Servers\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableServers.IsAdvancedAnalyticsInstalledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int IsLocalDb {
                get {
                    try {
                        return ((int)(this[this.tableServers.IsLocalDbColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsLocalDb\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.IsLocalDbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BuildClrVersion {
                get {
                    try {
                        return ((string)(this[this.tableServers.BuildClrVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuildClrVersion\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.BuildClrVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ProcessId {
                get {
                    try {
                        return ((int)(this[this.tableServers.ProcessIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProcessId\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.ProcessIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ComparisonStyle {
                get {
                    try {
                        return ((int)(this[this.tableServers.ComparisonStyleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ComparisonStyle\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.ComparisonStyleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SqlCharSetNm {
                get {
                    try {
                        return ((string)(this[this.tableServers.SqlCharSetNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SqlCharSetNm\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.SqlCharSetNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SqlSortOrderNm {
                get {
                    try {
                        return ((string)(this[this.tableServers.SqlSortOrderNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SqlSortOrderNm\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.SqlSortOrderNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BackupPrimaryPath {
                get {
                    try {
                        return ((string)(this[this.tableServers.BackupPrimaryPathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BackupPrimaryPath\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.BackupPrimaryPathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BackupSecondaryPath {
                get {
                    try {
                        return ((string)(this[this.tableServers.BackupSecondaryPathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BackupSecondaryPath\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.BackupSecondaryPathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LastBackupName {
                get {
                    try {
                        return ((string)(this[this.tableServers.LastBackupNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastBackupName\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.LastBackupNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTimeOffset Created {
                get {
                    try {
                        return ((global::System.DateTimeOffset)(this[this.tableServers.CreatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Created\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.CreatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int CreatedBy {
                get {
                    try {
                        return ((int)(this[this.tableServers.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTimeOffset Updated {
                get {
                    try {
                        return ((global::System.DateTimeOffset)(this[this.tableServers.UpdatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Updated\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.UpdatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tableServers.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTimeOffset TestedButNoChange {
                get {
                    try {
                        return ((global::System.DateTimeOffset)(this[this.tableServers.TestedButNoChangeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TestedButNoChange\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.TestedButNoChangeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int TestedButNoChangeBy {
                get {
                    try {
                        return ((int)(this[this.tableServers.TestedButNoChangeByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TestedButNoChangeBy\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.TestedButNoChangeByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTimeOffset Audited {
                get {
                    try {
                        return ((global::System.DateTimeOffset)(this[this.tableServers.AuditedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Audited\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.AuditedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SourceId {
                get {
                    return ((int)(this[this.tableServers.SourceIdColumn]));
                }
                set {
                    this[this.tableServers.SourceIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SourceId2 {
                get {
                    try {
                        return ((int)(this[this.tableServers.SourceId2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SourceId2\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.SourceId2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SourceId3 {
                get {
                    try {
                        return ((int)(this[this.tableServers.SourceId3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SourceId3\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.SourceId3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SourceId4 {
                get {
                    try {
                        return ((int)(this[this.tableServers.SourceId4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SourceId4\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.SourceId4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDMZ {
                get {
                    try {
                        return ((bool)(this[this.tableServers.IsDMZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDMZ\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.IsDMZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int FedFromServerId {
                get {
                    try {
                        return ((int)(this[this.tableServers.FedFromServerIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FedFromServerId\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.FedFromServerIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int FeedsIntoServerId {
                get {
                    try {
                        return ((int)(this[this.tableServers.FeedsIntoServerIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FeedsIntoServerId\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.FeedsIntoServerIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Region {
                get {
                    try {
                        return ((string)(this[this.tableServers.RegionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Region\' in table \'Servers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServers.RegionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ServersRow ServersRowParentByFK__Server__FedFromS__0BE8567D {
                get {
                    return ((ServersRow)(this.GetParentRow(this.Table.ParentRelations["FK__Server__FedFromS__0BE8567D"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Server__FedFromS__0BE8567D"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ServersRow ServersRowParentByFK__Server__FeedsInt__0CDC7AB6 {
                get {
                    return ((ServersRow)(this.GetParentRow(this.Table.ParentRelations["FK__Server__FeedsInt__0CDC7AB6"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Server__FeedsInt__0CDC7AB6"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ServersRow ServersRowParentByFK_DBLinkServer_OnServer {
                get {
                    return ((ServersRow)(this.GetParentRow(this.Table.ParentRelations["FK_DBLinkServer_OnServer"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_DBLinkServer_OnServer"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UsersRow UsersRowByFK_Server_User_Created {
                get {
                    return ((UsersRow)(this.GetParentRow(this.Table.ParentRelations["FK_Server_User_Created"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Server_User_Created"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UsersRow UsersRowByFK_Server_User_TestButNoChange {
                get {
                    return ((UsersRow)(this.GetParentRow(this.Table.ParentRelations["FK_Server_User_TestButNoChange"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Server_User_TestButNoChange"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UsersRow UsersRowByFK_Server_User_Updated {
                get {
                    return ((UsersRow)(this.GetParentRow(this.Table.ParentRelations["FK_Server_User_Updated"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Server_User_Updated"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsServerTypeNull() {
                return this.IsNull(this.tableServers.ServerTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetServerTypeNull() {
                this[this.tableServers.ServerTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsImplNull() {
                return this.IsNull(this.tableServers.ImplColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetImplNull() {
                this[this.tableServers.ImplColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsServerDescNull() {
                return this.IsNull(this.tableServers.ServerDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetServerDescNull() {
                this[this.tableServers.ServerDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsServerAliasesNull() {
                return this.IsNull(this.tableServers.ServerAliasesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetServerAliasesNull() {
                this[this.tableServers.ServerAliasesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsServerEnvironmentsNull() {
                return this.IsNull(this.tableServers.ServerEnvironmentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetServerEnvironmentsNull() {
                this[this.tableServers.ServerEnvironmentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEnvironmentIdNull() {
                return this.IsNull(this.tableServers.EnvironmentIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEnvironmentIdNull() {
                this[this.tableServers.EnvironmentIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRestrictionNoticeNull() {
                return this.IsNull(this.tableServers.RestrictionNoticeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRestrictionNoticeNull() {
                this[this.tableServers.RestrictionNoticeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRestrictedByNmNull() {
                return this.IsNull(this.tableServers.RestrictedByNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRestrictedByNmNull() {
                this[this.tableServers.RestrictedByNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRestrictedNull() {
                return this.IsNull(this.tableServers.RestrictedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRestrictedNull() {
                this[this.tableServers.RestrictedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsInstanceNmNull() {
                return this.IsNull(this.tableServers.InstanceNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetInstanceNmNull() {
                this[this.tableServers.InstanceNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIP4AddressNull() {
                return this.IsNull(this.tableServers.IP4AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIP4AddressNull() {
                this[this.tableServers.IP4AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFoundInDocumentNull() {
                return this.IsNull(this.tableServers.FoundInDocumentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFoundInDocumentNull() {
                this[this.tableServers.FoundInDocumentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLegacySourceNull() {
                return this.IsNull(this.tableServers.LegacySourceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLegacySourceNull() {
                this[this.tableServers.LegacySourceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNoLongerExistsNull() {
                return this.IsNull(this.tableServers.NoLongerExistsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNoLongerExistsNull() {
                this[this.tableServers.NoLongerExistsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLastTimePingSucceededNull() {
                return this.IsNull(this.tableServers.LastTimePingSucceededColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLastTimePingSucceededNull() {
                this[this.tableServers.LastTimePingSucceededColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSuccessfulPingDurationNSNull() {
                return this.IsNull(this.tableServers.SuccessfulPingDurationNSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSuccessfulPingDurationNSNull() {
                this[this.tableServers.SuccessfulPingDurationNSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLastTimePingFailedNull() {
                return this.IsNull(this.tableServers.LastTimePingFailedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLastTimePingFailedNull() {
                this[this.tableServers.LastTimePingFailedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFailedPingDurationNSNull() {
                return this.IsNull(this.tableServers.FailedPingDurationNSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFailedPingDurationNSNull() {
                this[this.tableServers.FailedPingDurationNSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPingFailedNull() {
                return this.IsNull(this.tableServers.PingFailedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPingFailedNull() {
                this[this.tableServers.PingFailedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLongTimeoutAndFailedToConnectNull() {
                return this.IsNull(this.tableServers.LongTimeoutAndFailedToConnectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLongTimeoutAndFailedToConnectNull() {
                this[this.tableServers.LongTimeoutAndFailedToConnectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLastTimeLongTimeoutAndFailedToConnectNull() {
                return this.IsNull(this.tableServers.LastTimeLongTimeoutAndFailedToConnectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLastTimeLongTimeoutAndFailedToConnectNull() {
                this[this.tableServers.LastTimeLongTimeoutAndFailedToConnectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNoAccessForADUserIdNull() {
                return this.IsNull(this.tableServers.NoAccessForADUserIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNoAccessForADUserIdNull() {
                this[this.tableServers.NoAccessForADUserIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLastTimeNoAccessForADUserIdNull() {
                return this.IsNull(this.tableServers.LastTimeNoAccessForADUserIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLastTimeNoAccessForADUserIdNull() {
                this[this.tableServers.LastTimeNoAccessForADUserIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsConnectionAttemptTimedOutNull() {
                return this.IsNull(this.tableServers.ConnectionAttemptTimedOutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetConnectionAttemptTimedOutNull() {
                this[this.tableServers.ConnectionAttemptTimedOutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLastTimeConnectionAttemptTimedOutNull() {
                return this.IsNull(this.tableServers.LastTimeConnectionAttemptTimedOutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLastTimeConnectionAttemptTimedOutNull() {
                this[this.tableServers.LastTimeConnectionAttemptTimedOutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLastTimeConnectionAttemptSucceededNull() {
                return this.IsNull(this.tableServers.LastTimeConnectionAttemptSucceededColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLastTimeConnectionAttemptSucceededNull() {
                this[this.tableServers.LastTimeConnectionAttemptSucceededColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTimeItTookToConnectNull() {
                return this.IsNull(this.tableServers.TimeItTookToConnectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTimeItTookToConnectNull() {
                this[this.tableServers.TimeItTookToConnectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsConnectTimeoutSetAtTimeOfTimeOutNull() {
                return this.IsNull(this.tableServers.ConnectTimeoutSetAtTimeOfTimeOutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetConnectTimeoutSetAtTimeOfTimeOutNull() {
                this[this.tableServers.ConnectTimeoutSetAtTimeOfTimeOutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsClientFailedToMakeAConnectionNull() {
                return this.IsNull(this.tableServers.ClientFailedToMakeAConnectionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetClientFailedToMakeAConnectionNull() {
                this[this.tableServers.ClientFailedToMakeAConnectionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLastTimeClientFailedToMakeAConnectionNull() {
                return this.IsNull(this.tableServers.LastTimeClientFailedToMakeAConnectionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLastTimeClientFailedToMakeAConnectionNull() {
                this[this.tableServers.LastTimeClientFailedToMakeAConnectionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLoginFailedForUserIdNull() {
                return this.IsNull(this.tableServers.LoginFailedForUserIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLoginFailedForUserIdNull() {
                this[this.tableServers.LoginFailedForUserIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLastTimeLoginFailedForUserNull() {
                return this.IsNull(this.tableServers.LastTimeLoginFailedForUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLastTimeLoginFailedForUserNull() {
                this[this.tableServers.LastTimeLoginFailedForUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSkipNull() {
                return this.IsNull(this.tableServers.SkipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSkipNull() {
                this[this.tableServers.SkipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDbLinkLoginIdNull() {
                return this.IsNull(this.tableServers.DbLinkLoginIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDbLinkLoginIdNull() {
                this[this.tableServers.DbLinkLoginIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLinkedFromServerIdNull() {
                return this.IsNull(this.tableServers.LinkedFromServerIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLinkedFromServerIdNull() {
                this[this.tableServers.LinkedFromServerIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHostIdNull() {
                return this.IsNull(this.tableServers.HostIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHostIdNull() {
                this[this.tableServers.HostIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHostNmNull() {
                return this.IsNull(this.tableServers.HostNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHostNmNull() {
                this[this.tableServers.HostNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHostOSDescNull() {
                return this.IsNull(this.tableServers.HostOSDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHostOSDescNull() {
                this[this.tableServers.HostOSDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHostNmPhysicalNetBIOSNull() {
                return this.IsNull(this.tableServers.HostNmPhysicalNetBIOSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHostNmPhysicalNetBIOSNull() {
                this[this.tableServers.HostNmPhysicalNetBIOSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPurposeNull() {
                return this.IsNull(this.tableServers.PurposeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPurposeNull() {
                this[this.tableServers.PurposeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMethodsUsedToDeterminePurposeNull() {
                return this.IsNull(this.tableServers.MethodsUsedToDeterminePurposeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMethodsUsedToDeterminePurposeNull() {
                this[this.tableServers.MethodsUsedToDeterminePurposeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEditionNull() {
                return this.IsNull(this.tableServers.EditionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEditionNull() {
                this[this.tableServers.EditionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEngineEditionNull() {
                return this.IsNull(this.tableServers.EngineEditionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEngineEditionNull() {
                this[this.tableServers.EngineEditionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEditionNmNull() {
                return this.IsNull(this.tableServers.EditionNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEditionNmNull() {
                this[this.tableServers.EditionNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsProductBuildNull() {
                return this.IsNull(this.tableServers.ProductBuildColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetProductBuildNull() {
                this[this.tableServers.ProductBuildColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsProductBuildTypeNull() {
                return this.IsNull(this.tableServers.ProductBuildTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetProductBuildTypeNull() {
                this[this.tableServers.ProductBuildTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsProductReleaseYearNull() {
                return this.IsNull(this.tableServers.ProductReleaseYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetProductReleaseYearNull() {
                this[this.tableServers.ProductReleaseYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsProductVersionNull() {
                return this.IsNull(this.tableServers.ProductVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetProductVersionNull() {
                this[this.tableServers.ProductVersionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsProductLevelNull() {
                return this.IsNull(this.tableServers.ProductLevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetProductLevelNull() {
                this[this.tableServers.ProductLevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLastKBAppliedNull() {
                return this.IsNull(this.tableServers.LastKBAppliedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLastKBAppliedNull() {
                this[this.tableServers.LastKBAppliedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsProductMajorVersionNull() {
                return this.IsNull(this.tableServers.ProductMajorVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetProductMajorVersionNull() {
                this[this.tableServers.ProductMajorVersionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsProductMinorVersionNull() {
                return this.IsNull(this.tableServers.ProductMinorVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetProductMinorVersionNull() {
                this[this.tableServers.ProductMinorVersionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsProductUpdateLevelNull() {
                return this.IsNull(this.tableServers.ProductUpdateLevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetProductUpdateLevelNull() {
                this[this.tableServers.ProductUpdateLevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCollationNull() {
                return this.IsNull(this.tableServers.CollationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCollationNull() {
                this[this.tableServers.CollationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsErrorLogFileNmNull() {
                return this.IsNull(this.tableServers.ErrorLogFileNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetErrorLogFileNmNull() {
                this[this.tableServers.ErrorLogFileNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFilestreamConfiguredLevelNull() {
                return this.IsNull(this.tableServers.FilestreamConfiguredLevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFilestreamConfiguredLevelNull() {
                this[this.tableServers.FilestreamConfiguredLevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFilestreamShareNmNull() {
                return this.IsNull(this.tableServers.FilestreamShareNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFilestreamShareNmNull() {
                this[this.tableServers.FilestreamShareNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHadrManagerStatusNull() {
                return this.IsNull(this.tableServers.HadrManagerStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHadrManagerStatusNull() {
                this[this.tableServers.HadrManagerStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIsHadrEnabledNull() {
                return this.IsNull(this.tableServers.IsHadrEnabledColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIsHadrEnabledNull() {
                this[this.tableServers.IsHadrEnabledColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIsXTPSupportedNull() {
                return this.IsNull(this.tableServers.IsXTPSupportedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIsXTPSupportedNull() {
                this[this.tableServers.IsXTPSupportedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIsClusteredNull() {
                return this.IsNull(this.tableServers.IsClusteredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIsClusteredNull() {
                this[this.tableServers.IsClusteredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIsPolyBaseInstalledNull() {
                return this.IsNull(this.tableServers.IsPolyBaseInstalledColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIsPolyBaseInstalledNull() {
                this[this.tableServers.IsPolyBaseInstalledColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIsIntegratedSecurityOnlyNull() {
                return this.IsNull(this.tableServers.IsIntegratedSecurityOnlyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIsIntegratedSecurityOnlyNull() {
                this[this.tableServers.IsIntegratedSecurityOnlyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIsSingleUserNull() {
                return this.IsNull(this.tableServers.IsSingleUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIsSingleUserNull() {
                this[this.tableServers.IsSingleUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIsFullTextInstalledNull() {
                return this.IsNull(this.tableServers.IsFullTextInstalledColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIsFullTextInstalledNull() {
                this[this.tableServers.IsFullTextInstalledColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIsAdvancedAnalyticsInstalledNull() {
                return this.IsNull(this.tableServers.IsAdvancedAnalyticsInstalledColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIsAdvancedAnalyticsInstalledNull() {
                this[this.tableServers.IsAdvancedAnalyticsInstalledColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIsLocalDbNull() {
                return this.IsNull(this.tableServers.IsLocalDbColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIsLocalDbNull() {
                this[this.tableServers.IsLocalDbColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBuildClrVersionNull() {
                return this.IsNull(this.tableServers.BuildClrVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBuildClrVersionNull() {
                this[this.tableServers.BuildClrVersionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsProcessIdNull() {
                return this.IsNull(this.tableServers.ProcessIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetProcessIdNull() {
                this[this.tableServers.ProcessIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsComparisonStyleNull() {
                return this.IsNull(this.tableServers.ComparisonStyleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetComparisonStyleNull() {
                this[this.tableServers.ComparisonStyleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSqlCharSetNmNull() {
                return this.IsNull(this.tableServers.SqlCharSetNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSqlCharSetNmNull() {
                this[this.tableServers.SqlCharSetNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSqlSortOrderNmNull() {
                return this.IsNull(this.tableServers.SqlSortOrderNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSqlSortOrderNmNull() {
                this[this.tableServers.SqlSortOrderNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBackupPrimaryPathNull() {
                return this.IsNull(this.tableServers.BackupPrimaryPathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBackupPrimaryPathNull() {
                this[this.tableServers.BackupPrimaryPathColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBackupSecondaryPathNull() {
                return this.IsNull(this.tableServers.BackupSecondaryPathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBackupSecondaryPathNull() {
                this[this.tableServers.BackupSecondaryPathColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLastBackupNameNull() {
                return this.IsNull(this.tableServers.LastBackupNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLastBackupNameNull() {
                this[this.tableServers.LastBackupNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCreatedNull() {
                return this.IsNull(this.tableServers.CreatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCreatedNull() {
                this[this.tableServers.CreatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableServers.CreatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCreatedByNull() {
                this[this.tableServers.CreatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUpdatedNull() {
                return this.IsNull(this.tableServers.UpdatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUpdatedNull() {
                this[this.tableServers.UpdatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tableServers.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUpdatedByNull() {
                this[this.tableServers.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTestedButNoChangeNull() {
                return this.IsNull(this.tableServers.TestedButNoChangeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTestedButNoChangeNull() {
                this[this.tableServers.TestedButNoChangeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTestedButNoChangeByNull() {
                return this.IsNull(this.tableServers.TestedButNoChangeByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTestedButNoChangeByNull() {
                this[this.tableServers.TestedButNoChangeByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAuditedNull() {
                return this.IsNull(this.tableServers.AuditedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAuditedNull() {
                this[this.tableServers.AuditedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSourceId2Null() {
                return this.IsNull(this.tableServers.SourceId2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSourceId2Null() {
                this[this.tableServers.SourceId2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSourceId3Null() {
                return this.IsNull(this.tableServers.SourceId3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSourceId3Null() {
                this[this.tableServers.SourceId3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSourceId4Null() {
                return this.IsNull(this.tableServers.SourceId4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSourceId4Null() {
                this[this.tableServers.SourceId4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIsDMZNull() {
                return this.IsNull(this.tableServers.IsDMZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIsDMZNull() {
                this[this.tableServers.IsDMZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFedFromServerIdNull() {
                return this.IsNull(this.tableServers.FedFromServerIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFedFromServerIdNull() {
                this[this.tableServers.FedFromServerIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFeedsIntoServerIdNull() {
                return this.IsNull(this.tableServers.FeedsIntoServerIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFeedsIntoServerIdNull() {
                this[this.tableServers.FeedsIntoServerIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRegionNull() {
                return this.IsNull(this.tableServers.RegionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRegionNull() {
                this[this.tableServers.RegionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ServerAliasesRow[] GetServerAliasesRowsByFK__Aliases__FoundOn__32381C97() {
                if ((this.Table.ChildRelations["FK__Aliases__FoundOn__32381C97"] == null)) {
                    return new ServerAliasesRow[0];
                }
                else {
                    return ((ServerAliasesRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Aliases__FoundOn__32381C97"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ServerAliasesRow[] GetServerAliasesRowsByFK__Aliases__PointsT__332C40D0() {
                if ((this.Table.ChildRelations["FK__Aliases__PointsT__332C40D0"] == null)) {
                    return new ServerAliasesRow[0];
                }
                else {
                    return ((ServerAliasesRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Aliases__PointsT__332C40D0"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ServersRow[] GetServersRowsByFK__Server__FedFromS__0BE8567D() {
                if ((this.Table.ChildRelations["FK__Server__FedFromS__0BE8567D"] == null)) {
                    return new ServersRow[0];
                }
                else {
                    return ((ServersRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Server__FedFromS__0BE8567D"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ServersRow[] GetServersRowsByFK__Server__FeedsInt__0CDC7AB6() {
                if ((this.Table.ChildRelations["FK__Server__FeedsInt__0CDC7AB6"] == null)) {
                    return new ServersRow[0];
                }
                else {
                    return ((ServersRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Server__FeedsInt__0CDC7AB6"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ServersRow[] GetServersRowsByFK_DBLinkServer_OnServer() {
                if ((this.Table.ChildRelations["FK_DBLinkServer_OnServer"] == null)) {
                    return new ServersRow[0];
                }
                else {
                    return ((ServersRow[])(base.GetChildRows(this.Table.ChildRelations["FK_DBLinkServer_OnServer"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class UsersRow : global::System.Data.DataRow {
            
            private UsersDataTable tableUsers;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal UsersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUsers = ((UsersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int UserId {
                get {
                    return ((int)(this[this.tableUsers.UserIdColumn]));
                }
                set {
                    this[this.tableUsers.UserIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DomainCd {
                get {
                    return ((string)(this[this.tableUsers.DomainCdColumn]));
                }
                set {
                    this[this.tableUsers.DomainCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string UserLogonNm {
                get {
                    return ((string)(this[this.tableUsers.UserLogonNmColumn]));
                }
                set {
                    this[this.tableUsers.UserLogonNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string UserLogonNm2000 {
                get {
                    return ((string)(this[this.tableUsers.UserLogonNm2000Column]));
                }
                set {
                    this[this.tableUsers.UserLogonNm2000Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FirstName {
                get {
                    return ((string)(this[this.tableUsers.FirstNameColumn]));
                }
                set {
                    this[this.tableUsers.FirstNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LastName {
                get {
                    try {
                        return ((string)(this[this.tableUsers.LastNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastName\' in table \'Users\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.LastNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DisplayName {
                get {
                    try {
                        return ((string)(this[this.tableUsers.DisplayNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DisplayName\' in table \'Users\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.DisplayNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableUsers.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'Users\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Office {
                get {
                    try {
                        return ((string)(this[this.tableUsers.OfficeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Office\' in table \'Users\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.OfficeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LongFormLogonNm {
                get {
                    try {
                        return ((string)(this[this.tableUsers.LongFormLogonNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LongFormLogonNm\' in table \'Users\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.LongFormLogonNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLastNameNull() {
                return this.IsNull(this.tableUsers.LastNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLastNameNull() {
                this[this.tableUsers.LastNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDisplayNameNull() {
                return this.IsNull(this.tableUsers.DisplayNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDisplayNameNull() {
                this[this.tableUsers.DisplayNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableUsers.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDescriptionNull() {
                this[this.tableUsers.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOfficeNull() {
                return this.IsNull(this.tableUsers.OfficeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOfficeNull() {
                this[this.tableUsers.OfficeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLongFormLogonNmNull() {
                return this.IsNull(this.tableUsers.LongFormLogonNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLongFormLogonNmNull() {
                this[this.tableUsers.LongFormLogonNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ClientsRow[] GetClientsRowsByFK_Client_CreatedBy_User() {
                if ((this.Table.ChildRelations["FK_Client_CreatedBy_User"] == null)) {
                    return new ClientsRow[0];
                }
                else {
                    return ((ClientsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Client_CreatedBy_User"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ClientsRow[] GetClientsRowsByFK_Client_TestedButNoChangeBy_User() {
                if ((this.Table.ChildRelations["FK_Client_TestedButNoChangeBy_User"] == null)) {
                    return new ClientsRow[0];
                }
                else {
                    return ((ClientsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Client_TestedButNoChangeBy_User"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ClientsRow[] GetClientsRowsByFK_Client_UpdatedBy_User() {
                if ((this.Table.ChildRelations["FK_Client_UpdatedBy_User"] == null)) {
                    return new ClientsRow[0];
                }
                else {
                    return ((ClientsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Client_UpdatedBy_User"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DomainsRow[] GetDomainsRowsByFK_Domain_CreatedBy_User() {
                if ((this.Table.ChildRelations["FK_Domain_CreatedBy_User"] == null)) {
                    return new DomainsRow[0];
                }
                else {
                    return ((DomainsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Domain_CreatedBy_User"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DomainsRow[] GetDomainsRowsByFK_Domain_TestedButNoChangeBy_User() {
                if ((this.Table.ChildRelations["FK_Domain_TestedButNoChangeBy_User"] == null)) {
                    return new DomainsRow[0];
                }
                else {
                    return ((DomainsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Domain_TestedButNoChangeBy_User"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DomainsRow[] GetDomainsRowsByFK_Domain_UpdatedBy_User() {
                if ((this.Table.ChildRelations["FK_Domain_UpdatedBy_User"] == null)) {
                    return new DomainsRow[0];
                }
                else {
                    return ((DomainsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Domain_UpdatedBy_User"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ServerAliasesRow[] GetServerAliasesRowsByFK_Alias_CreatedBy_User() {
                if ((this.Table.ChildRelations["FK_Alias_CreatedBy_User"] == null)) {
                    return new ServerAliasesRow[0];
                }
                else {
                    return ((ServerAliasesRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Alias_CreatedBy_User"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ServerAliasesRow[] GetServerAliasesRowsByFK_Alias_TestedButNoChangeBy_User() {
                if ((this.Table.ChildRelations["FK_Alias_TestedButNoChangeBy_User"] == null)) {
                    return new ServerAliasesRow[0];
                }
                else {
                    return ((ServerAliasesRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Alias_TestedButNoChangeBy_User"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ServerAliasesRow[] GetServerAliasesRowsByFK_Alias_UpdatedBy_User() {
                if ((this.Table.ChildRelations["FK_Alias_UpdatedBy_User"] == null)) {
                    return new ServerAliasesRow[0];
                }
                else {
                    return ((ServerAliasesRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Alias_UpdatedBy_User"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ServersRow[] GetServersRowsByFK_Server_User_Created() {
                if ((this.Table.ChildRelations["FK_Server_User_Created"] == null)) {
                    return new ServersRow[0];
                }
                else {
                    return ((ServersRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Server_User_Created"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ServersRow[] GetServersRowsByFK_Server_User_TestButNoChange() {
                if ((this.Table.ChildRelations["FK_Server_User_TestButNoChange"] == null)) {
                    return new ServersRow[0];
                }
                else {
                    return ((ServersRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Server_User_TestButNoChange"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ServersRow[] GetServersRowsByFK_Server_User_Updated() {
                if ((this.Table.ChildRelations["FK_Server_User_Updated"] == null)) {
                    return new ServersRow[0];
                }
                else {
                    return ((ServersRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Server_User_Updated"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TicketsRow : global::System.Data.DataRow {
            
            private TicketsDataTable tableTickets;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TicketsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTickets = ((TicketsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Incident_RecID {
                get {
                    return ((string)(this[this.tableTickets.Incident_RecIDColumn]));
                }
                set {
                    this[this.tableTickets.Incident_RecIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string IncidentID {
                get {
                    return ((string)(this[this.tableTickets.IncidentIDColumn]));
                }
                set {
                    this[this.tableTickets.IncidentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string GlobalRegionCd {
                get {
                    try {
                        return ((string)(this[this.tableTickets.GlobalRegionCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GlobalRegionCd\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.GlobalRegionCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime JournalLastModified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTickets.JournalLastModifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JournalLastModified\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.JournalLastModifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime LastModifiedDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTickets.LastModifiedDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastModifiedDateTime\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.LastModifiedDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Location {
                get {
                    try {
                        return ((string)(this[this.tableTickets.LocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.LocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string STATUS {
                get {
                    try {
                        return ((string)(this[this.tableTickets.STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STATUS\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Stat_NumberOfTouches {
                get {
                    try {
                        return ((int)(this[this.tableTickets.Stat_NumberOfTouchesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Stat_NumberOfTouches\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.Stat_NumberOfTouchesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Waiting4ThsMnyApprovals {
                get {
                    try {
                        return ((int)(this[this.tableTickets.Waiting4ThsMnyApprovalsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Waiting4ThsMnyApprovals\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.Waiting4ThsMnyApprovalsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int NofApprovedApprovals {
                get {
                    try {
                        return ((int)(this[this.tableTickets.NofApprovedApprovalsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NofApprovedApprovals\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.NofApprovedApprovalsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int NofDeniedApprovals {
                get {
                    try {
                        return ((int)(this[this.tableTickets.NofDeniedApprovalsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NofDeniedApprovals\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.NofDeniedApprovalsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PendingReason {
                get {
                    try {
                        return ((string)(this[this.tableTickets.PendingReasonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PendingReason\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.PendingReasonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Stat_SLAResponseGood {
                get {
                    return ((string)(this[this.tableTickets.Stat_SLAResponseGoodColumn]));
                }
                set {
                    this[this.tableTickets.Stat_SLAResponseGoodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Stat_SLAResponseWarning {
                get {
                    try {
                        return ((bool)(this[this.tableTickets.Stat_SLAResponseWarningColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Stat_SLAResponseWarning\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.Stat_SLAResponseWarningColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Stat_SLAResponseBreached {
                get {
                    return ((string)(this[this.tableTickets.Stat_SLAResponseBreachedColumn]));
                }
                set {
                    this[this.tableTickets.Stat_SLAResponseBreachedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BreachNotes {
                get {
                    try {
                        return ((string)(this[this.tableTickets.BreachNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BreachNotes\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.BreachNotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ReasonForBreach {
                get {
                    try {
                        return ((string)(this[this.tableTickets.ReasonForBreachColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReasonForBreach\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.ReasonForBreachColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Stat_SLAResolutionWarning {
                get {
                    try {
                        return ((bool)(this[this.tableTickets.Stat_SLAResolutionWarningColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Stat_SLAResolutionWarning\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.Stat_SLAResolutionWarningColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Stat_SLAResolutionGood {
                get {
                    try {
                        return ((bool)(this[this.tableTickets.Stat_SLAResolutionGoodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Stat_SLAResolutionGood\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.Stat_SLAResolutionGoodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Stat_SLAResolutionBreached {
                get {
                    try {
                        return ((bool)(this[this.tableTickets.Stat_SLAResolutionBreachedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Stat_SLAResolutionBreached\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.Stat_SLAResolutionBreachedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NofUnreadJournals {
                get {
                    try {
                        return ((string)(this[this.tableTickets.NofUnreadJournalsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NofUnreadJournals\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.NofUnreadJournalsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Withdrawn {
                get {
                    try {
                        return ((bool)(this[this.tableTickets.WithdrawnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Withdrawn\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.WithdrawnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool NeverFixedIncident {
                get {
                    try {
                        return ((bool)(this[this.tableTickets.NeverFixedIncidentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NeverFixedIncident\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.NeverFixedIncidentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Cause {
                get {
                    try {
                        return ((string)(this[this.tableTickets.CauseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cause\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.CauseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PRIORITY {
                get {
                    try {
                        return ((string)(this[this.tableTickets.PRIORITYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRIORITY\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.PRIORITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Impact {
                get {
                    try {
                        return ((string)(this[this.tableTickets.ImpactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Impact\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.ImpactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Urgency {
                get {
                    try {
                        return ((string)(this[this.tableTickets.UrgencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Urgency\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.UrgencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int TeamTier {
                get {
                    try {
                        return ((int)(this[this.tableTickets.TeamTierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TeamTier\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.TeamTierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool L4Escalation {
                get {
                    return ((bool)(this[this.tableTickets.L4EscalationColumn]));
                }
                set {
                    this[this.tableTickets.L4EscalationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string InterestingDesc {
                get {
                    try {
                        return ((string)(this[this.tableTickets.InterestingDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InterestingDesc\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.InterestingDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EnhancementDesc {
                get {
                    try {
                        return ((string)(this[this.tableTickets.EnhancementDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EnhancementDesc\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.EnhancementDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CommentsEntry {
                get {
                    try {
                        return ((string)(this[this.tableTickets.CommentsEntryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommentsEntry\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.CommentsEntryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableTickets.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CloseDescription {
                get {
                    try {
                        return ((string)(this[this.tableTickets.CloseDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CloseDescription\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.CloseDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SERVICE {
                get {
                    try {
                        return ((string)(this[this.tableTickets.SERVICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SERVICE\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.SERVICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Category {
                get {
                    try {
                        return ((string)(this[this.tableTickets.CategoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Category\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.CategoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Subcategory {
                get {
                    try {
                        return ((string)(this[this.tableTickets.SubcategoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Subcategory\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.SubcategoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string WorkOrderType {
                get {
                    try {
                        return ((string)(this[this.tableTickets.WorkOrderTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkOrderType\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.WorkOrderTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SupportArea {
                get {
                    try {
                        return ((string)(this[this.tableTickets.SupportAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupportArea\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.SupportAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Platform {
                get {
                    try {
                        return ((string)(this[this.tableTickets.PlatformColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Platform\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.PlatformColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SmartClassifySearchString {
                get {
                    try {
                        return ((string)(this[this.tableTickets.SmartClassifySearchStringColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SmartClassifySearchString\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.SmartClassifySearchStringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MatchingText {
                get {
                    try {
                        return ((string)(this[this.tableTickets.MatchingTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MatchingText\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.MatchingTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string IncidentType {
                get {
                    try {
                        return ((string)(this[this.tableTickets.IncidentTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IncidentType\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.IncidentTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string APPLICATION {
                get {
                    try {
                        return ((string)(this[this.tableTickets.APPLICATIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'APPLICATION\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.APPLICATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ApplicationCommonName {
                get {
                    try {
                        return ((string)(this[this.tableTickets.ApplicationCommonNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApplicationCommonName\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.ApplicationCommonNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CallSource {
                get {
                    try {
                        return ((string)(this[this.tableTickets.CallSourceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CallSource\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.CallSourceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string InitialITContact {
                get {
                    try {
                        return ((string)(this[this.tableTickets.InitialITContactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InitialITContact\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.InitialITContactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CreatedBy {
                get {
                    try {
                        return ((string)(this[this.tableTickets.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SubmitOnBehalfOf {
                get {
                    try {
                        return ((string)(this[this.tableTickets.SubmitOnBehalfOfColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubmitOnBehalfOf\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.SubmitOnBehalfOfColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SubmitOnBehalfOfTitle {
                get {
                    try {
                        return ((string)(this[this.tableTickets.SubmitOnBehalfOfTitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubmitOnBehalfOfTitle\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.SubmitOnBehalfOfTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AssignedBy {
                get {
                    try {
                        return ((string)(this[this.tableTickets.AssignedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssignedBy\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.AssignedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OwnedBy {
                get {
                    try {
                        return ((string)(this[this.tableTickets.OwnedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnedBy\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.OwnedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PreviousOwnedBy {
                get {
                    try {
                        return ((string)(this[this.tableTickets.PreviousOwnedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreviousOwnedBy\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.PreviousOwnedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ActualL1Approval {
                get {
                    try {
                        return ((string)(this[this.tableTickets.ActualL1ApprovalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualL1Approval\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.ActualL1ApprovalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OwnedByManager {
                get {
                    try {
                        return ((string)(this[this.tableTickets.OwnedByManagerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnedByManager\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.OwnedByManagerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BRM {
                get {
                    try {
                        return ((string)(this[this.tableTickets.BRMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BRM\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.BRMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CustomerDisplayName {
                get {
                    try {
                        return ((string)(this[this.tableTickets.CustomerDisplayNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerDisplayName\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.CustomerDisplayNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LastModBy {
                get {
                    try {
                        return ((string)(this[this.tableTickets.LastModByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastModBy\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.LastModByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string WatchList {
                get {
                    try {
                        return ((string)(this[this.tableTickets.WatchListColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WatchList\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.WatchListColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CustomerWatchList {
                get {
                    try {
                        return ((string)(this[this.tableTickets.CustomerWatchListColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerWatchList\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.CustomerWatchListColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TechnicianWatchList {
                get {
                    try {
                        return ((string)(this[this.tableTickets.TechnicianWatchListColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TechnicianWatchList\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.TechnicianWatchListColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CCWatchlistRecipient {
                get {
                    try {
                        return ((string)(this[this.tableTickets.CCWatchlistRecipientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CCWatchlistRecipient\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.CCWatchlistRecipientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OwnedByTeam {
                get {
                    try {
                        return ((string)(this[this.tableTickets.OwnedByTeamColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnedByTeam\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.OwnedByTeamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CustomerDepartment {
                get {
                    try {
                        return ((string)(this[this.tableTickets.CustomerDepartmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerDepartment\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.CustomerDepartmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BusinessGroup {
                get {
                    try {
                        return ((string)(this[this.tableTickets.BusinessGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BusinessGroup\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.BusinessGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ITBusinessGroup {
                get {
                    try {
                        return ((string)(this[this.tableTickets.ITBusinessGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ITBusinessGroup\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.ITBusinessGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BusinessUnit {
                get {
                    try {
                        return ((string)(this[this.tableTickets.BusinessUnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BusinessUnit\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.BusinessUnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DefaultTeam {
                get {
                    try {
                        return ((string)(this[this.tableTickets.DefaultTeamColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefaultTeam\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.DefaultTeamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OldOwnedByTeam {
                get {
                    try {
                        return ((string)(this[this.tableTickets.OldOwnedByTeamColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OldOwnedByTeam\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.OldOwnedByTeamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string InitialAssignedTeam {
                get {
                    try {
                        return ((string)(this[this.tableTickets.InitialAssignedTeamColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InitialAssignedTeam\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.InitialAssignedTeamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EDMHoldingTeam {
                get {
                    try {
                        return ((string)(this[this.tableTickets.EDMHoldingTeamColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EDMHoldingTeam\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.EDMHoldingTeamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EDMApprovalAssignmentTeam {
                get {
                    try {
                        return ((string)(this[this.tableTickets.EDMApprovalAssignmentTeamColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EDMApprovalAssignmentTeam\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.EDMApprovalAssignmentTeamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EDMAssignmentTeam {
                get {
                    try {
                        return ((string)(this[this.tableTickets.EDMAssignmentTeamColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EDMAssignmentTeam\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.EDMAssignmentTeamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TeamOrPersonInvolvedWthThsTicket {
                get {
                    try {
                        return ((string)(this[this.tableTickets.TeamOrPersonInvolvedWthThsTicketColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TeamOrPersonInvolvedWthThsTicket\' in table \'Tickets\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableTickets.TeamOrPersonInvolvedWthThsTicketColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TeamOrPersonInvolvedNickName {
                get {
                    try {
                        return ((string)(this[this.tableTickets.TeamOrPersonInvolvedNickNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TeamOrPersonInvolvedNickName\' in table \'Tickets\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableTickets.TeamOrPersonInvolvedNickNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TeamOrPersonInvolvedLogin {
                get {
                    try {
                        return ((string)(this[this.tableTickets.TeamOrPersonInvolvedLoginColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TeamOrPersonInvolvedLogin\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.TeamOrPersonInvolvedLoginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ReasonForInvolvement {
                get {
                    try {
                        return ((string)(this[this.tableTickets.ReasonForInvolvementColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReasonForInvolvement\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.ReasonForInvolvementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NoteOnInvolvement {
                get {
                    try {
                        return ((string)(this[this.tableTickets.NoteOnInvolvementColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoteOnInvolvement\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.NoteOnInvolvementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime CreatedDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTickets.CreatedDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedDateTime\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.CreatedDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CreatedDay {
                get {
                    try {
                        return ((string)(this[this.tableTickets.CreatedDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedDay\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.CreatedDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CreatedHour {
                get {
                    return ((string)(this[this.tableTickets.CreatedHourColumn]));
                }
                set {
                    this[this.tableTickets.CreatedHourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime NeedByDate1 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTickets.NeedByDate1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NeedByDate1\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.NeedByDate1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Stat_DateTimeAssigned {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTickets.Stat_DateTimeAssignedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Stat_DateTimeAssigned\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.Stat_DateTimeAssignedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime SLARespondByDeadline {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTickets.SLARespondByDeadlineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SLARespondByDeadline\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.SLARespondByDeadlineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime SLAResponseWarning {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTickets.SLAResponseWarningColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SLAResponseWarning\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.SLAResponseWarningColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Stat_DateTimeResponded {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTickets.Stat_DateTimeRespondedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Stat_DateTimeResponded\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.Stat_DateTimeRespondedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Stat_DateTimeInProgress {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTickets.Stat_DateTimeInProgressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Stat_DateTimeInProgress\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.Stat_DateTimeInProgressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime SLAResolutionWarning {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTickets.SLAResolutionWarningColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SLAResolutionWarning\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.SLAResolutionWarningColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime SLAResolveByDeadline {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTickets.SLAResolveByDeadlineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SLAResolveByDeadline\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.SLAResolveByDeadlineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Stat_DateTimeResolved {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTickets.Stat_DateTimeResolvedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Stat_DateTimeResolved\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.Stat_DateTimeResolvedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime InvolvementLastModified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTickets.InvolvementLastModifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvolvementLastModified\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.InvolvementLastModifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Stat_DateTimeClosed {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTickets.Stat_DateTimeClosedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Stat_DateTimeClosed\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.Stat_DateTimeClosedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ClosedDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTickets.ClosedDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClosedDateTime\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.ClosedDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Stat_IncidentReopened {
                get {
                    try {
                        return ((bool)(this[this.tableTickets.Stat_IncidentReopenedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Stat_IncidentReopened\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.Stat_IncidentReopenedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Stat_DateTimeReOpened {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTickets.Stat_DateTimeReOpenedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Stat_DateTimeReOpened\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.Stat_DateTimeReOpenedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal _Incident_s_Been_Open_n_Hours {
                get {
                    try {
                        return ((decimal)(this[this.tableTickets._Incident_s_Been_Open_n_HoursColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Incident\'s Been Open n Hours\' in table \'Tickets\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableTickets._Incident_s_Been_Open_n_HoursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Stat_24x7ElapsedTime {
                get {
                    try {
                        return ((int)(this[this.tableTickets.Stat_24x7ElapsedTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Stat_24x7ElapsedTime\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.Stat_24x7ElapsedTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int STCTimeInMinutes {
                get {
                    try {
                        return ((int)(this[this.tableTickets.STCTimeInMinutesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STCTimeInMinutes\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.STCTimeInMinutesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int TotalSTCTimeInMinutes {
                get {
                    try {
                        return ((int)(this[this.tableTickets.TotalSTCTimeInMinutesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalSTCTimeInMinutes\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.TotalSTCTimeInMinutesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TimeInApproval247 {
                get {
                    try {
                        return ((decimal)(this[this.tableTickets.TimeInApproval247Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TimeInApproval247\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.TimeInApproval247Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal IncidentDurationFromAssignToResolve {
                get {
                    try {
                        return ((decimal)(this[this.tableTickets.IncidentDurationFromAssignToResolveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IncidentDurationFromAssignToResolve\' in table \'Tickets\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.IncidentDurationFromAssignToResolveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal IncidentDurationInBusinessHours {
                get {
                    try {
                        return ((decimal)(this[this.tableTickets.IncidentDurationInBusinessHoursColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IncidentDurationInBusinessHours\' in table \'Tickets\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableTickets.IncidentDurationInBusinessHoursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal IncidentDurationInHours {
                get {
                    try {
                        return ((decimal)(this[this.tableTickets.IncidentDurationInHoursColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IncidentDurationInHours\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.IncidentDurationInHoursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal IncidentDurationWOPending {
                get {
                    try {
                        return ((decimal)(this[this.tableTickets.IncidentDurationWOPendingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IncidentDurationWOPending\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.IncidentDurationWOPendingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int IncidentDUrationBusinessDaysPendings {
                get {
                    try {
                        return ((int)(this[this.tableTickets.IncidentDUrationBusinessDaysPendingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IncidentDUrationBusinessDaysPendings\' in table \'Tickets\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.IncidentDUrationBusinessDaysPendingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal IncidentDurationWithoutPendingBH {
                get {
                    try {
                        return ((decimal)(this[this.tableTickets.IncidentDurationWithoutPendingBHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IncidentDurationWithoutPendingBH\' in table \'Tickets\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableTickets.IncidentDurationWithoutPendingBHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal IncidentDurationWithoutPendingH {
                get {
                    try {
                        return ((decimal)(this[this.tableTickets.IncidentDurationWithoutPendingHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IncidentDurationWithoutPendingH\' in table \'Tickets\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableTickets.IncidentDurationWithoutPendingHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TotalTaskTime {
                get {
                    try {
                        return ((decimal)(this[this.tableTickets.TotalTaskTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalTaskTime\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.TotalTaskTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int TotalNofTasks {
                get {
                    try {
                        return ((int)(this[this.tableTickets.TotalNofTasksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalNofTasks\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.TotalNofTasksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool HasAtLeastOneTaskInProgress {
                get {
                    try {
                        return ((bool)(this[this.tableTickets.HasAtLeastOneTaskInProgressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HasAtLeastOneTaskInProgress\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.HasAtLeastOneTaskInProgressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool HasAtLeastOneTaskOnHold {
                get {
                    return ((bool)(this[this.tableTickets.HasAtLeastOneTaskOnHoldColumn]));
                }
                set {
                    this[this.tableTickets.HasAtLeastOneTaskOnHoldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool HasAtLeastOneClosedTask {
                get {
                    return ((bool)(this[this.tableTickets.HasAtLeastOneClosedTaskColumn]));
                }
                set {
                    this[this.tableTickets.HasAtLeastOneClosedTaskColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int TaskClosedCount {
                get {
                    try {
                        return ((int)(this[this.tableTickets.TaskClosedCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaskClosedCount\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.TaskClosedCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool HasNoOpenTasks {
                get {
                    try {
                        return ((bool)(this[this.tableTickets.HasNoOpenTasksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HasNoOpenTasks\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.HasNoOpenTasksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int CherwellVersion {
                get {
                    try {
                        return ((int)(this[this.tableTickets.CherwellVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CherwellVersion\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.CherwellVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CherwellVersionNm {
                get {
                    try {
                        return ((string)(this[this.tableTickets.CherwellVersionNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CherwellVersionNm\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.CherwellVersionNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime LastInvolvment {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTickets.LastInvolvmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastInvolvment\' in table \'Tickets\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTickets.LastInvolvmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGlobalRegionCdNull() {
                return this.IsNull(this.tableTickets.GlobalRegionCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGlobalRegionCdNull() {
                this[this.tableTickets.GlobalRegionCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsJournalLastModifiedNull() {
                return this.IsNull(this.tableTickets.JournalLastModifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetJournalLastModifiedNull() {
                this[this.tableTickets.JournalLastModifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLastModifiedDateTimeNull() {
                return this.IsNull(this.tableTickets.LastModifiedDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLastModifiedDateTimeNull() {
                this[this.tableTickets.LastModifiedDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLocationNull() {
                return this.IsNull(this.tableTickets.LocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLocationNull() {
                this[this.tableTickets.LocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSTATUSNull() {
                return this.IsNull(this.tableTickets.STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSTATUSNull() {
                this[this.tableTickets.STATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStat_NumberOfTouchesNull() {
                return this.IsNull(this.tableTickets.Stat_NumberOfTouchesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStat_NumberOfTouchesNull() {
                this[this.tableTickets.Stat_NumberOfTouchesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsWaiting4ThsMnyApprovalsNull() {
                return this.IsNull(this.tableTickets.Waiting4ThsMnyApprovalsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetWaiting4ThsMnyApprovalsNull() {
                this[this.tableTickets.Waiting4ThsMnyApprovalsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNofApprovedApprovalsNull() {
                return this.IsNull(this.tableTickets.NofApprovedApprovalsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNofApprovedApprovalsNull() {
                this[this.tableTickets.NofApprovedApprovalsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNofDeniedApprovalsNull() {
                return this.IsNull(this.tableTickets.NofDeniedApprovalsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNofDeniedApprovalsNull() {
                this[this.tableTickets.NofDeniedApprovalsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPendingReasonNull() {
                return this.IsNull(this.tableTickets.PendingReasonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPendingReasonNull() {
                this[this.tableTickets.PendingReasonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStat_SLAResponseWarningNull() {
                return this.IsNull(this.tableTickets.Stat_SLAResponseWarningColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStat_SLAResponseWarningNull() {
                this[this.tableTickets.Stat_SLAResponseWarningColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBreachNotesNull() {
                return this.IsNull(this.tableTickets.BreachNotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBreachNotesNull() {
                this[this.tableTickets.BreachNotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsReasonForBreachNull() {
                return this.IsNull(this.tableTickets.ReasonForBreachColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetReasonForBreachNull() {
                this[this.tableTickets.ReasonForBreachColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStat_SLAResolutionWarningNull() {
                return this.IsNull(this.tableTickets.Stat_SLAResolutionWarningColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStat_SLAResolutionWarningNull() {
                this[this.tableTickets.Stat_SLAResolutionWarningColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStat_SLAResolutionGoodNull() {
                return this.IsNull(this.tableTickets.Stat_SLAResolutionGoodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStat_SLAResolutionGoodNull() {
                this[this.tableTickets.Stat_SLAResolutionGoodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStat_SLAResolutionBreachedNull() {
                return this.IsNull(this.tableTickets.Stat_SLAResolutionBreachedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStat_SLAResolutionBreachedNull() {
                this[this.tableTickets.Stat_SLAResolutionBreachedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNofUnreadJournalsNull() {
                return this.IsNull(this.tableTickets.NofUnreadJournalsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNofUnreadJournalsNull() {
                this[this.tableTickets.NofUnreadJournalsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsWithdrawnNull() {
                return this.IsNull(this.tableTickets.WithdrawnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetWithdrawnNull() {
                this[this.tableTickets.WithdrawnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNeverFixedIncidentNull() {
                return this.IsNull(this.tableTickets.NeverFixedIncidentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNeverFixedIncidentNull() {
                this[this.tableTickets.NeverFixedIncidentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCauseNull() {
                return this.IsNull(this.tableTickets.CauseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCauseNull() {
                this[this.tableTickets.CauseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPRIORITYNull() {
                return this.IsNull(this.tableTickets.PRIORITYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPRIORITYNull() {
                this[this.tableTickets.PRIORITYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsImpactNull() {
                return this.IsNull(this.tableTickets.ImpactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetImpactNull() {
                this[this.tableTickets.ImpactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUrgencyNull() {
                return this.IsNull(this.tableTickets.UrgencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUrgencyNull() {
                this[this.tableTickets.UrgencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTeamTierNull() {
                return this.IsNull(this.tableTickets.TeamTierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTeamTierNull() {
                this[this.tableTickets.TeamTierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsInterestingDescNull() {
                return this.IsNull(this.tableTickets.InterestingDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetInterestingDescNull() {
                this[this.tableTickets.InterestingDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEnhancementDescNull() {
                return this.IsNull(this.tableTickets.EnhancementDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEnhancementDescNull() {
                this[this.tableTickets.EnhancementDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCommentsEntryNull() {
                return this.IsNull(this.tableTickets.CommentsEntryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCommentsEntryNull() {
                this[this.tableTickets.CommentsEntryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableTickets.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCommentsNull() {
                this[this.tableTickets.CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCloseDescriptionNull() {
                return this.IsNull(this.tableTickets.CloseDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCloseDescriptionNull() {
                this[this.tableTickets.CloseDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSERVICENull() {
                return this.IsNull(this.tableTickets.SERVICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSERVICENull() {
                this[this.tableTickets.SERVICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCategoryNull() {
                return this.IsNull(this.tableTickets.CategoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCategoryNull() {
                this[this.tableTickets.CategoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSubcategoryNull() {
                return this.IsNull(this.tableTickets.SubcategoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSubcategoryNull() {
                this[this.tableTickets.SubcategoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsWorkOrderTypeNull() {
                return this.IsNull(this.tableTickets.WorkOrderTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetWorkOrderTypeNull() {
                this[this.tableTickets.WorkOrderTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSupportAreaNull() {
                return this.IsNull(this.tableTickets.SupportAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSupportAreaNull() {
                this[this.tableTickets.SupportAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPlatformNull() {
                return this.IsNull(this.tableTickets.PlatformColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPlatformNull() {
                this[this.tableTickets.PlatformColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSmartClassifySearchStringNull() {
                return this.IsNull(this.tableTickets.SmartClassifySearchStringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSmartClassifySearchStringNull() {
                this[this.tableTickets.SmartClassifySearchStringColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMatchingTextNull() {
                return this.IsNull(this.tableTickets.MatchingTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMatchingTextNull() {
                this[this.tableTickets.MatchingTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIncidentTypeNull() {
                return this.IsNull(this.tableTickets.IncidentTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIncidentTypeNull() {
                this[this.tableTickets.IncidentTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAPPLICATIONNull() {
                return this.IsNull(this.tableTickets.APPLICATIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAPPLICATIONNull() {
                this[this.tableTickets.APPLICATIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsApplicationCommonNameNull() {
                return this.IsNull(this.tableTickets.ApplicationCommonNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetApplicationCommonNameNull() {
                this[this.tableTickets.ApplicationCommonNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCallSourceNull() {
                return this.IsNull(this.tableTickets.CallSourceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCallSourceNull() {
                this[this.tableTickets.CallSourceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsInitialITContactNull() {
                return this.IsNull(this.tableTickets.InitialITContactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetInitialITContactNull() {
                this[this.tableTickets.InitialITContactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableTickets.CreatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCreatedByNull() {
                this[this.tableTickets.CreatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSubmitOnBehalfOfNull() {
                return this.IsNull(this.tableTickets.SubmitOnBehalfOfColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSubmitOnBehalfOfNull() {
                this[this.tableTickets.SubmitOnBehalfOfColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSubmitOnBehalfOfTitleNull() {
                return this.IsNull(this.tableTickets.SubmitOnBehalfOfTitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSubmitOnBehalfOfTitleNull() {
                this[this.tableTickets.SubmitOnBehalfOfTitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAssignedByNull() {
                return this.IsNull(this.tableTickets.AssignedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAssignedByNull() {
                this[this.tableTickets.AssignedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOwnedByNull() {
                return this.IsNull(this.tableTickets.OwnedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOwnedByNull() {
                this[this.tableTickets.OwnedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPreviousOwnedByNull() {
                return this.IsNull(this.tableTickets.PreviousOwnedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPreviousOwnedByNull() {
                this[this.tableTickets.PreviousOwnedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsActualL1ApprovalNull() {
                return this.IsNull(this.tableTickets.ActualL1ApprovalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetActualL1ApprovalNull() {
                this[this.tableTickets.ActualL1ApprovalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOwnedByManagerNull() {
                return this.IsNull(this.tableTickets.OwnedByManagerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOwnedByManagerNull() {
                this[this.tableTickets.OwnedByManagerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBRMNull() {
                return this.IsNull(this.tableTickets.BRMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBRMNull() {
                this[this.tableTickets.BRMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCustomerDisplayNameNull() {
                return this.IsNull(this.tableTickets.CustomerDisplayNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCustomerDisplayNameNull() {
                this[this.tableTickets.CustomerDisplayNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLastModByNull() {
                return this.IsNull(this.tableTickets.LastModByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLastModByNull() {
                this[this.tableTickets.LastModByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsWatchListNull() {
                return this.IsNull(this.tableTickets.WatchListColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetWatchListNull() {
                this[this.tableTickets.WatchListColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCustomerWatchListNull() {
                return this.IsNull(this.tableTickets.CustomerWatchListColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCustomerWatchListNull() {
                this[this.tableTickets.CustomerWatchListColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTechnicianWatchListNull() {
                return this.IsNull(this.tableTickets.TechnicianWatchListColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTechnicianWatchListNull() {
                this[this.tableTickets.TechnicianWatchListColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCCWatchlistRecipientNull() {
                return this.IsNull(this.tableTickets.CCWatchlistRecipientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCCWatchlistRecipientNull() {
                this[this.tableTickets.CCWatchlistRecipientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOwnedByTeamNull() {
                return this.IsNull(this.tableTickets.OwnedByTeamColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOwnedByTeamNull() {
                this[this.tableTickets.OwnedByTeamColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCustomerDepartmentNull() {
                return this.IsNull(this.tableTickets.CustomerDepartmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCustomerDepartmentNull() {
                this[this.tableTickets.CustomerDepartmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBusinessGroupNull() {
                return this.IsNull(this.tableTickets.BusinessGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBusinessGroupNull() {
                this[this.tableTickets.BusinessGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsITBusinessGroupNull() {
                return this.IsNull(this.tableTickets.ITBusinessGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetITBusinessGroupNull() {
                this[this.tableTickets.ITBusinessGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBusinessUnitNull() {
                return this.IsNull(this.tableTickets.BusinessUnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBusinessUnitNull() {
                this[this.tableTickets.BusinessUnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDefaultTeamNull() {
                return this.IsNull(this.tableTickets.DefaultTeamColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDefaultTeamNull() {
                this[this.tableTickets.DefaultTeamColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOldOwnedByTeamNull() {
                return this.IsNull(this.tableTickets.OldOwnedByTeamColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOldOwnedByTeamNull() {
                this[this.tableTickets.OldOwnedByTeamColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsInitialAssignedTeamNull() {
                return this.IsNull(this.tableTickets.InitialAssignedTeamColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetInitialAssignedTeamNull() {
                this[this.tableTickets.InitialAssignedTeamColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEDMHoldingTeamNull() {
                return this.IsNull(this.tableTickets.EDMHoldingTeamColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEDMHoldingTeamNull() {
                this[this.tableTickets.EDMHoldingTeamColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEDMApprovalAssignmentTeamNull() {
                return this.IsNull(this.tableTickets.EDMApprovalAssignmentTeamColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEDMApprovalAssignmentTeamNull() {
                this[this.tableTickets.EDMApprovalAssignmentTeamColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEDMAssignmentTeamNull() {
                return this.IsNull(this.tableTickets.EDMAssignmentTeamColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEDMAssignmentTeamNull() {
                this[this.tableTickets.EDMAssignmentTeamColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTeamOrPersonInvolvedWthThsTicketNull() {
                return this.IsNull(this.tableTickets.TeamOrPersonInvolvedWthThsTicketColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTeamOrPersonInvolvedWthThsTicketNull() {
                this[this.tableTickets.TeamOrPersonInvolvedWthThsTicketColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTeamOrPersonInvolvedNickNameNull() {
                return this.IsNull(this.tableTickets.TeamOrPersonInvolvedNickNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTeamOrPersonInvolvedNickNameNull() {
                this[this.tableTickets.TeamOrPersonInvolvedNickNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTeamOrPersonInvolvedLoginNull() {
                return this.IsNull(this.tableTickets.TeamOrPersonInvolvedLoginColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTeamOrPersonInvolvedLoginNull() {
                this[this.tableTickets.TeamOrPersonInvolvedLoginColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsReasonForInvolvementNull() {
                return this.IsNull(this.tableTickets.ReasonForInvolvementColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetReasonForInvolvementNull() {
                this[this.tableTickets.ReasonForInvolvementColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNoteOnInvolvementNull() {
                return this.IsNull(this.tableTickets.NoteOnInvolvementColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNoteOnInvolvementNull() {
                this[this.tableTickets.NoteOnInvolvementColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCreatedDateTimeNull() {
                return this.IsNull(this.tableTickets.CreatedDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCreatedDateTimeNull() {
                this[this.tableTickets.CreatedDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCreatedDayNull() {
                return this.IsNull(this.tableTickets.CreatedDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCreatedDayNull() {
                this[this.tableTickets.CreatedDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNeedByDate1Null() {
                return this.IsNull(this.tableTickets.NeedByDate1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNeedByDate1Null() {
                this[this.tableTickets.NeedByDate1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStat_DateTimeAssignedNull() {
                return this.IsNull(this.tableTickets.Stat_DateTimeAssignedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStat_DateTimeAssignedNull() {
                this[this.tableTickets.Stat_DateTimeAssignedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSLARespondByDeadlineNull() {
                return this.IsNull(this.tableTickets.SLARespondByDeadlineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSLARespondByDeadlineNull() {
                this[this.tableTickets.SLARespondByDeadlineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSLAResponseWarningNull() {
                return this.IsNull(this.tableTickets.SLAResponseWarningColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSLAResponseWarningNull() {
                this[this.tableTickets.SLAResponseWarningColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStat_DateTimeRespondedNull() {
                return this.IsNull(this.tableTickets.Stat_DateTimeRespondedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStat_DateTimeRespondedNull() {
                this[this.tableTickets.Stat_DateTimeRespondedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStat_DateTimeInProgressNull() {
                return this.IsNull(this.tableTickets.Stat_DateTimeInProgressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStat_DateTimeInProgressNull() {
                this[this.tableTickets.Stat_DateTimeInProgressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSLAResolutionWarningNull() {
                return this.IsNull(this.tableTickets.SLAResolutionWarningColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSLAResolutionWarningNull() {
                this[this.tableTickets.SLAResolutionWarningColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSLAResolveByDeadlineNull() {
                return this.IsNull(this.tableTickets.SLAResolveByDeadlineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSLAResolveByDeadlineNull() {
                this[this.tableTickets.SLAResolveByDeadlineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStat_DateTimeResolvedNull() {
                return this.IsNull(this.tableTickets.Stat_DateTimeResolvedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStat_DateTimeResolvedNull() {
                this[this.tableTickets.Stat_DateTimeResolvedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsInvolvementLastModifiedNull() {
                return this.IsNull(this.tableTickets.InvolvementLastModifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetInvolvementLastModifiedNull() {
                this[this.tableTickets.InvolvementLastModifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStat_DateTimeClosedNull() {
                return this.IsNull(this.tableTickets.Stat_DateTimeClosedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStat_DateTimeClosedNull() {
                this[this.tableTickets.Stat_DateTimeClosedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsClosedDateTimeNull() {
                return this.IsNull(this.tableTickets.ClosedDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetClosedDateTimeNull() {
                this[this.tableTickets.ClosedDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStat_IncidentReopenedNull() {
                return this.IsNull(this.tableTickets.Stat_IncidentReopenedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStat_IncidentReopenedNull() {
                this[this.tableTickets.Stat_IncidentReopenedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStat_DateTimeReOpenedNull() {
                return this.IsNull(this.tableTickets.Stat_DateTimeReOpenedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStat_DateTimeReOpenedNull() {
                this[this.tableTickets.Stat_DateTimeReOpenedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Is_Incident_s_Been_Open_n_HoursNull() {
                return this.IsNull(this.tableTickets._Incident_s_Been_Open_n_HoursColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Set_Incident_s_Been_Open_n_HoursNull() {
                this[this.tableTickets._Incident_s_Been_Open_n_HoursColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStat_24x7ElapsedTimeNull() {
                return this.IsNull(this.tableTickets.Stat_24x7ElapsedTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStat_24x7ElapsedTimeNull() {
                this[this.tableTickets.Stat_24x7ElapsedTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSTCTimeInMinutesNull() {
                return this.IsNull(this.tableTickets.STCTimeInMinutesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSTCTimeInMinutesNull() {
                this[this.tableTickets.STCTimeInMinutesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTotalSTCTimeInMinutesNull() {
                return this.IsNull(this.tableTickets.TotalSTCTimeInMinutesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTotalSTCTimeInMinutesNull() {
                this[this.tableTickets.TotalSTCTimeInMinutesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTimeInApproval247Null() {
                return this.IsNull(this.tableTickets.TimeInApproval247Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTimeInApproval247Null() {
                this[this.tableTickets.TimeInApproval247Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIncidentDurationFromAssignToResolveNull() {
                return this.IsNull(this.tableTickets.IncidentDurationFromAssignToResolveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIncidentDurationFromAssignToResolveNull() {
                this[this.tableTickets.IncidentDurationFromAssignToResolveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIncidentDurationInBusinessHoursNull() {
                return this.IsNull(this.tableTickets.IncidentDurationInBusinessHoursColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIncidentDurationInBusinessHoursNull() {
                this[this.tableTickets.IncidentDurationInBusinessHoursColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIncidentDurationInHoursNull() {
                return this.IsNull(this.tableTickets.IncidentDurationInHoursColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIncidentDurationInHoursNull() {
                this[this.tableTickets.IncidentDurationInHoursColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIncidentDurationWOPendingNull() {
                return this.IsNull(this.tableTickets.IncidentDurationWOPendingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIncidentDurationWOPendingNull() {
                this[this.tableTickets.IncidentDurationWOPendingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIncidentDUrationBusinessDaysPendingsNull() {
                return this.IsNull(this.tableTickets.IncidentDUrationBusinessDaysPendingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIncidentDUrationBusinessDaysPendingsNull() {
                this[this.tableTickets.IncidentDUrationBusinessDaysPendingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIncidentDurationWithoutPendingBHNull() {
                return this.IsNull(this.tableTickets.IncidentDurationWithoutPendingBHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIncidentDurationWithoutPendingBHNull() {
                this[this.tableTickets.IncidentDurationWithoutPendingBHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIncidentDurationWithoutPendingHNull() {
                return this.IsNull(this.tableTickets.IncidentDurationWithoutPendingHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIncidentDurationWithoutPendingHNull() {
                this[this.tableTickets.IncidentDurationWithoutPendingHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTotalTaskTimeNull() {
                return this.IsNull(this.tableTickets.TotalTaskTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTotalTaskTimeNull() {
                this[this.tableTickets.TotalTaskTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTotalNofTasksNull() {
                return this.IsNull(this.tableTickets.TotalNofTasksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTotalNofTasksNull() {
                this[this.tableTickets.TotalNofTasksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHasAtLeastOneTaskInProgressNull() {
                return this.IsNull(this.tableTickets.HasAtLeastOneTaskInProgressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHasAtLeastOneTaskInProgressNull() {
                this[this.tableTickets.HasAtLeastOneTaskInProgressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTaskClosedCountNull() {
                return this.IsNull(this.tableTickets.TaskClosedCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTaskClosedCountNull() {
                this[this.tableTickets.TaskClosedCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHasNoOpenTasksNull() {
                return this.IsNull(this.tableTickets.HasNoOpenTasksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHasNoOpenTasksNull() {
                this[this.tableTickets.HasNoOpenTasksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCherwellVersionNull() {
                return this.IsNull(this.tableTickets.CherwellVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCherwellVersionNull() {
                this[this.tableTickets.CherwellVersionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCherwellVersionNmNull() {
                return this.IsNull(this.tableTickets.CherwellVersionNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCherwellVersionNmNull() {
                this[this.tableTickets.CherwellVersionNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLastInvolvmentNull() {
                return this.IsNull(this.tableTickets.LastInvolvmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLastInvolvmentNull() {
                this[this.tableTickets.LastInvolvmentColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TicketsOverMidMonthRow : global::System.Data.DataRow {
            
            private TicketsOverMidMonthDataTable tableTicketsOverMidMonth;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TicketsOverMidMonthRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTicketsOverMidMonth = ((TicketsOverMidMonthDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime fromdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTicketsOverMidMonth.fromdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fromdate\' in table \'TicketsOverMidMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTicketsOverMidMonth.fromdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime todate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTicketsOverMidMonth.todateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'todate\' in table \'TicketsOverMidMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTicketsOverMidMonth.todateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OwnedBy {
                get {
                    try {
                        return ((string)(this[this.tableTicketsOverMidMonth.OwnedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnedBy\' in table \'TicketsOverMidMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTicketsOverMidMonth.OwnedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int All {
                get {
                    try {
                        return ((int)(this[this.tableTicketsOverMidMonth.AllColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'All\' in table \'TicketsOverMidMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTicketsOverMidMonth.AllColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Resolved {
                get {
                    try {
                        return ((int)(this[this.tableTicketsOverMidMonth.ResolvedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Resolved\' in table \'TicketsOverMidMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTicketsOverMidMonth.ResolvedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Closed {
                get {
                    try {
                        return ((int)(this[this.tableTicketsOverMidMonth.ClosedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Closed\' in table \'TicketsOverMidMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTicketsOverMidMonth.ClosedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Assigned {
                get {
                    try {
                        return ((int)(this[this.tableTicketsOverMidMonth.AssignedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Assigned\' in table \'TicketsOverMidMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTicketsOverMidMonth.AssignedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int InProcess {
                get {
                    try {
                        return ((int)(this[this.tableTicketsOverMidMonth.InProcessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InProcess\' in table \'TicketsOverMidMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTicketsOverMidMonth.InProcessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Pending {
                get {
                    try {
                        return ((int)(this[this.tableTicketsOverMidMonth.PendingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pending\' in table \'TicketsOverMidMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTicketsOverMidMonth.PendingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int New {
                get {
                    try {
                        return ((int)(this[this.tableTicketsOverMidMonth.NewColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'New\' in table \'TicketsOverMidMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTicketsOverMidMonth.NewColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsfromdateNull() {
                return this.IsNull(this.tableTicketsOverMidMonth.fromdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetfromdateNull() {
                this[this.tableTicketsOverMidMonth.fromdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IstodateNull() {
                return this.IsNull(this.tableTicketsOverMidMonth.todateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SettodateNull() {
                this[this.tableTicketsOverMidMonth.todateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOwnedByNull() {
                return this.IsNull(this.tableTicketsOverMidMonth.OwnedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOwnedByNull() {
                this[this.tableTicketsOverMidMonth.OwnedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAllNull() {
                return this.IsNull(this.tableTicketsOverMidMonth.AllColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAllNull() {
                this[this.tableTicketsOverMidMonth.AllColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsResolvedNull() {
                return this.IsNull(this.tableTicketsOverMidMonth.ResolvedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetResolvedNull() {
                this[this.tableTicketsOverMidMonth.ResolvedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsClosedNull() {
                return this.IsNull(this.tableTicketsOverMidMonth.ClosedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetClosedNull() {
                this[this.tableTicketsOverMidMonth.ClosedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAssignedNull() {
                return this.IsNull(this.tableTicketsOverMidMonth.AssignedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAssignedNull() {
                this[this.tableTicketsOverMidMonth.AssignedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsInProcessNull() {
                return this.IsNull(this.tableTicketsOverMidMonth.InProcessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetInProcessNull() {
                this[this.tableTicketsOverMidMonth.InProcessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPendingNull() {
                return this.IsNull(this.tableTicketsOverMidMonth.PendingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPendingNull() {
                this[this.tableTicketsOverMidMonth.PendingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNewNull() {
                return this.IsNull(this.tableTicketsOverMidMonth.NewColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNewNull() {
                this[this.tableTicketsOverMidMonth.NewColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class sp_who3Row : global::System.Data.DataRow {
            
            private sp_who3DataTable tablesp_who3;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal sp_who3Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesp_who3 = ((sp_who3DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short session_id {
                get {
                    return ((short)(this[this.tablesp_who3.session_idColumn]));
                }
                set {
                    this[this.tablesp_who3.session_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string host_name {
                get {
                    try {
                        return ((string)(this[this.tablesp_who3.host_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'host_name\' in table \'sp_who3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_who3.host_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string login_name {
                get {
                    return ((string)(this[this.tablesp_who3.login_nameColumn]));
                }
                set {
                    this[this.tablesp_who3.login_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string dbname {
                get {
                    try {
                        return ((string)(this[this.tablesp_who3.dbnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dbname\' in table \'sp_who3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_who3.dbnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string status {
                get {
                    return ((string)(this[this.tablesp_who3.statusColumn]));
                }
                set {
                    this[this.tablesp_who3.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string command {
                get {
                    return ((string)(this[this.tablesp_who3.commandColumn]));
                }
                set {
                    this[this.tablesp_who3.commandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string running_time {
                get {
                    try {
                        return ((string)(this[this.tablesp_who3.running_timeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'running_time\' in table \'sp_who3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_who3.running_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short BlkBy {
                get {
                    try {
                        return ((short)(this[this.tablesp_who3.BlkByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BlkBy\' in table \'sp_who3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_who3.BlkByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int NoOfOpenTran {
                get {
                    return ((int)(this[this.tablesp_who3.NoOfOpenTranColumn]));
                }
                set {
                    this[this.tablesp_who3.NoOfOpenTranColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string wait_type {
                get {
                    try {
                        return ((string)(this[this.tablesp_who3.wait_typeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'wait_type\' in table \'sp_who3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_who3.wait_typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal granted_memory_GB {
                get {
                    try {
                        return ((decimal)(this[this.tablesp_who3.granted_memory_GBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'granted_memory_GB\' in table \'sp_who3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_who3.granted_memory_GBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string object_name {
                get {
                    try {
                        return ((string)(this[this.tablesp_who3.object_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'object_name\' in table \'sp_who3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_who3.object_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string program_name {
                get {
                    try {
                        return ((string)(this[this.tablesp_who3.program_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'program_name\' in table \'sp_who3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_who3.program_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string query_plan {
                get {
                    try {
                        return ((string)(this[this.tablesp_who3.query_planColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'query_plan\' in table \'sp_who3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_who3.query_planColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string sql_text {
                get {
                    try {
                        return ((string)(this[this.tablesp_who3.sql_textColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sql_text\' in table \'sp_who3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_who3.sql_textColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int cpu_time {
                get {
                    return ((int)(this[this.tablesp_who3.cpu_timeColumn]));
                }
                set {
                    this[this.tablesp_who3.cpu_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime start_time {
                get {
                    return ((global::System.DateTime)(this[this.tablesp_who3.start_timeColumn]));
                }
                set {
                    this[this.tablesp_who3.start_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float percent_complete {
                get {
                    return ((float)(this[this.tablesp_who3.percent_completeColumn]));
                }
                set {
                    this[this.tablesp_who3.percent_completeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string est_time_to_go {
                get {
                    try {
                        return ((string)(this[this.tablesp_who3.est_time_to_goColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'est_time_to_go\' in table \'sp_who3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_who3.est_time_to_goColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime est_completion_time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablesp_who3.est_completion_timeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'est_completion_time\' in table \'sp_who3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_who3.est_completion_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Ishost_nameNull() {
                return this.IsNull(this.tablesp_who3.host_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Sethost_nameNull() {
                this[this.tablesp_who3.host_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsdbnameNull() {
                return this.IsNull(this.tablesp_who3.dbnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetdbnameNull() {
                this[this.tablesp_who3.dbnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isrunning_timeNull() {
                return this.IsNull(this.tablesp_who3.running_timeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setrunning_timeNull() {
                this[this.tablesp_who3.running_timeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBlkByNull() {
                return this.IsNull(this.tablesp_who3.BlkByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBlkByNull() {
                this[this.tablesp_who3.BlkByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Iswait_typeNull() {
                return this.IsNull(this.tablesp_who3.wait_typeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setwait_typeNull() {
                this[this.tablesp_who3.wait_typeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isgranted_memory_GBNull() {
                return this.IsNull(this.tablesp_who3.granted_memory_GBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setgranted_memory_GBNull() {
                this[this.tablesp_who3.granted_memory_GBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isobject_nameNull() {
                return this.IsNull(this.tablesp_who3.object_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setobject_nameNull() {
                this[this.tablesp_who3.object_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isprogram_nameNull() {
                return this.IsNull(this.tablesp_who3.program_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setprogram_nameNull() {
                this[this.tablesp_who3.program_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isquery_planNull() {
                return this.IsNull(this.tablesp_who3.query_planColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setquery_planNull() {
                this[this.tablesp_who3.query_planColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Issql_textNull() {
                return this.IsNull(this.tablesp_who3.sql_textColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setsql_textNull() {
                this[this.tablesp_who3.sql_textColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isest_time_to_goNull() {
                return this.IsNull(this.tablesp_who3.est_time_to_goColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setest_time_to_goNull() {
                this[this.tablesp_who3.est_time_to_goColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isest_completion_timeNull() {
                return this.IsNull(this.tablesp_who3.est_completion_timeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setest_completion_timeNull() {
                this[this.tablesp_who3.est_completion_timeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ClientsRowChangeEvent : global::System.EventArgs {
            
            private ClientsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ClientsRowChangeEvent(ClientsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ClientsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class DatabasesRowChangeEvent : global::System.EventArgs {
            
            private DatabasesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DatabasesRowChangeEvent(DatabasesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DatabasesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class DomainsRowChangeEvent : global::System.EventArgs {
            
            private DomainsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DomainsRowChangeEvent(DomainsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DomainsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ServerAliasesRowChangeEvent : global::System.EventArgs {
            
            private ServerAliasesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ServerAliasesRowChangeEvent(ServerAliasesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ServerAliasesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ServersRowChangeEvent : global::System.EventArgs {
            
            private ServersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ServersRowChangeEvent(ServersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ServersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class UsersRowChangeEvent : global::System.EventArgs {
            
            private UsersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UsersRowChangeEvent(UsersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UsersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class TicketsRowChangeEvent : global::System.EventArgs {
            
            private TicketsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TicketsRowChangeEvent(TicketsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TicketsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class TicketsOverMidMonthRowChangeEvent : global::System.EventArgs {
            
            private TicketsOverMidMonthRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TicketsOverMidMonthRowChangeEvent(TicketsOverMidMonthRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TicketsOverMidMonthRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class sp_who3RowChangeEvent : global::System.EventArgs {
            
            private sp_who3Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public sp_who3RowChangeEvent(sp_who3Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public sp_who3Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace QuickInterface.DBABnch_LOCALDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ClientsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ClientsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Clients";
            tableMapping.ColumnMappings.Add("ClientId", "ClientId");
            tableMapping.ColumnMappings.Add("ClientNm", "ClientNm");
            tableMapping.ColumnMappings.Add("ParentClientId", "ParentClientId");
            tableMapping.ColumnMappings.Add("FoundInDocument", "FoundInDocument");
            tableMapping.ColumnMappings.Add("NoInfoDueToConnectFailure", "NoInfoDueToConnectFailure");
            tableMapping.ColumnMappings.Add("SkipBecauseLongTimeoutAndFailConnect", "SkipBecauseLongTimeoutAndFailConnect");
            tableMapping.ColumnMappings.Add("SetSkipBecauseLongTimeoutAndFailConnect", "SetSkipBecauseLongTimeoutAndFailConnect");
            tableMapping.ColumnMappings.Add("UnsetSkipBecauseLongTimeoutAndFailConnect", "UnsetSkipBecauseLongTimeoutAndFailConnect");
            tableMapping.ColumnMappings.Add("Purpose", "Purpose");
            tableMapping.ColumnMappings.Add("Comments", "Comments");
            tableMapping.ColumnMappings.Add("SourceId", "SourceId");
            tableMapping.ColumnMappings.Add("Created", "Created");
            tableMapping.ColumnMappings.Add("CreatedBy", "CreatedBy");
            tableMapping.ColumnMappings.Add("Tested", "Tested");
            tableMapping.ColumnMappings.Add("TestedButNoChangeBy", "TestedButNoChangeBy");
            tableMapping.ColumnMappings.Add("Updated", "Updated");
            tableMapping.ColumnMappings.Add("UpdatedBy", "UpdatedBy");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Clients] WHERE (([ClientId] = @Original_ClientId) AND ((@IsNul" +
                "l_ClientNm = 1 AND [ClientNm] IS NULL) OR ([ClientNm] = @Original_ClientNm)) AND" +
                " ((@IsNull_ParentClientId = 1 AND [ParentClientId] IS NULL) OR ([ParentClientId]" +
                " = @Original_ParentClientId)) AND ((@IsNull_FoundInDocument = 1 AND [FoundInDocu" +
                "ment] IS NULL) OR ([FoundInDocument] = @Original_FoundInDocument)) AND ((@IsNull" +
                "_NoInfoDueToConnectFailure = 1 AND [NoInfoDueToConnectFailure] IS NULL) OR ([NoI" +
                "nfoDueToConnectFailure] = @Original_NoInfoDueToConnectFailure)) AND ((@IsNull_Sk" +
                "ipBecauseLongTimeoutAndFailConnect = 1 AND [SkipBecauseLongTimeoutAndFailConnect" +
                "] IS NULL) OR ([SkipBecauseLongTimeoutAndFailConnect] = @Original_SkipBecauseLon" +
                "gTimeoutAndFailConnect)) AND ((@IsNull_SetSkipBecauseLongTimeoutAndFailConnect =" +
                " 1 AND [SetSkipBecauseLongTimeoutAndFailConnect] IS NULL) OR ([SetSkipBecauseLon" +
                "gTimeoutAndFailConnect] = @Original_SetSkipBecauseLongTimeoutAndFailConnect)) AN" +
                "D ((@IsNull_UnsetSkipBecauseLongTimeoutAndFailConnect = 1 AND [UnsetSkipBecauseL" +
                "ongTimeoutAndFailConnect] IS NULL) OR ([UnsetSkipBecauseLongTimeoutAndFailConnec" +
                "t] = @Original_UnsetSkipBecauseLongTimeoutAndFailConnect)) AND ((@IsNull_Purpose" +
                " = 1 AND [Purpose] IS NULL) OR ([Purpose] = @Original_Purpose)) AND ([SourceId] " +
                "= @Original_SourceId) AND ([Created] = @Original_Created) AND ([CreatedBy] = @Or" +
                "iginal_CreatedBy) AND ((@IsNull_Tested = 1 AND [Tested] IS NULL) OR ([Tested] = " +
                "@Original_Tested)) AND ((@IsNull_TestedButNoChangeBy = 1 AND [TestedButNoChangeB" +
                "y] IS NULL) OR ([TestedButNoChangeBy] = @Original_TestedButNoChangeBy)) AND ([Up" +
                "dated] = @Original_Updated) AND ([UpdatedBy] = @Original_UpdatedBy))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClientId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ClientNm", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientNm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClientNm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientNm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ParentClientId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParentClientId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ParentClientId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParentClientId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FoundInDocument", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FoundInDocument", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FoundInDocument", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FoundInDocument", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NoInfoDueToConnectFailure", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoInfoDueToConnectFailure", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NoInfoDueToConnectFailure", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoInfoDueToConnectFailure", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UnsetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnsetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UnsetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnsetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Purpose", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Purpose", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SourceId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Created", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Tested", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tested", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tested", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tested", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TestedButNoChangeBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestedButNoChangeBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TestedButNoChangeBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestedButNoChangeBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Updated", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Updated", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Clients] ([ClientNm], [ParentClientId], [FoundInDocument], [NoInfoDueToConnectFailure], [SkipBecauseLongTimeoutAndFailConnect], [SetSkipBecauseLongTimeoutAndFailConnect], [UnsetSkipBecauseLongTimeoutAndFailConnect], [Purpose], [Comments], [SourceId], [Created], [CreatedBy], [Tested], [TestedButNoChangeBy], [Updated], [UpdatedBy]) VALUES (@ClientNm, @ParentClientId, @FoundInDocument, @NoInfoDueToConnectFailure, @SkipBecauseLongTimeoutAndFailConnect, @SetSkipBecauseLongTimeoutAndFailConnect, @UnsetSkipBecauseLongTimeoutAndFailConnect, @Purpose, @Comments, @SourceId, @Created, @CreatedBy, @Tested, @TestedButNoChangeBy, @Updated, @UpdatedBy);
SELECT ClientId, ClientNm, ParentClientId, FoundInDocument, NoInfoDueToConnectFailure, SkipBecauseLongTimeoutAndFailConnect, SetSkipBecauseLongTimeoutAndFailConnect, UnsetSkipBecauseLongTimeoutAndFailConnect, Purpose, Comments, SourceId, Created, CreatedBy, Tested, TestedButNoChangeBy, Updated, UpdatedBy FROM Clients WHERE (ClientId = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClientNm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientNm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ParentClientId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParentClientId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FoundInDocument", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FoundInDocument", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NoInfoDueToConnectFailure", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoInfoDueToConnectFailure", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UnsetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnsetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comments", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comments", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SourceId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Created", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tested", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tested", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TestedButNoChangeBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestedButNoChangeBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Updated", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Updated", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Clients] SET [ClientNm] = @ClientNm, [ParentClientId] = @ParentClie" +
                "ntId, [FoundInDocument] = @FoundInDocument, [NoInfoDueToConnectFailure] = @NoInf" +
                "oDueToConnectFailure, [SkipBecauseLongTimeoutAndFailConnect] = @SkipBecauseLongT" +
                "imeoutAndFailConnect, [SetSkipBecauseLongTimeoutAndFailConnect] = @SetSkipBecaus" +
                "eLongTimeoutAndFailConnect, [UnsetSkipBecauseLongTimeoutAndFailConnect] = @Unset" +
                "SkipBecauseLongTimeoutAndFailConnect, [Purpose] = @Purpose, [Comments] = @Commen" +
                "ts, [SourceId] = @SourceId, [Created] = @Created, [CreatedBy] = @CreatedBy, [Tes" +
                "ted] = @Tested, [TestedButNoChangeBy] = @TestedButNoChangeBy, [Updated] = @Updat" +
                "ed, [UpdatedBy] = @UpdatedBy WHERE (([ClientId] = @Original_ClientId) AND ((@IsN" +
                "ull_ClientNm = 1 AND [ClientNm] IS NULL) OR ([ClientNm] = @Original_ClientNm)) A" +
                "ND ((@IsNull_ParentClientId = 1 AND [ParentClientId] IS NULL) OR ([ParentClientI" +
                "d] = @Original_ParentClientId)) AND ((@IsNull_FoundInDocument = 1 AND [FoundInDo" +
                "cument] IS NULL) OR ([FoundInDocument] = @Original_FoundInDocument)) AND ((@IsNu" +
                "ll_NoInfoDueToConnectFailure = 1 AND [NoInfoDueToConnectFailure] IS NULL) OR ([N" +
                "oInfoDueToConnectFailure] = @Original_NoInfoDueToConnectFailure)) AND ((@IsNull_" +
                "SkipBecauseLongTimeoutAndFailConnect = 1 AND [SkipBecauseLongTimeoutAndFailConne" +
                "ct] IS NULL) OR ([SkipBecauseLongTimeoutAndFailConnect] = @Original_SkipBecauseL" +
                "ongTimeoutAndFailConnect)) AND ((@IsNull_SetSkipBecauseLongTimeoutAndFailConnect" +
                " = 1 AND [SetSkipBecauseLongTimeoutAndFailConnect] IS NULL) OR ([SetSkipBecauseL" +
                "ongTimeoutAndFailConnect] = @Original_SetSkipBecauseLongTimeoutAndFailConnect)) " +
                "AND ((@IsNull_UnsetSkipBecauseLongTimeoutAndFailConnect = 1 AND [UnsetSkipBecaus" +
                "eLongTimeoutAndFailConnect] IS NULL) OR ([UnsetSkipBecauseLongTimeoutAndFailConn" +
                "ect] = @Original_UnsetSkipBecauseLongTimeoutAndFailConnect)) AND ((@IsNull_Purpo" +
                "se = 1 AND [Purpose] IS NULL) OR ([Purpose] = @Original_Purpose)) AND ([SourceId" +
                "] = @Original_SourceId) AND ([Created] = @Original_Created) AND ([CreatedBy] = @" +
                "Original_CreatedBy) AND ((@IsNull_Tested = 1 AND [Tested] IS NULL) OR ([Tested] " +
                "= @Original_Tested)) AND ((@IsNull_TestedButNoChangeBy = 1 AND [TestedButNoChang" +
                "eBy] IS NULL) OR ([TestedButNoChangeBy] = @Original_TestedButNoChangeBy)) AND ([" +
                "Updated] = @Original_Updated) AND ([UpdatedBy] = @Original_UpdatedBy));\r\nSELECT " +
                "ClientId, ClientNm, ParentClientId, FoundInDocument, NoInfoDueToConnectFailure, " +
                "SkipBecauseLongTimeoutAndFailConnect, SetSkipBecauseLongTimeoutAndFailConnect, U" +
                "nsetSkipBecauseLongTimeoutAndFailConnect, Purpose, Comments, SourceId, Created, " +
                "CreatedBy, Tested, TestedButNoChangeBy, Updated, UpdatedBy FROM Clients WHERE (C" +
                "lientId = @ClientId)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClientNm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientNm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ParentClientId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParentClientId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FoundInDocument", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FoundInDocument", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NoInfoDueToConnectFailure", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoInfoDueToConnectFailure", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UnsetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnsetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comments", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comments", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SourceId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Created", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tested", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tested", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TestedButNoChangeBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestedButNoChangeBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Updated", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Updated", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClientId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ClientNm", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientNm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClientNm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientNm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ParentClientId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParentClientId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ParentClientId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParentClientId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FoundInDocument", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FoundInDocument", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FoundInDocument", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FoundInDocument", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NoInfoDueToConnectFailure", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoInfoDueToConnectFailure", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NoInfoDueToConnectFailure", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoInfoDueToConnectFailure", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UnsetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnsetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UnsetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnsetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Purpose", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Purpose", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SourceId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Created", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Tested", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tested", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tested", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tested", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TestedButNoChangeBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestedButNoChangeBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TestedButNoChangeBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestedButNoChangeBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Updated", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Updated", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClientId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ClientId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QuickInterface.Properties.Settings.Default.DBABnch_LOCALConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ClientId, ClientNm, ParentClientId, FoundInDocument, NoInfoDueToConnectFailure, SkipBecauseLongTimeoutAndFailConnect, SetSkipBecauseLongTimeoutAndFailConnect, UnsetSkipBecauseLongTimeoutAndFailConnect, Purpose, Comments, SourceId, Created, CreatedBy, Tested, TestedButNoChangeBy, Updated, UpdatedBy FROM dbo.Clients";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DBABnch_LOCALDataSet.ClientsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DBABnch_LOCALDataSet.ClientsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DBABnch_LOCALDataSet.ClientsDataTable dataTable = new DBABnch_LOCALDataSet.ClientsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DBABnch_LOCALDataSet.ClientsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DBABnch_LOCALDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Clients");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_ClientId, 
                    string Original_ClientNm, 
                    global::System.Nullable<int> Original_ParentClientId, 
                    global::System.Nullable<bool> Original_FoundInDocument, 
                    global::System.Nullable<bool> Original_NoInfoDueToConnectFailure, 
                    global::System.Nullable<bool> Original_SkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_SetSkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_UnsetSkipBecauseLongTimeoutAndFailConnect, 
                    string Original_Purpose, 
                    int Original_SourceId, 
                    System.DateTimeOffset Original_Created, 
                    int Original_CreatedBy, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_Tested, 
                    global::System.Nullable<int> Original_TestedButNoChangeBy, 
                    System.DateTimeOffset Original_Updated, 
                    int Original_UpdatedBy) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ClientId));
            if ((Original_ClientNm == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ClientNm));
            }
            if ((Original_ParentClientId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_ParentClientId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_FoundInDocument.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((bool)(Original_FoundInDocument.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_NoInfoDueToConnectFailure.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((bool)(Original_NoInfoDueToConnectFailure.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_SkipBecauseLongTimeoutAndFailConnect.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((bool)(Original_SkipBecauseLongTimeoutAndFailConnect.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_SetSkipBecauseLongTimeoutAndFailConnect.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTimeOffset)(Original_SetSkipBecauseLongTimeoutAndFailConnect.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_UnsetSkipBecauseLongTimeoutAndFailConnect.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((System.DateTimeOffset)(Original_UnsetSkipBecauseLongTimeoutAndFailConnect.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_Purpose == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_Purpose));
            }
            this.Adapter.DeleteCommand.Parameters[17].Value = ((int)(Original_SourceId));
            this.Adapter.DeleteCommand.Parameters[18].Value = ((System.DateTimeOffset)(Original_Created));
            this.Adapter.DeleteCommand.Parameters[19].Value = ((int)(Original_CreatedBy));
            if ((Original_Tested.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((System.DateTimeOffset)(Original_Tested.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_TestedButNoChangeBy.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((int)(Original_TestedButNoChangeBy.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[24].Value = ((System.DateTimeOffset)(Original_Updated));
            this.Adapter.DeleteCommand.Parameters[25].Value = ((int)(Original_UpdatedBy));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string ClientNm, 
                    global::System.Nullable<int> ParentClientId, 
                    global::System.Nullable<bool> FoundInDocument, 
                    global::System.Nullable<bool> NoInfoDueToConnectFailure, 
                    global::System.Nullable<bool> SkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> SetSkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> UnsetSkipBecauseLongTimeoutAndFailConnect, 
                    string Purpose, 
                    string Comments, 
                    int SourceId, 
                    System.DateTimeOffset Created, 
                    int CreatedBy, 
                    global::System.Nullable<global::System.DateTimeOffset> Tested, 
                    global::System.Nullable<int> TestedButNoChangeBy, 
                    System.DateTimeOffset Updated, 
                    int UpdatedBy) {
            if ((ClientNm == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ClientNm));
            }
            if ((ParentClientId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ParentClientId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((FoundInDocument.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(FoundInDocument.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((NoInfoDueToConnectFailure.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((bool)(NoInfoDueToConnectFailure.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((SkipBecauseLongTimeoutAndFailConnect.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(SkipBecauseLongTimeoutAndFailConnect.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((SetSkipBecauseLongTimeoutAndFailConnect.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTimeOffset)(SetSkipBecauseLongTimeoutAndFailConnect.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((UnsetSkipBecauseLongTimeoutAndFailConnect.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTimeOffset)(UnsetSkipBecauseLongTimeoutAndFailConnect.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Purpose == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Purpose));
            }
            if ((Comments == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Comments));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((int)(SourceId));
            this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTimeOffset)(Created));
            this.Adapter.InsertCommand.Parameters[11].Value = ((int)(CreatedBy));
            if ((Tested.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTimeOffset)(Tested.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((TestedButNoChangeBy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((int)(TestedButNoChangeBy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTimeOffset)(Updated));
            this.Adapter.InsertCommand.Parameters[15].Value = ((int)(UpdatedBy));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ClientNm, 
                    global::System.Nullable<int> ParentClientId, 
                    global::System.Nullable<bool> FoundInDocument, 
                    global::System.Nullable<bool> NoInfoDueToConnectFailure, 
                    global::System.Nullable<bool> SkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> SetSkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> UnsetSkipBecauseLongTimeoutAndFailConnect, 
                    string Purpose, 
                    string Comments, 
                    int SourceId, 
                    System.DateTimeOffset Created, 
                    int CreatedBy, 
                    global::System.Nullable<global::System.DateTimeOffset> Tested, 
                    global::System.Nullable<int> TestedButNoChangeBy, 
                    System.DateTimeOffset Updated, 
                    int UpdatedBy, 
                    int Original_ClientId, 
                    string Original_ClientNm, 
                    global::System.Nullable<int> Original_ParentClientId, 
                    global::System.Nullable<bool> Original_FoundInDocument, 
                    global::System.Nullable<bool> Original_NoInfoDueToConnectFailure, 
                    global::System.Nullable<bool> Original_SkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_SetSkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_UnsetSkipBecauseLongTimeoutAndFailConnect, 
                    string Original_Purpose, 
                    int Original_SourceId, 
                    System.DateTimeOffset Original_Created, 
                    int Original_CreatedBy, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_Tested, 
                    global::System.Nullable<int> Original_TestedButNoChangeBy, 
                    System.DateTimeOffset Original_Updated, 
                    int Original_UpdatedBy, 
                    int ClientId) {
            if ((ClientNm == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ClientNm));
            }
            if ((ParentClientId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ParentClientId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((FoundInDocument.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(FoundInDocument.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((NoInfoDueToConnectFailure.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((bool)(NoInfoDueToConnectFailure.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((SkipBecauseLongTimeoutAndFailConnect.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(SkipBecauseLongTimeoutAndFailConnect.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((SetSkipBecauseLongTimeoutAndFailConnect.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTimeOffset)(SetSkipBecauseLongTimeoutAndFailConnect.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((UnsetSkipBecauseLongTimeoutAndFailConnect.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTimeOffset)(UnsetSkipBecauseLongTimeoutAndFailConnect.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Purpose == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Purpose));
            }
            if ((Comments == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Comments));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(SourceId));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTimeOffset)(Created));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(CreatedBy));
            if ((Tested.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTimeOffset)(Tested.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((TestedButNoChangeBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(TestedButNoChangeBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTimeOffset)(Updated));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(UpdatedBy));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_ClientId));
            if ((Original_ClientNm == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_ClientNm));
            }
            if ((Original_ParentClientId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_ParentClientId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_FoundInDocument.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((bool)(Original_FoundInDocument.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_NoInfoDueToConnectFailure.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((bool)(Original_NoInfoDueToConnectFailure.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_SkipBecauseLongTimeoutAndFailConnect.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((bool)(Original_SkipBecauseLongTimeoutAndFailConnect.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_SetSkipBecauseLongTimeoutAndFailConnect.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((System.DateTimeOffset)(Original_SetSkipBecauseLongTimeoutAndFailConnect.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_UnsetSkipBecauseLongTimeoutAndFailConnect.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((System.DateTimeOffset)(Original_UnsetSkipBecauseLongTimeoutAndFailConnect.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_Purpose == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_Purpose));
            }
            this.Adapter.UpdateCommand.Parameters[33].Value = ((int)(Original_SourceId));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((System.DateTimeOffset)(Original_Created));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((int)(Original_CreatedBy));
            if ((Original_Tested.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((System.DateTimeOffset)(Original_Tested.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Original_TestedButNoChangeBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((int)(Original_TestedButNoChangeBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[40].Value = ((System.DateTimeOffset)(Original_Updated));
            this.Adapter.UpdateCommand.Parameters[41].Value = ((int)(Original_UpdatedBy));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((int)(ClientId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ClientNm, 
                    global::System.Nullable<int> ParentClientId, 
                    global::System.Nullable<bool> FoundInDocument, 
                    global::System.Nullable<bool> NoInfoDueToConnectFailure, 
                    global::System.Nullable<bool> SkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> SetSkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> UnsetSkipBecauseLongTimeoutAndFailConnect, 
                    string Purpose, 
                    string Comments, 
                    int SourceId, 
                    System.DateTimeOffset Created, 
                    int CreatedBy, 
                    global::System.Nullable<global::System.DateTimeOffset> Tested, 
                    global::System.Nullable<int> TestedButNoChangeBy, 
                    System.DateTimeOffset Updated, 
                    int UpdatedBy, 
                    int Original_ClientId, 
                    string Original_ClientNm, 
                    global::System.Nullable<int> Original_ParentClientId, 
                    global::System.Nullable<bool> Original_FoundInDocument, 
                    global::System.Nullable<bool> Original_NoInfoDueToConnectFailure, 
                    global::System.Nullable<bool> Original_SkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_SetSkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_UnsetSkipBecauseLongTimeoutAndFailConnect, 
                    string Original_Purpose, 
                    int Original_SourceId, 
                    System.DateTimeOffset Original_Created, 
                    int Original_CreatedBy, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_Tested, 
                    global::System.Nullable<int> Original_TestedButNoChangeBy, 
                    System.DateTimeOffset Original_Updated, 
                    int Original_UpdatedBy) {
            return this.Update(ClientNm, ParentClientId, FoundInDocument, NoInfoDueToConnectFailure, SkipBecauseLongTimeoutAndFailConnect, SetSkipBecauseLongTimeoutAndFailConnect, UnsetSkipBecauseLongTimeoutAndFailConnect, Purpose, Comments, SourceId, Created, CreatedBy, Tested, TestedButNoChangeBy, Updated, UpdatedBy, Original_ClientId, Original_ClientNm, Original_ParentClientId, Original_FoundInDocument, Original_NoInfoDueToConnectFailure, Original_SkipBecauseLongTimeoutAndFailConnect, Original_SetSkipBecauseLongTimeoutAndFailConnect, Original_UnsetSkipBecauseLongTimeoutAndFailConnect, Original_Purpose, Original_SourceId, Original_Created, Original_CreatedBy, Original_Tested, Original_TestedButNoChangeBy, Original_Updated, Original_UpdatedBy, Original_ClientId);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DatabasesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public DatabasesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Databases";
            tableMapping.ColumnMappings.Add("DbId", "DbId");
            tableMapping.ColumnMappings.Add("DbScannedID", "DbScannedID");
            tableMapping.ColumnMappings.Add("SvrToScanID", "SvrToScanID");
            tableMapping.ColumnMappings.Add("LinkSvrNm", "LinkSvrNm");
            tableMapping.ColumnMappings.Add("SvrNm", "SvrNm");
            tableMapping.ColumnMappings.Add("DbNm", "DbNm");
            tableMapping.ColumnMappings.Add("RanAsUser", "RanAsUser");
            tableMapping.ColumnMappings.Add("Created", "Created");
            tableMapping.ColumnMappings.Add("compatibility_level", "compatibility_level");
            tableMapping.ColumnMappings.Add("is_read_committed_snapshot_on", "is_read_committed_snapshot_on");
            tableMapping.ColumnMappings.Add("is_trustworthy_on", "is_trustworthy_on");
            tableMapping.ColumnMappings.Add("is_db_chaining_on", "is_db_chaining_on");
            tableMapping.ColumnMappings.Add("is_fulltext_enabled", "is_fulltext_enabled");
            tableMapping.ColumnMappings.Add("is_numeric_roundabort_on", "is_numeric_roundabort_on");
            tableMapping.ColumnMappings.Add("is_arithabort_on", "is_arithabort_on");
            tableMapping.ColumnMappings.Add("is_master_key_encrypted_by_server", "is_master_key_encrypted_by_server");
            tableMapping.ColumnMappings.Add("is_read_only", "is_read_only");
            tableMapping.ColumnMappings.Add("is_cdc_enabled", "is_cdc_enabled");
            tableMapping.ColumnMappings.Add("is_query_store_on", "is_query_store_on");
            tableMapping.ColumnMappings.Add("delayed_durability_desc", "delayed_durability_desc");
            tableMapping.ColumnMappings.Add("recovery_model_desc", "recovery_model_desc");
            tableMapping.ColumnMappings.Add("snapshot_isolation_state_desc", "snapshot_isolation_state_desc");
            tableMapping.ColumnMappings.Add("collation_name", "collation_name");
            tableMapping.ColumnMappings.Add("Skip", "Skip");
            tableMapping.ColumnMappings.Add("PingFailed", "PingFailed");
            tableMapping.ColumnMappings.Add("NoLongerExists", "NoLongerExists");
            tableMapping.ColumnMappings.Add("ConnectionAttemptTimedOut", "ConnectionAttemptTimedOut");
            tableMapping.ColumnMappings.Add("ClientFailedToMakeAConnection", "ClientFailedToMakeAConnection");
            tableMapping.ColumnMappings.Add("NoAccessForADUserId", "NoAccessForADUserId");
            tableMapping.ColumnMappings.Add("LongTimeoutAndFailedToConnect", "LongTimeoutAndFailedToConnect");
            tableMapping.ColumnMappings.Add("RemoteTimeStampAtCaptureOFFSET", "RemoteTimeStampAtCaptureOFFSET");
            tableMapping.ColumnMappings.Add("RemoteTimeStampAtCaptureUTC", "RemoteTimeStampAtCaptureUTC");
            tableMapping.ColumnMappings.Add("Captured", "Captured");
            tableMapping.ColumnMappings.Add("CapturedBy", "CapturedBy");
            tableMapping.ColumnMappings.Add("CapturedOnSvr", "CapturedOnSvr");
            tableMapping.ColumnMappings.Add("CapturedOnDb", "CapturedOnDb");
            tableMapping.ColumnMappings.Add("CapturingProcess", "CapturingProcess");
            tableMapping.ColumnMappings.Add("CapturingProcessVersion", "CapturingProcessVersion");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [InfrastructureForSQLServer].[Databases] WHERE (([DbId] = @Original_D" +
                "bId) AND ([DbScannedID] = @Original_DbScannedID) AND ([SvrToScanID] = @Original_" +
                "SvrToScanID) AND ((@IsNull_LinkSvrNm = 1 AND [LinkSvrNm] IS NULL) OR ([LinkSvrNm" +
                "] = @Original_LinkSvrNm)) AND ((@IsNull_SvrNm = 1 AND [SvrNm] IS NULL) OR ([SvrN" +
                "m] = @Original_SvrNm)) AND ((@IsNull_DbNm = 1 AND [DbNm] IS NULL) OR ([DbNm] = @" +
                "Original_DbNm)) AND ((@IsNull_RanAsUser = 1 AND [RanAsUser] IS NULL) OR ([RanAsU" +
                "ser] = @Original_RanAsUser)) AND ((@IsNull_Created = 1 AND [Created] IS NULL) OR" +
                " ([Created] = @Original_Created)) AND ((@IsNull_compatibility_level = 1 AND [com" +
                "patibility_level] IS NULL) OR ([compatibility_level] = @Original_compatibility_l" +
                "evel)) AND ((@IsNull_is_read_committed_snapshot_on = 1 AND [is_read_committed_sn" +
                "apshot_on] IS NULL) OR ([is_read_committed_snapshot_on] = @Original_is_read_comm" +
                "itted_snapshot_on)) AND ((@IsNull_is_trustworthy_on = 1 AND [is_trustworthy_on] " +
                "IS NULL) OR ([is_trustworthy_on] = @Original_is_trustworthy_on)) AND ((@IsNull_i" +
                "s_db_chaining_on = 1 AND [is_db_chaining_on] IS NULL) OR ([is_db_chaining_on] = " +
                "@Original_is_db_chaining_on)) AND ((@IsNull_is_fulltext_enabled = 1 AND [is_full" +
                "text_enabled] IS NULL) OR ([is_fulltext_enabled] = @Original_is_fulltext_enabled" +
                ")) AND ((@IsNull_is_numeric_roundabort_on = 1 AND [is_numeric_roundabort_on] IS " +
                "NULL) OR ([is_numeric_roundabort_on] = @Original_is_numeric_roundabort_on)) AND " +
                "((@IsNull_is_arithabort_on = 1 AND [is_arithabort_on] IS NULL) OR ([is_arithabor" +
                "t_on] = @Original_is_arithabort_on)) AND ((@IsNull_is_master_key_encrypted_by_se" +
                "rver = 1 AND [is_master_key_encrypted_by_server] IS NULL) OR ([is_master_key_enc" +
                "rypted_by_server] = @Original_is_master_key_encrypted_by_server)) AND ((@IsNull_" +
                "is_read_only = 1 AND [is_read_only] IS NULL) OR ([is_read_only] = @Original_is_r" +
                "ead_only)) AND ((@IsNull_is_cdc_enabled = 1 AND [is_cdc_enabled] IS NULL) OR ([i" +
                "s_cdc_enabled] = @Original_is_cdc_enabled)) AND ((@IsNull_is_query_store_on = 1 " +
                "AND [is_query_store_on] IS NULL) OR ([is_query_store_on] = @Original_is_query_st" +
                "ore_on)) AND ((@IsNull_delayed_durability_desc = 1 AND [delayed_durability_desc]" +
                " IS NULL) OR ([delayed_durability_desc] = @Original_delayed_durability_desc)) AN" +
                "D ((@IsNull_recovery_model_desc = 1 AND [recovery_model_desc] IS NULL) OR ([reco" +
                "very_model_desc] = @Original_recovery_model_desc)) AND ((@IsNull_snapshot_isolat" +
                "ion_state_desc = 1 AND [snapshot_isolation_state_desc] IS NULL) OR ([snapshot_is" +
                "olation_state_desc] = @Original_snapshot_isolation_state_desc)) AND ((@IsNull_co" +
                "llation_name = 1 AND [collation_name] IS NULL) OR ([collation_name] = @Original_" +
                "collation_name)) AND ((@IsNull_Skip = 1 AND [Skip] IS NULL) OR ([Skip] = @Origin" +
                "al_Skip)) AND ((@IsNull_PingFailed = 1 AND [PingFailed] IS NULL) OR ([PingFailed" +
                "] = @Original_PingFailed)) AND ((@IsNull_NoLongerExists = 1 AND [NoLongerExists]" +
                " IS NULL) OR ([NoLongerExists] = @Original_NoLongerExists)) AND ((@IsNull_Connec" +
                "tionAttemptTimedOut = 1 AND [ConnectionAttemptTimedOut] IS NULL) OR ([Connection" +
                "AttemptTimedOut] = @Original_ConnectionAttemptTimedOut)) AND ((@IsNull_ClientFai" +
                "ledToMakeAConnection = 1 AND [ClientFailedToMakeAConnection] IS NULL) OR ([Clien" +
                "tFailedToMakeAConnection] = @Original_ClientFailedToMakeAConnection)) AND ((@IsN" +
                "ull_NoAccessForADUserId = 1 AND [NoAccessForADUserId] IS NULL) OR ([NoAccessForA" +
                "DUserId] = @Original_NoAccessForADUserId)) AND ((@IsNull_LongTimeoutAndFailedToC" +
                "onnect = 1 AND [LongTimeoutAndFailedToConnect] IS NULL) OR ([LongTimeoutAndFaile" +
                "dToConnect] = @Original_LongTimeoutAndFailedToConnect)) AND ((@IsNull_RemoteTime" +
                "StampAtCaptureOFFSET = 1 AND [RemoteTimeStampAtCaptureOFFSET] IS NULL) OR ([Remo" +
                "teTimeStampAtCaptureOFFSET] = @Original_RemoteTimeStampAtCaptureOFFSET)) AND ((@" +
                "IsNull_RemoteTimeStampAtCaptureUTC = 1 AND [RemoteTimeStampAtCaptureUTC] IS NULL" +
                ") OR ([RemoteTimeStampAtCaptureUTC] = @Original_RemoteTimeStampAtCaptureUTC)) AN" +
                "D ([Captured] = @Original_Captured) AND ((@IsNull_CapturedBy = 1 AND [CapturedBy" +
                "] IS NULL) OR ([CapturedBy] = @Original_CapturedBy)) AND ((@IsNull_CapturedOnSvr" +
                " = 1 AND [CapturedOnSvr] IS NULL) OR ([CapturedOnSvr] = @Original_CapturedOnSvr)" +
                ") AND ((@IsNull_CapturedOnDb = 1 AND [CapturedOnDb] IS NULL) OR ([CapturedOnDb] " +
                "= @Original_CapturedOnDb)) AND ([CapturingProcess] = @Original_CapturingProcess)" +
                " AND ((@IsNull_CapturingProcessVersion = 1 AND [CapturingProcessVersion] IS NULL" +
                ") OR ([CapturingProcessVersion] = @Original_CapturingProcessVersion)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DbId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DbId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DbScannedID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DbScannedID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SvrToScanID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SvrToScanID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LinkSvrNm", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LinkSvrNm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LinkSvrNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LinkSvrNm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SvrNm", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SvrNm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SvrNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SvrNm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DbNm", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DbNm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DbNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DbNm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RanAsUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RanAsUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RanAsUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RanAsUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Created", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Created", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_compatibility_level", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "compatibility_level", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_compatibility_level", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "compatibility_level", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_read_committed_snapshot_on", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_read_committed_snapshot_on", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_read_committed_snapshot_on", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_read_committed_snapshot_on", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_trustworthy_on", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_trustworthy_on", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_trustworthy_on", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_trustworthy_on", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_db_chaining_on", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_db_chaining_on", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_db_chaining_on", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_db_chaining_on", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_fulltext_enabled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_fulltext_enabled", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_fulltext_enabled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_fulltext_enabled", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_numeric_roundabort_on", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_numeric_roundabort_on", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_numeric_roundabort_on", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_numeric_roundabort_on", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_arithabort_on", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_arithabort_on", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_arithabort_on", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_arithabort_on", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_master_key_encrypted_by_server", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_master_key_encrypted_by_server", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_master_key_encrypted_by_server", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_master_key_encrypted_by_server", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_read_only", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_read_only", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_read_only", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_read_only", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_cdc_enabled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_cdc_enabled", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_cdc_enabled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_cdc_enabled", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_query_store_on", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_query_store_on", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_query_store_on", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_query_store_on", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_delayed_durability_desc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "delayed_durability_desc", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_delayed_durability_desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "delayed_durability_desc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_recovery_model_desc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "recovery_model_desc", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_recovery_model_desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "recovery_model_desc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_snapshot_isolation_state_desc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "snapshot_isolation_state_desc", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_snapshot_isolation_state_desc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "snapshot_isolation_state_desc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_collation_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "collation_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_collation_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "collation_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Skip", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Skip", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Skip", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Skip", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PingFailed", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PingFailed", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PingFailed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PingFailed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NoLongerExists", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoLongerExists", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NoLongerExists", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoLongerExists", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConnectionAttemptTimedOut", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConnectionAttemptTimedOut", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConnectionAttemptTimedOut", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConnectionAttemptTimedOut", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ClientFailedToMakeAConnection", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientFailedToMakeAConnection", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClientFailedToMakeAConnection", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientFailedToMakeAConnection", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NoAccessForADUserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoAccessForADUserId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NoAccessForADUserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoAccessForADUserId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LongTimeoutAndFailedToConnect", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LongTimeoutAndFailedToConnect", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LongTimeoutAndFailedToConnect", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LongTimeoutAndFailedToConnect", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RemoteTimeStampAtCaptureOFFSET", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RemoteTimeStampAtCaptureOFFSET", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RemoteTimeStampAtCaptureOFFSET", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RemoteTimeStampAtCaptureOFFSET", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RemoteTimeStampAtCaptureUTC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RemoteTimeStampAtCaptureUTC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RemoteTimeStampAtCaptureUTC", global::System.Data.SqlDbType.DateTime2, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RemoteTimeStampAtCaptureUTC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Captured", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Captured", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CapturedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CapturedBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CapturedBy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CapturedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CapturedOnSvr", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CapturedOnSvr", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CapturedOnSvr", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CapturedOnSvr", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CapturedOnDb", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CapturedOnDb", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CapturedOnDb", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CapturedOnDb", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CapturingProcess", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CapturingProcess", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CapturingProcessVersion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CapturingProcessVersion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CapturingProcessVersion", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CapturingProcessVersion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [InfrastructureForSQLServer].[Databases] ([DbScannedID], [SvrToScanID" +
                "], [LinkSvrNm], [SvrNm], [DbNm], [RanAsUser], [Created], [compatibility_level], " +
                "[is_read_committed_snapshot_on], [is_trustworthy_on], [is_db_chaining_on], [is_f" +
                "ulltext_enabled], [is_numeric_roundabort_on], [is_arithabort_on], [is_master_key" +
                "_encrypted_by_server], [is_read_only], [is_cdc_enabled], [is_query_store_on], [d" +
                "elayed_durability_desc], [recovery_model_desc], [snapshot_isolation_state_desc]," +
                " [collation_name], [Skip], [PingFailed], [NoLongerExists], [ConnectionAttemptTim" +
                "edOut], [ClientFailedToMakeAConnection], [NoAccessForADUserId], [LongTimeoutAndF" +
                "ailedToConnect], [RemoteTimeStampAtCaptureOFFSET], [RemoteTimeStampAtCaptureUTC]" +
                ", [Captured], [CapturedBy], [CapturedOnSvr], [CapturedOnDb], [CapturingProcess]," +
                " [CapturingProcessVersion]) VALUES (@DbScannedID, @SvrToScanID, @LinkSvrNm, @Svr" +
                "Nm, @DbNm, @RanAsUser, @Created, @compatibility_level, @is_read_committed_snapsh" +
                "ot_on, @is_trustworthy_on, @is_db_chaining_on, @is_fulltext_enabled, @is_numeric" +
                "_roundabort_on, @is_arithabort_on, @is_master_key_encrypted_by_server, @is_read_" +
                "only, @is_cdc_enabled, @is_query_store_on, @delayed_durability_desc, @recovery_m" +
                "odel_desc, @snapshot_isolation_state_desc, @collation_name, @Skip, @PingFailed, " +
                "@NoLongerExists, @ConnectionAttemptTimedOut, @ClientFailedToMakeAConnection, @No" +
                "AccessForADUserId, @LongTimeoutAndFailedToConnect, @RemoteTimeStampAtCaptureOFFS" +
                "ET, @RemoteTimeStampAtCaptureUTC, @Captured, @CapturedBy, @CapturedOnSvr, @Captu" +
                "redOnDb, @CapturingProcess, @CapturingProcessVersion);\r\nSELECT DbId, DbScannedID" +
                ", SvrToScanID, LinkSvrNm, SvrNm, DbNm, RanAsUser, Created, compatibility_level, " +
                "is_read_committed_snapshot_on, is_trustworthy_on, is_db_chaining_on, is_fulltext" +
                "_enabled, is_numeric_roundabort_on, is_arithabort_on, is_master_key_encrypted_by" +
                "_server, is_read_only, is_cdc_enabled, is_query_store_on, delayed_durability_des" +
                "c, recovery_model_desc, snapshot_isolation_state_desc, collation_name, Skip, Pin" +
                "gFailed, NoLongerExists, ConnectionAttemptTimedOut, ClientFailedToMakeAConnectio" +
                "n, NoAccessForADUserId, LongTimeoutAndFailedToConnect, RemoteTimeStampAtCaptureO" +
                "FFSET, RemoteTimeStampAtCaptureUTC, Captured, CapturedBy, CapturedOnSvr, Capture" +
                "dOnDb, CapturingProcess, CapturingProcessVersion FROM InfrastructureForSQLServer" +
                ".Databases WHERE (DbId = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DbScannedID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DbScannedID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SvrToScanID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SvrToScanID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LinkSvrNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LinkSvrNm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SvrNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SvrNm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DbNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DbNm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RanAsUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RanAsUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Created", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@compatibility_level", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "compatibility_level", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_read_committed_snapshot_on", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_read_committed_snapshot_on", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_trustworthy_on", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_trustworthy_on", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_db_chaining_on", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_db_chaining_on", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_fulltext_enabled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_fulltext_enabled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_numeric_roundabort_on", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_numeric_roundabort_on", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_arithabort_on", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_arithabort_on", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_master_key_encrypted_by_server", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_master_key_encrypted_by_server", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_read_only", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_read_only", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_cdc_enabled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_cdc_enabled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_query_store_on", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_query_store_on", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@delayed_durability_desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "delayed_durability_desc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@recovery_model_desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "recovery_model_desc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@snapshot_isolation_state_desc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "snapshot_isolation_state_desc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@collation_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "collation_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Skip", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Skip", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PingFailed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PingFailed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NoLongerExists", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoLongerExists", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConnectionAttemptTimedOut", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConnectionAttemptTimedOut", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClientFailedToMakeAConnection", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientFailedToMakeAConnection", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NoAccessForADUserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoAccessForADUserId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LongTimeoutAndFailedToConnect", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LongTimeoutAndFailedToConnect", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RemoteTimeStampAtCaptureOFFSET", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RemoteTimeStampAtCaptureOFFSET", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RemoteTimeStampAtCaptureUTC", global::System.Data.SqlDbType.DateTime2, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RemoteTimeStampAtCaptureUTC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Captured", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Captured", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CapturedBy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CapturedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CapturedOnSvr", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CapturedOnSvr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CapturedOnDb", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CapturedOnDb", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CapturingProcess", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CapturingProcess", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CapturingProcessVersion", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CapturingProcessVersion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [InfrastructureForSQLServer].[Databases] SET [DbScannedID] = @DbScannedID," +
                " [SvrToScanID] = @SvrToScanID, [LinkSvrNm] = @LinkSvrNm, [SvrNm] = @SvrNm, [DbNm" +
                "] = @DbNm, [RanAsUser] = @RanAsUser, [Created] = @Created, [compatibility_level]" +
                " = @compatibility_level, [is_read_committed_snapshot_on] = @is_read_committed_sn" +
                "apshot_on, [is_trustworthy_on] = @is_trustworthy_on, [is_db_chaining_on] = @is_d" +
                "b_chaining_on, [is_fulltext_enabled] = @is_fulltext_enabled, [is_numeric_roundab" +
                "ort_on] = @is_numeric_roundabort_on, [is_arithabort_on] = @is_arithabort_on, [is" +
                "_master_key_encrypted_by_server] = @is_master_key_encrypted_by_server, [is_read_" +
                "only] = @is_read_only, [is_cdc_enabled] = @is_cdc_enabled, [is_query_store_on] =" +
                " @is_query_store_on, [delayed_durability_desc] = @delayed_durability_desc, [reco" +
                "very_model_desc] = @recovery_model_desc, [snapshot_isolation_state_desc] = @snap" +
                "shot_isolation_state_desc, [collation_name] = @collation_name, [Skip] = @Skip, [" +
                "PingFailed] = @PingFailed, [NoLongerExists] = @NoLongerExists, [ConnectionAttemp" +
                "tTimedOut] = @ConnectionAttemptTimedOut, [ClientFailedToMakeAConnection] = @Clie" +
                "ntFailedToMakeAConnection, [NoAccessForADUserId] = @NoAccessForADUserId, [LongTi" +
                "meoutAndFailedToConnect] = @LongTimeoutAndFailedToConnect, [RemoteTimeStampAtCap" +
                "tureOFFSET] = @RemoteTimeStampAtCaptureOFFSET, [RemoteTimeStampAtCaptureUTC] = @" +
                "RemoteTimeStampAtCaptureUTC, [Captured] = @Captured, [CapturedBy] = @CapturedBy," +
                " [CapturedOnSvr] = @CapturedOnSvr, [CapturedOnDb] = @CapturedOnDb, [CapturingPro" +
                "cess] = @CapturingProcess, [CapturingProcessVersion] = @CapturingProcessVersion " +
                "WHERE (([DbId] = @Original_DbId) AND ([DbScannedID] = @Original_DbScannedID) AND" +
                " ([SvrToScanID] = @Original_SvrToScanID) AND ((@IsNull_LinkSvrNm = 1 AND [LinkSv" +
                "rNm] IS NULL) OR ([LinkSvrNm] = @Original_LinkSvrNm)) AND ((@IsNull_SvrNm = 1 AN" +
                "D [SvrNm] IS NULL) OR ([SvrNm] = @Original_SvrNm)) AND ((@IsNull_DbNm = 1 AND [D" +
                "bNm] IS NULL) OR ([DbNm] = @Original_DbNm)) AND ((@IsNull_RanAsUser = 1 AND [Ran" +
                "AsUser] IS NULL) OR ([RanAsUser] = @Original_RanAsUser)) AND ((@IsNull_Created =" +
                " 1 AND [Created] IS NULL) OR ([Created] = @Original_Created)) AND ((@IsNull_comp" +
                "atibility_level = 1 AND [compatibility_level] IS NULL) OR ([compatibility_level]" +
                " = @Original_compatibility_level)) AND ((@IsNull_is_read_committed_snapshot_on =" +
                " 1 AND [is_read_committed_snapshot_on] IS NULL) OR ([is_read_committed_snapshot_" +
                "on] = @Original_is_read_committed_snapshot_on)) AND ((@IsNull_is_trustworthy_on " +
                "= 1 AND [is_trustworthy_on] IS NULL) OR ([is_trustworthy_on] = @Original_is_trus" +
                "tworthy_on)) AND ((@IsNull_is_db_chaining_on = 1 AND [is_db_chaining_on] IS NULL" +
                ") OR ([is_db_chaining_on] = @Original_is_db_chaining_on)) AND ((@IsNull_is_fullt" +
                "ext_enabled = 1 AND [is_fulltext_enabled] IS NULL) OR ([is_fulltext_enabled] = @" +
                "Original_is_fulltext_enabled)) AND ((@IsNull_is_numeric_roundabort_on = 1 AND [i" +
                "s_numeric_roundabort_on] IS NULL) OR ([is_numeric_roundabort_on] = @Original_is_" +
                "numeric_roundabort_on)) AND ((@IsNull_is_arithabort_on = 1 AND [is_arithabort_on" +
                "] IS NULL) OR ([is_arithabort_on] = @Original_is_arithabort_on)) AND ((@IsNull_i" +
                "s_master_key_encrypted_by_server = 1 AND [is_master_key_encrypted_by_server] IS " +
                "NULL) OR ([is_master_key_encrypted_by_server] = @Original_is_master_key_encrypte" +
                "d_by_server)) AND ((@IsNull_is_read_only = 1 AND [is_read_only] IS NULL) OR ([is" +
                "_read_only] = @Original_is_read_only)) AND ((@IsNull_is_cdc_enabled = 1 AND [is_" +
                "cdc_enabled] IS NULL) OR ([is_cdc_enabled] = @Original_is_cdc_enabled)) AND ((@I" +
                "sNull_is_query_store_on = 1 AND [is_query_store_on] IS NULL) OR ([is_query_store" +
                "_on] = @Original_is_query_store_on)) AND ((@IsNull_delayed_durability_desc = 1 A" +
                "ND [delayed_durability_desc] IS NULL) OR ([delayed_durability_desc] = @Original_" +
                "delayed_durability_desc)) AND ((@IsNull_recovery_model_desc = 1 AND [recovery_mo" +
                "del_desc] IS NULL) OR ([recovery_model_desc] = @Original_recovery_model_desc)) A" +
                "ND ((@IsNull_snapshot_isolation_state_desc = 1 AND [snapshot_isolation_state_des" +
                "c] IS NULL) OR ([snapshot_isolation_state_desc] = @Original_snapshot_isolation_s" +
                "tate_desc)) AND ((@IsNull_collation_name = 1 AND [collation_name] IS NULL) OR ([" +
                "collation_name] = @Original_collation_name)) AND ((@IsNull_Skip = 1 AND [Skip] I" +
                "S NULL) OR ([Skip] = @Original_Skip)) AND ((@IsNull_PingFailed = 1 AND [PingFail" +
                "ed] IS NULL) OR ([PingFailed] = @Original_PingFailed)) AND ((@IsNull_NoLongerExi" +
                "sts = 1 AND [NoLongerExists] IS NULL) OR ([NoLongerExists] = @Original_NoLongerE" +
                "xists)) AND ((@IsNull_ConnectionAttemptTimedOut = 1 AND [ConnectionAttemptTimedO" +
                "ut] IS NULL) OR ([ConnectionAttemptTimedOut] = @Original_ConnectionAttemptTimedO" +
                "ut)) AND ((@IsNull_ClientFailedToMakeAConnection = 1 AND [ClientFailedToMakeACon" +
                "nection] IS NULL) OR ([ClientFailedToMakeAConnection] = @Original_ClientFailedTo" +
                "MakeAConnection)) AND ((@IsNull_NoAccessForADUserId = 1 AND [NoAccessForADUserId" +
                "] IS NULL) OR ([NoAccessForADUserId] = @Original_NoAccessForADUserId)) AND ((@Is" +
                "Null_LongTimeoutAndFailedToConnect = 1 AND [LongTimeoutAndFailedToConnect] IS NU" +
                "LL) OR ([LongTimeoutAndFailedToConnect] = @Original_LongTimeoutAndFailedToConnec" +
                "t)) AND ((@IsNull_RemoteTimeStampAtCaptureOFFSET = 1 AND [RemoteTimeStampAtCaptu" +
                "reOFFSET] IS NULL) OR ([RemoteTimeStampAtCaptureOFFSET] = @Original_RemoteTimeSt" +
                "ampAtCaptureOFFSET)) AND ((@IsNull_RemoteTimeStampAtCaptureUTC = 1 AND [RemoteTi" +
                "meStampAtCaptureUTC] IS NULL) OR ([RemoteTimeStampAtCaptureUTC] = @Original_Remo" +
                "teTimeStampAtCaptureUTC)) AND ([Captured] = @Original_Captured) AND ((@IsNull_Ca" +
                "pturedBy = 1 AND [CapturedBy] IS NULL) OR ([CapturedBy] = @Original_CapturedBy))" +
                " AND ((@IsNull_CapturedOnSvr = 1 AND [CapturedOnSvr] IS NULL) OR ([CapturedOnSvr" +
                "] = @Original_CapturedOnSvr)) AND ((@IsNull_CapturedOnDb = 1 AND [CapturedOnDb] " +
                "IS NULL) OR ([CapturedOnDb] = @Original_CapturedOnDb)) AND ([CapturingProcess] =" +
                " @Original_CapturingProcess) AND ((@IsNull_CapturingProcessVersion = 1 AND [Capt" +
                "uringProcessVersion] IS NULL) OR ([CapturingProcessVersion] = @Original_Capturin" +
                "gProcessVersion)));\r\nSELECT DbId, DbScannedID, SvrToScanID, LinkSvrNm, SvrNm, Db" +
                "Nm, RanAsUser, Created, compatibility_level, is_read_committed_snapshot_on, is_t" +
                "rustworthy_on, is_db_chaining_on, is_fulltext_enabled, is_numeric_roundabort_on," +
                " is_arithabort_on, is_master_key_encrypted_by_server, is_read_only, is_cdc_enabl" +
                "ed, is_query_store_on, delayed_durability_desc, recovery_model_desc, snapshot_is" +
                "olation_state_desc, collation_name, Skip, PingFailed, NoLongerExists, Connection" +
                "AttemptTimedOut, ClientFailedToMakeAConnection, NoAccessForADUserId, LongTimeout" +
                "AndFailedToConnect, RemoteTimeStampAtCaptureOFFSET, RemoteTimeStampAtCaptureUTC," +
                " Captured, CapturedBy, CapturedOnSvr, CapturedOnDb, CapturingProcess, CapturingP" +
                "rocessVersion FROM InfrastructureForSQLServer.Databases WHERE (DbId = @DbId)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DbScannedID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DbScannedID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SvrToScanID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SvrToScanID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LinkSvrNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LinkSvrNm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SvrNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SvrNm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DbNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DbNm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RanAsUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RanAsUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Created", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@compatibility_level", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "compatibility_level", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_read_committed_snapshot_on", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_read_committed_snapshot_on", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_trustworthy_on", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_trustworthy_on", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_db_chaining_on", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_db_chaining_on", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_fulltext_enabled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_fulltext_enabled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_numeric_roundabort_on", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_numeric_roundabort_on", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_arithabort_on", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_arithabort_on", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_master_key_encrypted_by_server", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_master_key_encrypted_by_server", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_read_only", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_read_only", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_cdc_enabled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_cdc_enabled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_query_store_on", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_query_store_on", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@delayed_durability_desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "delayed_durability_desc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@recovery_model_desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "recovery_model_desc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@snapshot_isolation_state_desc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "snapshot_isolation_state_desc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@collation_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "collation_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Skip", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Skip", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PingFailed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PingFailed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NoLongerExists", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoLongerExists", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConnectionAttemptTimedOut", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConnectionAttemptTimedOut", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClientFailedToMakeAConnection", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientFailedToMakeAConnection", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NoAccessForADUserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoAccessForADUserId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LongTimeoutAndFailedToConnect", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LongTimeoutAndFailedToConnect", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RemoteTimeStampAtCaptureOFFSET", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RemoteTimeStampAtCaptureOFFSET", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RemoteTimeStampAtCaptureUTC", global::System.Data.SqlDbType.DateTime2, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RemoteTimeStampAtCaptureUTC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Captured", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Captured", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CapturedBy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CapturedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CapturedOnSvr", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CapturedOnSvr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CapturedOnDb", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CapturedOnDb", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CapturingProcess", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CapturingProcess", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CapturingProcessVersion", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CapturingProcessVersion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DbId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DbId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DbScannedID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DbScannedID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SvrToScanID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SvrToScanID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LinkSvrNm", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LinkSvrNm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LinkSvrNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LinkSvrNm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SvrNm", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SvrNm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SvrNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SvrNm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DbNm", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DbNm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DbNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DbNm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RanAsUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RanAsUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RanAsUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RanAsUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Created", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Created", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_compatibility_level", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "compatibility_level", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_compatibility_level", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "compatibility_level", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_read_committed_snapshot_on", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_read_committed_snapshot_on", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_read_committed_snapshot_on", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_read_committed_snapshot_on", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_trustworthy_on", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_trustworthy_on", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_trustworthy_on", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_trustworthy_on", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_db_chaining_on", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_db_chaining_on", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_db_chaining_on", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_db_chaining_on", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_fulltext_enabled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_fulltext_enabled", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_fulltext_enabled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_fulltext_enabled", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_numeric_roundabort_on", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_numeric_roundabort_on", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_numeric_roundabort_on", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_numeric_roundabort_on", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_arithabort_on", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_arithabort_on", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_arithabort_on", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_arithabort_on", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_master_key_encrypted_by_server", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_master_key_encrypted_by_server", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_master_key_encrypted_by_server", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_master_key_encrypted_by_server", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_read_only", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_read_only", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_read_only", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_read_only", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_cdc_enabled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_cdc_enabled", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_cdc_enabled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_cdc_enabled", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_query_store_on", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_query_store_on", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_query_store_on", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_query_store_on", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_delayed_durability_desc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "delayed_durability_desc", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_delayed_durability_desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "delayed_durability_desc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_recovery_model_desc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "recovery_model_desc", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_recovery_model_desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "recovery_model_desc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_snapshot_isolation_state_desc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "snapshot_isolation_state_desc", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_snapshot_isolation_state_desc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "snapshot_isolation_state_desc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_collation_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "collation_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_collation_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "collation_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Skip", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Skip", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Skip", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Skip", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PingFailed", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PingFailed", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PingFailed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PingFailed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NoLongerExists", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoLongerExists", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NoLongerExists", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoLongerExists", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConnectionAttemptTimedOut", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConnectionAttemptTimedOut", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConnectionAttemptTimedOut", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConnectionAttemptTimedOut", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ClientFailedToMakeAConnection", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientFailedToMakeAConnection", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClientFailedToMakeAConnection", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientFailedToMakeAConnection", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NoAccessForADUserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoAccessForADUserId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NoAccessForADUserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoAccessForADUserId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LongTimeoutAndFailedToConnect", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LongTimeoutAndFailedToConnect", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LongTimeoutAndFailedToConnect", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LongTimeoutAndFailedToConnect", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RemoteTimeStampAtCaptureOFFSET", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RemoteTimeStampAtCaptureOFFSET", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RemoteTimeStampAtCaptureOFFSET", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RemoteTimeStampAtCaptureOFFSET", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RemoteTimeStampAtCaptureUTC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RemoteTimeStampAtCaptureUTC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RemoteTimeStampAtCaptureUTC", global::System.Data.SqlDbType.DateTime2, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RemoteTimeStampAtCaptureUTC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Captured", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Captured", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CapturedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CapturedBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CapturedBy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CapturedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CapturedOnSvr", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CapturedOnSvr", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CapturedOnSvr", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CapturedOnSvr", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CapturedOnDb", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CapturedOnDb", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CapturedOnDb", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CapturedOnDb", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CapturingProcess", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CapturingProcess", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CapturingProcessVersion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CapturingProcessVersion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CapturingProcessVersion", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CapturingProcessVersion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DbId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "DbId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QuickInterface.Properties.Settings.Default.DBABnch_LOCALConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT DbId, DbScannedID, SvrToScanID, LinkSvrNm, SvrNm, DbNm, RanAsUser, Created, compatibility_level, is_read_committed_snapshot_on, is_trustworthy_on, is_db_chaining_on, is_fulltext_enabled, is_numeric_roundabort_on, is_arithabort_on, is_master_key_encrypted_by_server, is_read_only, is_cdc_enabled, is_query_store_on, delayed_durability_desc, recovery_model_desc, snapshot_isolation_state_desc, collation_name, Skip, PingFailed, NoLongerExists, ConnectionAttemptTimedOut, ClientFailedToMakeAConnection, NoAccessForADUserId, LongTimeoutAndFailedToConnect, RemoteTimeStampAtCaptureOFFSET, RemoteTimeStampAtCaptureUTC, Captured, CapturedBy, CapturedOnSvr, CapturedOnDb, CapturingProcess, CapturingProcessVersion FROM InfrastructureForSQLServer.Databases";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DBABnch_LOCALDataSet.DatabasesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DBABnch_LOCALDataSet.DatabasesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DBABnch_LOCALDataSet.DatabasesDataTable dataTable = new DBABnch_LOCALDataSet.DatabasesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DBABnch_LOCALDataSet.DatabasesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DBABnch_LOCALDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Databases");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_DbId, 
                    int Original_DbScannedID, 
                    int Original_SvrToScanID, 
                    string Original_LinkSvrNm, 
                    string Original_SvrNm, 
                    string Original_DbNm, 
                    string Original_RanAsUser, 
                    global::System.Nullable<global::System.DateTime> Original_Created, 
                    global::System.Nullable<int> Original_compatibility_level, 
                    global::System.Nullable<bool> Original_is_read_committed_snapshot_on, 
                    global::System.Nullable<bool> Original_is_trustworthy_on, 
                    global::System.Nullable<bool> Original_is_db_chaining_on, 
                    global::System.Nullable<bool> Original_is_fulltext_enabled, 
                    global::System.Nullable<bool> Original_is_numeric_roundabort_on, 
                    global::System.Nullable<bool> Original_is_arithabort_on, 
                    global::System.Nullable<bool> Original_is_master_key_encrypted_by_server, 
                    global::System.Nullable<bool> Original_is_read_only, 
                    global::System.Nullable<bool> Original_is_cdc_enabled, 
                    global::System.Nullable<bool> Original_is_query_store_on, 
                    string Original_delayed_durability_desc, 
                    string Original_recovery_model_desc, 
                    string Original_snapshot_isolation_state_desc, 
                    string Original_collation_name, 
                    global::System.Nullable<bool> Original_Skip, 
                    global::System.Nullable<bool> Original_PingFailed, 
                    global::System.Nullable<bool> Original_NoLongerExists, 
                    global::System.Nullable<bool> Original_ConnectionAttemptTimedOut, 
                    global::System.Nullable<bool> Original_ClientFailedToMakeAConnection, 
                    global::System.Nullable<int> Original_NoAccessForADUserId, 
                    global::System.Nullable<bool> Original_LongTimeoutAndFailedToConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_RemoteTimeStampAtCaptureOFFSET, 
                    global::System.Nullable<global::System.DateTime> Original_RemoteTimeStampAtCaptureUTC, 
                    System.DateTimeOffset Original_Captured, 
                    string Original_CapturedBy, 
                    string Original_CapturedOnSvr, 
                    string Original_CapturedOnDb, 
                    string Original_CapturingProcess, 
                    global::System.Nullable<global::System.DateTime> Original_CapturingProcessVersion) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_DbId));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_DbScannedID));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_SvrToScanID));
            if ((Original_LinkSvrNm == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_LinkSvrNm));
            }
            if ((Original_SvrNm == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_SvrNm));
            }
            if ((Original_DbNm == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_DbNm));
            }
            if ((Original_RanAsUser == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_RanAsUser));
            }
            if ((Original_Created.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_Created.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_compatibility_level.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_compatibility_level.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_is_read_committed_snapshot_on.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((bool)(Original_is_read_committed_snapshot_on.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_is_trustworthy_on.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((bool)(Original_is_trustworthy_on.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_is_db_chaining_on.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((bool)(Original_is_db_chaining_on.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_is_fulltext_enabled.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((bool)(Original_is_fulltext_enabled.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_is_numeric_roundabort_on.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((bool)(Original_is_numeric_roundabort_on.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_is_arithabort_on.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((bool)(Original_is_arithabort_on.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_is_master_key_encrypted_by_server.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((bool)(Original_is_master_key_encrypted_by_server.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_is_read_only.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((bool)(Original_is_read_only.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_is_cdc_enabled.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((bool)(Original_is_cdc_enabled.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_is_query_store_on.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((bool)(Original_is_query_store_on.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_delayed_durability_desc == null)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((string)(Original_delayed_durability_desc));
            }
            if ((Original_recovery_model_desc == null)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((string)(Original_recovery_model_desc));
            }
            if ((Original_snapshot_isolation_state_desc == null)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_snapshot_isolation_state_desc));
            }
            if ((Original_collation_name == null)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((string)(Original_collation_name));
            }
            if ((Original_Skip.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((bool)(Original_Skip.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_PingFailed.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((bool)(Original_PingFailed.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_NoLongerExists.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((bool)(Original_NoLongerExists.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_ConnectionAttemptTimedOut.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((bool)(Original_ConnectionAttemptTimedOut.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_ClientFailedToMakeAConnection.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((bool)(Original_ClientFailedToMakeAConnection.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_NoAccessForADUserId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((int)(Original_NoAccessForADUserId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_LongTimeoutAndFailedToConnect.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((bool)(Original_LongTimeoutAndFailedToConnect.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_RemoteTimeStampAtCaptureOFFSET.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((System.DateTimeOffset)(Original_RemoteTimeStampAtCaptureOFFSET.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_RemoteTimeStampAtCaptureUTC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((System.DateTime)(Original_RemoteTimeStampAtCaptureUTC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[61].Value = ((System.DateTimeOffset)(Original_Captured));
            if ((Original_CapturedBy == null)) {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[63].Value = ((string)(Original_CapturedBy));
            }
            if ((Original_CapturedOnSvr == null)) {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[65].Value = ((string)(Original_CapturedOnSvr));
            }
            if ((Original_CapturedOnDb == null)) {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[67].Value = ((string)(Original_CapturedOnDb));
            }
            if ((Original_CapturingProcess == null)) {
                throw new global::System.ArgumentNullException("Original_CapturingProcess");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((string)(Original_CapturingProcess));
            }
            if ((Original_CapturingProcessVersion.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[70].Value = ((System.DateTime)(Original_CapturingProcessVersion.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int DbScannedID, 
                    int SvrToScanID, 
                    string LinkSvrNm, 
                    string SvrNm, 
                    string DbNm, 
                    string RanAsUser, 
                    global::System.Nullable<global::System.DateTime> Created, 
                    global::System.Nullable<int> compatibility_level, 
                    global::System.Nullable<bool> is_read_committed_snapshot_on, 
                    global::System.Nullable<bool> is_trustworthy_on, 
                    global::System.Nullable<bool> is_db_chaining_on, 
                    global::System.Nullable<bool> is_fulltext_enabled, 
                    global::System.Nullable<bool> is_numeric_roundabort_on, 
                    global::System.Nullable<bool> is_arithabort_on, 
                    global::System.Nullable<bool> is_master_key_encrypted_by_server, 
                    global::System.Nullable<bool> is_read_only, 
                    global::System.Nullable<bool> is_cdc_enabled, 
                    global::System.Nullable<bool> is_query_store_on, 
                    string delayed_durability_desc, 
                    string recovery_model_desc, 
                    string snapshot_isolation_state_desc, 
                    string collation_name, 
                    global::System.Nullable<bool> Skip, 
                    global::System.Nullable<bool> PingFailed, 
                    global::System.Nullable<bool> NoLongerExists, 
                    global::System.Nullable<bool> ConnectionAttemptTimedOut, 
                    global::System.Nullable<bool> ClientFailedToMakeAConnection, 
                    global::System.Nullable<int> NoAccessForADUserId, 
                    global::System.Nullable<bool> LongTimeoutAndFailedToConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> RemoteTimeStampAtCaptureOFFSET, 
                    global::System.Nullable<global::System.DateTime> RemoteTimeStampAtCaptureUTC, 
                    System.DateTimeOffset Captured, 
                    string CapturedBy, 
                    string CapturedOnSvr, 
                    string CapturedOnDb, 
                    string CapturingProcess, 
                    global::System.Nullable<global::System.DateTime> CapturingProcessVersion) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(DbScannedID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(SvrToScanID));
            if ((LinkSvrNm == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(LinkSvrNm));
            }
            if ((SvrNm == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(SvrNm));
            }
            if ((DbNm == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(DbNm));
            }
            if ((RanAsUser == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(RanAsUser));
            }
            if ((Created.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(Created.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((compatibility_level.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(compatibility_level.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((is_read_committed_snapshot_on.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((bool)(is_read_committed_snapshot_on.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((is_trustworthy_on.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((bool)(is_trustworthy_on.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((is_db_chaining_on.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((bool)(is_db_chaining_on.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((is_fulltext_enabled.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((bool)(is_fulltext_enabled.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((is_numeric_roundabort_on.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((bool)(is_numeric_roundabort_on.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((is_arithabort_on.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((bool)(is_arithabort_on.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((is_master_key_encrypted_by_server.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((bool)(is_master_key_encrypted_by_server.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((is_read_only.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((bool)(is_read_only.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((is_cdc_enabled.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((bool)(is_cdc_enabled.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((is_query_store_on.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((bool)(is_query_store_on.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((delayed_durability_desc == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(delayed_durability_desc));
            }
            if ((recovery_model_desc == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(recovery_model_desc));
            }
            if ((snapshot_isolation_state_desc == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(snapshot_isolation_state_desc));
            }
            if ((collation_name == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(collation_name));
            }
            if ((Skip.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((bool)(Skip.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((PingFailed.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((bool)(PingFailed.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((NoLongerExists.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((bool)(NoLongerExists.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((ConnectionAttemptTimedOut.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((bool)(ConnectionAttemptTimedOut.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((ClientFailedToMakeAConnection.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((bool)(ClientFailedToMakeAConnection.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((NoAccessForADUserId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((int)(NoAccessForADUserId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((LongTimeoutAndFailedToConnect.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((bool)(LongTimeoutAndFailedToConnect.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((RemoteTimeStampAtCaptureOFFSET.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((System.DateTimeOffset)(RemoteTimeStampAtCaptureOFFSET.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((RemoteTimeStampAtCaptureUTC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((System.DateTime)(RemoteTimeStampAtCaptureUTC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[31].Value = ((System.DateTimeOffset)(Captured));
            if ((CapturedBy == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(CapturedBy));
            }
            if ((CapturedOnSvr == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(CapturedOnSvr));
            }
            if ((CapturedOnDb == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(CapturedOnDb));
            }
            if ((CapturingProcess == null)) {
                throw new global::System.ArgumentNullException("CapturingProcess");
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(CapturingProcess));
            }
            if ((CapturingProcessVersion.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((System.DateTime)(CapturingProcessVersion.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int DbScannedID, 
                    int SvrToScanID, 
                    string LinkSvrNm, 
                    string SvrNm, 
                    string DbNm, 
                    string RanAsUser, 
                    global::System.Nullable<global::System.DateTime> Created, 
                    global::System.Nullable<int> compatibility_level, 
                    global::System.Nullable<bool> is_read_committed_snapshot_on, 
                    global::System.Nullable<bool> is_trustworthy_on, 
                    global::System.Nullable<bool> is_db_chaining_on, 
                    global::System.Nullable<bool> is_fulltext_enabled, 
                    global::System.Nullable<bool> is_numeric_roundabort_on, 
                    global::System.Nullable<bool> is_arithabort_on, 
                    global::System.Nullable<bool> is_master_key_encrypted_by_server, 
                    global::System.Nullable<bool> is_read_only, 
                    global::System.Nullable<bool> is_cdc_enabled, 
                    global::System.Nullable<bool> is_query_store_on, 
                    string delayed_durability_desc, 
                    string recovery_model_desc, 
                    string snapshot_isolation_state_desc, 
                    string collation_name, 
                    global::System.Nullable<bool> Skip, 
                    global::System.Nullable<bool> PingFailed, 
                    global::System.Nullable<bool> NoLongerExists, 
                    global::System.Nullable<bool> ConnectionAttemptTimedOut, 
                    global::System.Nullable<bool> ClientFailedToMakeAConnection, 
                    global::System.Nullable<int> NoAccessForADUserId, 
                    global::System.Nullable<bool> LongTimeoutAndFailedToConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> RemoteTimeStampAtCaptureOFFSET, 
                    global::System.Nullable<global::System.DateTime> RemoteTimeStampAtCaptureUTC, 
                    System.DateTimeOffset Captured, 
                    string CapturedBy, 
                    string CapturedOnSvr, 
                    string CapturedOnDb, 
                    string CapturingProcess, 
                    global::System.Nullable<global::System.DateTime> CapturingProcessVersion, 
                    int Original_DbId, 
                    int Original_DbScannedID, 
                    int Original_SvrToScanID, 
                    string Original_LinkSvrNm, 
                    string Original_SvrNm, 
                    string Original_DbNm, 
                    string Original_RanAsUser, 
                    global::System.Nullable<global::System.DateTime> Original_Created, 
                    global::System.Nullable<int> Original_compatibility_level, 
                    global::System.Nullable<bool> Original_is_read_committed_snapshot_on, 
                    global::System.Nullable<bool> Original_is_trustworthy_on, 
                    global::System.Nullable<bool> Original_is_db_chaining_on, 
                    global::System.Nullable<bool> Original_is_fulltext_enabled, 
                    global::System.Nullable<bool> Original_is_numeric_roundabort_on, 
                    global::System.Nullable<bool> Original_is_arithabort_on, 
                    global::System.Nullable<bool> Original_is_master_key_encrypted_by_server, 
                    global::System.Nullable<bool> Original_is_read_only, 
                    global::System.Nullable<bool> Original_is_cdc_enabled, 
                    global::System.Nullable<bool> Original_is_query_store_on, 
                    string Original_delayed_durability_desc, 
                    string Original_recovery_model_desc, 
                    string Original_snapshot_isolation_state_desc, 
                    string Original_collation_name, 
                    global::System.Nullable<bool> Original_Skip, 
                    global::System.Nullable<bool> Original_PingFailed, 
                    global::System.Nullable<bool> Original_NoLongerExists, 
                    global::System.Nullable<bool> Original_ConnectionAttemptTimedOut, 
                    global::System.Nullable<bool> Original_ClientFailedToMakeAConnection, 
                    global::System.Nullable<int> Original_NoAccessForADUserId, 
                    global::System.Nullable<bool> Original_LongTimeoutAndFailedToConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_RemoteTimeStampAtCaptureOFFSET, 
                    global::System.Nullable<global::System.DateTime> Original_RemoteTimeStampAtCaptureUTC, 
                    System.DateTimeOffset Original_Captured, 
                    string Original_CapturedBy, 
                    string Original_CapturedOnSvr, 
                    string Original_CapturedOnDb, 
                    string Original_CapturingProcess, 
                    global::System.Nullable<global::System.DateTime> Original_CapturingProcessVersion, 
                    int DbId) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(DbScannedID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(SvrToScanID));
            if ((LinkSvrNm == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(LinkSvrNm));
            }
            if ((SvrNm == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(SvrNm));
            }
            if ((DbNm == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(DbNm));
            }
            if ((RanAsUser == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(RanAsUser));
            }
            if ((Created.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Created.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((compatibility_level.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(compatibility_level.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((is_read_committed_snapshot_on.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((bool)(is_read_committed_snapshot_on.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((is_trustworthy_on.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(is_trustworthy_on.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((is_db_chaining_on.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(is_db_chaining_on.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((is_fulltext_enabled.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((bool)(is_fulltext_enabled.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((is_numeric_roundabort_on.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(is_numeric_roundabort_on.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((is_arithabort_on.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((bool)(is_arithabort_on.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((is_master_key_encrypted_by_server.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((bool)(is_master_key_encrypted_by_server.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((is_read_only.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(is_read_only.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((is_cdc_enabled.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((bool)(is_cdc_enabled.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((is_query_store_on.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((bool)(is_query_store_on.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((delayed_durability_desc == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(delayed_durability_desc));
            }
            if ((recovery_model_desc == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(recovery_model_desc));
            }
            if ((snapshot_isolation_state_desc == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(snapshot_isolation_state_desc));
            }
            if ((collation_name == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(collation_name));
            }
            if ((Skip.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((bool)(Skip.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((PingFailed.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((bool)(PingFailed.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((NoLongerExists.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((bool)(NoLongerExists.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((ConnectionAttemptTimedOut.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((bool)(ConnectionAttemptTimedOut.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((ClientFailedToMakeAConnection.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((bool)(ClientFailedToMakeAConnection.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((NoAccessForADUserId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(NoAccessForADUserId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((LongTimeoutAndFailedToConnect.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((bool)(LongTimeoutAndFailedToConnect.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((RemoteTimeStampAtCaptureOFFSET.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((System.DateTimeOffset)(RemoteTimeStampAtCaptureOFFSET.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((RemoteTimeStampAtCaptureUTC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((System.DateTime)(RemoteTimeStampAtCaptureUTC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[31].Value = ((System.DateTimeOffset)(Captured));
            if ((CapturedBy == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(CapturedBy));
            }
            if ((CapturedOnSvr == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(CapturedOnSvr));
            }
            if ((CapturedOnDb == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(CapturedOnDb));
            }
            if ((CapturingProcess == null)) {
                throw new global::System.ArgumentNullException("CapturingProcess");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(CapturingProcess));
            }
            if ((CapturingProcessVersion.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((System.DateTime)(CapturingProcessVersion.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[37].Value = ((int)(Original_DbId));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(Original_DbScannedID));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((int)(Original_SvrToScanID));
            if ((Original_LinkSvrNm == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_LinkSvrNm));
            }
            if ((Original_SvrNm == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_SvrNm));
            }
            if ((Original_DbNm == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_DbNm));
            }
            if ((Original_RanAsUser == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_RanAsUser));
            }
            if ((Original_Created.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((System.DateTime)(Original_Created.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_compatibility_level.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((int)(Original_compatibility_level.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Original_is_read_committed_snapshot_on.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((bool)(Original_is_read_committed_snapshot_on.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Original_is_trustworthy_on.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((bool)(Original_is_trustworthy_on.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Original_is_db_chaining_on.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((bool)(Original_is_db_chaining_on.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Original_is_fulltext_enabled.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((bool)(Original_is_fulltext_enabled.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((Original_is_numeric_roundabort_on.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((bool)(Original_is_numeric_roundabort_on.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Original_is_arithabort_on.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((bool)(Original_is_arithabort_on.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((Original_is_master_key_encrypted_by_server.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((bool)(Original_is_master_key_encrypted_by_server.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((Original_is_read_only.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((bool)(Original_is_read_only.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((Original_is_cdc_enabled.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((bool)(Original_is_cdc_enabled.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((Original_is_query_store_on.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[71].Value = ((bool)(Original_is_query_store_on.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((Original_delayed_durability_desc == null)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(Original_delayed_durability_desc));
            }
            if ((Original_recovery_model_desc == null)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[75].Value = ((string)(Original_recovery_model_desc));
            }
            if ((Original_snapshot_isolation_state_desc == null)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((string)(Original_snapshot_isolation_state_desc));
            }
            if ((Original_collation_name == null)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((string)(Original_collation_name));
            }
            if ((Original_Skip.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((bool)(Original_Skip.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((Original_PingFailed.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[83].Value = ((bool)(Original_PingFailed.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            if ((Original_NoLongerExists.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[85].Value = ((bool)(Original_NoLongerExists.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((Original_ConnectionAttemptTimedOut.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((bool)(Original_ConnectionAttemptTimedOut.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((Original_ClientFailedToMakeAConnection.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((bool)(Original_ClientFailedToMakeAConnection.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((Original_NoAccessForADUserId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[91].Value = ((int)(Original_NoAccessForADUserId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            if ((Original_LongTimeoutAndFailedToConnect.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[93].Value = ((bool)(Original_LongTimeoutAndFailedToConnect.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            if ((Original_RemoteTimeStampAtCaptureOFFSET.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[95].Value = ((System.DateTimeOffset)(Original_RemoteTimeStampAtCaptureOFFSET.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            if ((Original_RemoteTimeStampAtCaptureUTC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[97].Value = ((System.DateTime)(Original_RemoteTimeStampAtCaptureUTC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[98].Value = ((System.DateTimeOffset)(Original_Captured));
            if ((Original_CapturedBy == null)) {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[100].Value = ((string)(Original_CapturedBy));
            }
            if ((Original_CapturedOnSvr == null)) {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[102].Value = ((string)(Original_CapturedOnSvr));
            }
            if ((Original_CapturedOnDb == null)) {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[104].Value = ((string)(Original_CapturedOnDb));
            }
            if ((Original_CapturingProcess == null)) {
                throw new global::System.ArgumentNullException("Original_CapturingProcess");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((string)(Original_CapturingProcess));
            }
            if ((Original_CapturingProcessVersion.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[107].Value = ((System.DateTime)(Original_CapturingProcessVersion.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[108].Value = ((int)(DbId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int DbScannedID, 
                    int SvrToScanID, 
                    string LinkSvrNm, 
                    string SvrNm, 
                    string DbNm, 
                    string RanAsUser, 
                    global::System.Nullable<global::System.DateTime> Created, 
                    global::System.Nullable<int> compatibility_level, 
                    global::System.Nullable<bool> is_read_committed_snapshot_on, 
                    global::System.Nullable<bool> is_trustworthy_on, 
                    global::System.Nullable<bool> is_db_chaining_on, 
                    global::System.Nullable<bool> is_fulltext_enabled, 
                    global::System.Nullable<bool> is_numeric_roundabort_on, 
                    global::System.Nullable<bool> is_arithabort_on, 
                    global::System.Nullable<bool> is_master_key_encrypted_by_server, 
                    global::System.Nullable<bool> is_read_only, 
                    global::System.Nullable<bool> is_cdc_enabled, 
                    global::System.Nullable<bool> is_query_store_on, 
                    string delayed_durability_desc, 
                    string recovery_model_desc, 
                    string snapshot_isolation_state_desc, 
                    string collation_name, 
                    global::System.Nullable<bool> Skip, 
                    global::System.Nullable<bool> PingFailed, 
                    global::System.Nullable<bool> NoLongerExists, 
                    global::System.Nullable<bool> ConnectionAttemptTimedOut, 
                    global::System.Nullable<bool> ClientFailedToMakeAConnection, 
                    global::System.Nullable<int> NoAccessForADUserId, 
                    global::System.Nullable<bool> LongTimeoutAndFailedToConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> RemoteTimeStampAtCaptureOFFSET, 
                    global::System.Nullable<global::System.DateTime> RemoteTimeStampAtCaptureUTC, 
                    System.DateTimeOffset Captured, 
                    string CapturedBy, 
                    string CapturedOnSvr, 
                    string CapturedOnDb, 
                    string CapturingProcess, 
                    global::System.Nullable<global::System.DateTime> CapturingProcessVersion, 
                    int Original_DbId, 
                    int Original_DbScannedID, 
                    int Original_SvrToScanID, 
                    string Original_LinkSvrNm, 
                    string Original_SvrNm, 
                    string Original_DbNm, 
                    string Original_RanAsUser, 
                    global::System.Nullable<global::System.DateTime> Original_Created, 
                    global::System.Nullable<int> Original_compatibility_level, 
                    global::System.Nullable<bool> Original_is_read_committed_snapshot_on, 
                    global::System.Nullable<bool> Original_is_trustworthy_on, 
                    global::System.Nullable<bool> Original_is_db_chaining_on, 
                    global::System.Nullable<bool> Original_is_fulltext_enabled, 
                    global::System.Nullable<bool> Original_is_numeric_roundabort_on, 
                    global::System.Nullable<bool> Original_is_arithabort_on, 
                    global::System.Nullable<bool> Original_is_master_key_encrypted_by_server, 
                    global::System.Nullable<bool> Original_is_read_only, 
                    global::System.Nullable<bool> Original_is_cdc_enabled, 
                    global::System.Nullable<bool> Original_is_query_store_on, 
                    string Original_delayed_durability_desc, 
                    string Original_recovery_model_desc, 
                    string Original_snapshot_isolation_state_desc, 
                    string Original_collation_name, 
                    global::System.Nullable<bool> Original_Skip, 
                    global::System.Nullable<bool> Original_PingFailed, 
                    global::System.Nullable<bool> Original_NoLongerExists, 
                    global::System.Nullable<bool> Original_ConnectionAttemptTimedOut, 
                    global::System.Nullable<bool> Original_ClientFailedToMakeAConnection, 
                    global::System.Nullable<int> Original_NoAccessForADUserId, 
                    global::System.Nullable<bool> Original_LongTimeoutAndFailedToConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_RemoteTimeStampAtCaptureOFFSET, 
                    global::System.Nullable<global::System.DateTime> Original_RemoteTimeStampAtCaptureUTC, 
                    System.DateTimeOffset Original_Captured, 
                    string Original_CapturedBy, 
                    string Original_CapturedOnSvr, 
                    string Original_CapturedOnDb, 
                    string Original_CapturingProcess, 
                    global::System.Nullable<global::System.DateTime> Original_CapturingProcessVersion) {
            return this.Update(DbScannedID, SvrToScanID, LinkSvrNm, SvrNm, DbNm, RanAsUser, Created, compatibility_level, is_read_committed_snapshot_on, is_trustworthy_on, is_db_chaining_on, is_fulltext_enabled, is_numeric_roundabort_on, is_arithabort_on, is_master_key_encrypted_by_server, is_read_only, is_cdc_enabled, is_query_store_on, delayed_durability_desc, recovery_model_desc, snapshot_isolation_state_desc, collation_name, Skip, PingFailed, NoLongerExists, ConnectionAttemptTimedOut, ClientFailedToMakeAConnection, NoAccessForADUserId, LongTimeoutAndFailedToConnect, RemoteTimeStampAtCaptureOFFSET, RemoteTimeStampAtCaptureUTC, Captured, CapturedBy, CapturedOnSvr, CapturedOnDb, CapturingProcess, CapturingProcessVersion, Original_DbId, Original_DbScannedID, Original_SvrToScanID, Original_LinkSvrNm, Original_SvrNm, Original_DbNm, Original_RanAsUser, Original_Created, Original_compatibility_level, Original_is_read_committed_snapshot_on, Original_is_trustworthy_on, Original_is_db_chaining_on, Original_is_fulltext_enabled, Original_is_numeric_roundabort_on, Original_is_arithabort_on, Original_is_master_key_encrypted_by_server, Original_is_read_only, Original_is_cdc_enabled, Original_is_query_store_on, Original_delayed_durability_desc, Original_recovery_model_desc, Original_snapshot_isolation_state_desc, Original_collation_name, Original_Skip, Original_PingFailed, Original_NoLongerExists, Original_ConnectionAttemptTimedOut, Original_ClientFailedToMakeAConnection, Original_NoAccessForADUserId, Original_LongTimeoutAndFailedToConnect, Original_RemoteTimeStampAtCaptureOFFSET, Original_RemoteTimeStampAtCaptureUTC, Original_Captured, Original_CapturedBy, Original_CapturedOnSvr, Original_CapturedOnDb, Original_CapturingProcess, Original_CapturingProcessVersion, Original_DbId);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DomainsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public DomainsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Domains";
            tableMapping.ColumnMappings.Add("DomainId", "DomainId");
            tableMapping.ColumnMappings.Add("DomainNm", "DomainNm");
            tableMapping.ColumnMappings.Add("DomainType", "DomainType");
            tableMapping.ColumnMappings.Add("ClientId", "ClientId");
            tableMapping.ColumnMappings.Add("FoundInDocument", "FoundInDocument");
            tableMapping.ColumnMappings.Add("NoInfoDueToConnectFailure", "NoInfoDueToConnectFailure");
            tableMapping.ColumnMappings.Add("SkipBecauseLongTimeoutAndFailConnect", "SkipBecauseLongTimeoutAndFailConnect");
            tableMapping.ColumnMappings.Add("SetSkipBecauseLongTimeoutAndFailConnect", "SetSkipBecauseLongTimeoutAndFailConnect");
            tableMapping.ColumnMappings.Add("UnsetSkipBecauseLongTimeoutAndFailConnect", "UnsetSkipBecauseLongTimeoutAndFailConnect");
            tableMapping.ColumnMappings.Add("Purpose", "Purpose");
            tableMapping.ColumnMappings.Add("Comments", "Comments");
            tableMapping.ColumnMappings.Add("SourceId", "SourceId");
            tableMapping.ColumnMappings.Add("Created", "Created");
            tableMapping.ColumnMappings.Add("CreatedBy", "CreatedBy");
            tableMapping.ColumnMappings.Add("Tested", "Tested");
            tableMapping.ColumnMappings.Add("TestedButNoChangeBy", "TestedButNoChangeBy");
            tableMapping.ColumnMappings.Add("Updated", "Updated");
            tableMapping.ColumnMappings.Add("UpdatedBy", "UpdatedBy");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [InfrastructureForNetwork].[Domains] WHERE (([DomainId] = @Original_D" +
                "omainId) AND ([DomainNm] = @Original_DomainNm) AND ((@IsNull_DomainType = 1 AND " +
                "[DomainType] IS NULL) OR ([DomainType] = @Original_DomainType)) AND ([ClientId] " +
                "= @Original_ClientId) AND ((@IsNull_FoundInDocument = 1 AND [FoundInDocument] IS" +
                " NULL) OR ([FoundInDocument] = @Original_FoundInDocument)) AND ((@IsNull_NoInfoD" +
                "ueToConnectFailure = 1 AND [NoInfoDueToConnectFailure] IS NULL) OR ([NoInfoDueTo" +
                "ConnectFailure] = @Original_NoInfoDueToConnectFailure)) AND ((@IsNull_SkipBecaus" +
                "eLongTimeoutAndFailConnect = 1 AND [SkipBecauseLongTimeoutAndFailConnect] IS NUL" +
                "L) OR ([SkipBecauseLongTimeoutAndFailConnect] = @Original_SkipBecauseLongTimeout" +
                "AndFailConnect)) AND ((@IsNull_SetSkipBecauseLongTimeoutAndFailConnect = 1 AND [" +
                "SetSkipBecauseLongTimeoutAndFailConnect] IS NULL) OR ([SetSkipBecauseLongTimeout" +
                "AndFailConnect] = @Original_SetSkipBecauseLongTimeoutAndFailConnect)) AND ((@IsN" +
                "ull_UnsetSkipBecauseLongTimeoutAndFailConnect = 1 AND [UnsetSkipBecauseLongTimeo" +
                "utAndFailConnect] IS NULL) OR ([UnsetSkipBecauseLongTimeoutAndFailConnect] = @Or" +
                "iginal_UnsetSkipBecauseLongTimeoutAndFailConnect)) AND ((@IsNull_Purpose = 1 AND" +
                " [Purpose] IS NULL) OR ([Purpose] = @Original_Purpose)) AND ([SourceId] = @Origi" +
                "nal_SourceId) AND ([Created] = @Original_Created) AND ([CreatedBy] = @Original_C" +
                "reatedBy) AND ((@IsNull_Tested = 1 AND [Tested] IS NULL) OR ([Tested] = @Origina" +
                "l_Tested)) AND ((@IsNull_TestedButNoChangeBy = 1 AND [TestedButNoChangeBy] IS NU" +
                "LL) OR ([TestedButNoChangeBy] = @Original_TestedButNoChangeBy)) AND ([Updated] =" +
                " @Original_Updated) AND ([UpdatedBy] = @Original_UpdatedBy))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DomainId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DomainId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DomainNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DomainNm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DomainType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DomainType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DomainType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DomainType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClientId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FoundInDocument", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FoundInDocument", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FoundInDocument", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FoundInDocument", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NoInfoDueToConnectFailure", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoInfoDueToConnectFailure", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NoInfoDueToConnectFailure", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoInfoDueToConnectFailure", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UnsetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnsetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UnsetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnsetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Purpose", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Purpose", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SourceId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Created", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Tested", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tested", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tested", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tested", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TestedButNoChangeBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestedButNoChangeBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TestedButNoChangeBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestedButNoChangeBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Updated", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Updated", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [InfrastructureForNetwork].[Domains] ([DomainNm], [DomainType], [ClientId], [FoundInDocument], [NoInfoDueToConnectFailure], [SkipBecauseLongTimeoutAndFailConnect], [SetSkipBecauseLongTimeoutAndFailConnect], [UnsetSkipBecauseLongTimeoutAndFailConnect], [Purpose], [Comments], [SourceId], [Created], [CreatedBy], [Tested], [TestedButNoChangeBy], [Updated], [UpdatedBy]) VALUES (@DomainNm, @DomainType, @ClientId, @FoundInDocument, @NoInfoDueToConnectFailure, @SkipBecauseLongTimeoutAndFailConnect, @SetSkipBecauseLongTimeoutAndFailConnect, @UnsetSkipBecauseLongTimeoutAndFailConnect, @Purpose, @Comments, @SourceId, @Created, @CreatedBy, @Tested, @TestedButNoChangeBy, @Updated, @UpdatedBy);
SELECT DomainId, DomainNm, DomainType, ClientId, FoundInDocument, NoInfoDueToConnectFailure, SkipBecauseLongTimeoutAndFailConnect, SetSkipBecauseLongTimeoutAndFailConnect, UnsetSkipBecauseLongTimeoutAndFailConnect, Purpose, Comments, SourceId, Created, CreatedBy, Tested, TestedButNoChangeBy, Updated, UpdatedBy FROM InfrastructureForNetwork.Domains WHERE (DomainId = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DomainNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DomainNm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DomainType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DomainType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClientId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FoundInDocument", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FoundInDocument", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NoInfoDueToConnectFailure", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoInfoDueToConnectFailure", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UnsetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnsetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comments", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comments", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SourceId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Created", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tested", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tested", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TestedButNoChangeBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestedButNoChangeBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Updated", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Updated", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [InfrastructureForNetwork].[Domains] SET [DomainNm] = @DomainNm, [DomainTy" +
                "pe] = @DomainType, [ClientId] = @ClientId, [FoundInDocument] = @FoundInDocument," +
                " [NoInfoDueToConnectFailure] = @NoInfoDueToConnectFailure, [SkipBecauseLongTimeo" +
                "utAndFailConnect] = @SkipBecauseLongTimeoutAndFailConnect, [SetSkipBecauseLongTi" +
                "meoutAndFailConnect] = @SetSkipBecauseLongTimeoutAndFailConnect, [UnsetSkipBecau" +
                "seLongTimeoutAndFailConnect] = @UnsetSkipBecauseLongTimeoutAndFailConnect, [Purp" +
                "ose] = @Purpose, [Comments] = @Comments, [SourceId] = @SourceId, [Created] = @Cr" +
                "eated, [CreatedBy] = @CreatedBy, [Tested] = @Tested, [TestedButNoChangeBy] = @Te" +
                "stedButNoChangeBy, [Updated] = @Updated, [UpdatedBy] = @UpdatedBy WHERE (([Domai" +
                "nId] = @Original_DomainId) AND ([DomainNm] = @Original_DomainNm) AND ((@IsNull_D" +
                "omainType = 1 AND [DomainType] IS NULL) OR ([DomainType] = @Original_DomainType)" +
                ") AND ([ClientId] = @Original_ClientId) AND ((@IsNull_FoundInDocument = 1 AND [F" +
                "oundInDocument] IS NULL) OR ([FoundInDocument] = @Original_FoundInDocument)) AND" +
                " ((@IsNull_NoInfoDueToConnectFailure = 1 AND [NoInfoDueToConnectFailure] IS NULL" +
                ") OR ([NoInfoDueToConnectFailure] = @Original_NoInfoDueToConnectFailure)) AND ((" +
                "@IsNull_SkipBecauseLongTimeoutAndFailConnect = 1 AND [SkipBecauseLongTimeoutAndF" +
                "ailConnect] IS NULL) OR ([SkipBecauseLongTimeoutAndFailConnect] = @Original_Skip" +
                "BecauseLongTimeoutAndFailConnect)) AND ((@IsNull_SetSkipBecauseLongTimeoutAndFai" +
                "lConnect = 1 AND [SetSkipBecauseLongTimeoutAndFailConnect] IS NULL) OR ([SetSkip" +
                "BecauseLongTimeoutAndFailConnect] = @Original_SetSkipBecauseLongTimeoutAndFailCo" +
                "nnect)) AND ((@IsNull_UnsetSkipBecauseLongTimeoutAndFailConnect = 1 AND [UnsetSk" +
                "ipBecauseLongTimeoutAndFailConnect] IS NULL) OR ([UnsetSkipBecauseLongTimeoutAnd" +
                "FailConnect] = @Original_UnsetSkipBecauseLongTimeoutAndFailConnect)) AND ((@IsNu" +
                "ll_Purpose = 1 AND [Purpose] IS NULL) OR ([Purpose] = @Original_Purpose)) AND ([" +
                "SourceId] = @Original_SourceId) AND ([Created] = @Original_Created) AND ([Create" +
                "dBy] = @Original_CreatedBy) AND ((@IsNull_Tested = 1 AND [Tested] IS NULL) OR ([" +
                "Tested] = @Original_Tested)) AND ((@IsNull_TestedButNoChangeBy = 1 AND [TestedBu" +
                "tNoChangeBy] IS NULL) OR ([TestedButNoChangeBy] = @Original_TestedButNoChangeBy)" +
                ") AND ([Updated] = @Original_Updated) AND ([UpdatedBy] = @Original_UpdatedBy));\r" +
                "\nSELECT DomainId, DomainNm, DomainType, ClientId, FoundInDocument, NoInfoDueToCo" +
                "nnectFailure, SkipBecauseLongTimeoutAndFailConnect, SetSkipBecauseLongTimeoutAnd" +
                "FailConnect, UnsetSkipBecauseLongTimeoutAndFailConnect, Purpose, Comments, Sourc" +
                "eId, Created, CreatedBy, Tested, TestedButNoChangeBy, Updated, UpdatedBy FROM In" +
                "frastructureForNetwork.Domains WHERE (DomainId = @DomainId)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DomainNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DomainNm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DomainType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DomainType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClientId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FoundInDocument", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FoundInDocument", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NoInfoDueToConnectFailure", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoInfoDueToConnectFailure", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UnsetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnsetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comments", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comments", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SourceId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Created", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tested", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tested", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TestedButNoChangeBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestedButNoChangeBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Updated", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Updated", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DomainId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DomainId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DomainNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DomainNm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DomainType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DomainType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DomainType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DomainType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClientId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FoundInDocument", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FoundInDocument", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FoundInDocument", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FoundInDocument", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NoInfoDueToConnectFailure", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoInfoDueToConnectFailure", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NoInfoDueToConnectFailure", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoInfoDueToConnectFailure", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UnsetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnsetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UnsetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnsetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Purpose", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Purpose", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SourceId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Created", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Tested", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tested", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tested", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tested", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TestedButNoChangeBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestedButNoChangeBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TestedButNoChangeBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestedButNoChangeBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Updated", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Updated", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DomainId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "DomainId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QuickInterface.Properties.Settings.Default.DBABnch_LOCALConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT DomainId, DomainNm, DomainType, ClientId, FoundInDocument, NoInfoDueToConnectFailure, SkipBecauseLongTimeoutAndFailConnect, SetSkipBecauseLongTimeoutAndFailConnect, UnsetSkipBecauseLongTimeoutAndFailConnect, Purpose, Comments, SourceId, Created, CreatedBy, Tested, TestedButNoChangeBy, Updated, UpdatedBy FROM InfrastructureForNetwork.Domains";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DBABnch_LOCALDataSet.DomainsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DBABnch_LOCALDataSet.DomainsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DBABnch_LOCALDataSet.DomainsDataTable dataTable = new DBABnch_LOCALDataSet.DomainsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DBABnch_LOCALDataSet.DomainsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DBABnch_LOCALDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Domains");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_DomainId, 
                    string Original_DomainNm, 
                    string Original_DomainType, 
                    int Original_ClientId, 
                    global::System.Nullable<bool> Original_FoundInDocument, 
                    global::System.Nullable<bool> Original_NoInfoDueToConnectFailure, 
                    global::System.Nullable<bool> Original_SkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_SetSkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_UnsetSkipBecauseLongTimeoutAndFailConnect, 
                    string Original_Purpose, 
                    int Original_SourceId, 
                    System.DateTimeOffset Original_Created, 
                    int Original_CreatedBy, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_Tested, 
                    global::System.Nullable<int> Original_TestedButNoChangeBy, 
                    System.DateTimeOffset Original_Updated, 
                    int Original_UpdatedBy) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_DomainId));
            if ((Original_DomainNm == null)) {
                throw new global::System.ArgumentNullException("Original_DomainNm");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_DomainNm));
            }
            if ((Original_DomainType == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_DomainType));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_ClientId));
            if ((Original_FoundInDocument.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((bool)(Original_FoundInDocument.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_NoInfoDueToConnectFailure.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((bool)(Original_NoInfoDueToConnectFailure.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_SkipBecauseLongTimeoutAndFailConnect.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((bool)(Original_SkipBecauseLongTimeoutAndFailConnect.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_SetSkipBecauseLongTimeoutAndFailConnect.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTimeOffset)(Original_SetSkipBecauseLongTimeoutAndFailConnect.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_UnsetSkipBecauseLongTimeoutAndFailConnect.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((System.DateTimeOffset)(Original_UnsetSkipBecauseLongTimeoutAndFailConnect.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_Purpose == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_Purpose));
            }
            this.Adapter.DeleteCommand.Parameters[17].Value = ((int)(Original_SourceId));
            this.Adapter.DeleteCommand.Parameters[18].Value = ((System.DateTimeOffset)(Original_Created));
            this.Adapter.DeleteCommand.Parameters[19].Value = ((int)(Original_CreatedBy));
            if ((Original_Tested.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((System.DateTimeOffset)(Original_Tested.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_TestedButNoChangeBy.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((int)(Original_TestedButNoChangeBy.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[24].Value = ((System.DateTimeOffset)(Original_Updated));
            this.Adapter.DeleteCommand.Parameters[25].Value = ((int)(Original_UpdatedBy));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string DomainNm, 
                    string DomainType, 
                    int ClientId, 
                    global::System.Nullable<bool> FoundInDocument, 
                    global::System.Nullable<bool> NoInfoDueToConnectFailure, 
                    global::System.Nullable<bool> SkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> SetSkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> UnsetSkipBecauseLongTimeoutAndFailConnect, 
                    string Purpose, 
                    string Comments, 
                    int SourceId, 
                    System.DateTimeOffset Created, 
                    int CreatedBy, 
                    global::System.Nullable<global::System.DateTimeOffset> Tested, 
                    global::System.Nullable<int> TestedButNoChangeBy, 
                    System.DateTimeOffset Updated, 
                    int UpdatedBy) {
            if ((DomainNm == null)) {
                throw new global::System.ArgumentNullException("DomainNm");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(DomainNm));
            }
            if ((DomainType == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(DomainType));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(ClientId));
            if ((FoundInDocument.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((bool)(FoundInDocument.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((NoInfoDueToConnectFailure.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(NoInfoDueToConnectFailure.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((SkipBecauseLongTimeoutAndFailConnect.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((bool)(SkipBecauseLongTimeoutAndFailConnect.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((SetSkipBecauseLongTimeoutAndFailConnect.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTimeOffset)(SetSkipBecauseLongTimeoutAndFailConnect.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((UnsetSkipBecauseLongTimeoutAndFailConnect.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTimeOffset)(UnsetSkipBecauseLongTimeoutAndFailConnect.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Purpose == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Purpose));
            }
            if ((Comments == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Comments));
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((int)(SourceId));
            this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTimeOffset)(Created));
            this.Adapter.InsertCommand.Parameters[12].Value = ((int)(CreatedBy));
            if ((Tested.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTimeOffset)(Tested.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((TestedButNoChangeBy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((int)(TestedButNoChangeBy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[15].Value = ((System.DateTimeOffset)(Updated));
            this.Adapter.InsertCommand.Parameters[16].Value = ((int)(UpdatedBy));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string DomainNm, 
                    string DomainType, 
                    int ClientId, 
                    global::System.Nullable<bool> FoundInDocument, 
                    global::System.Nullable<bool> NoInfoDueToConnectFailure, 
                    global::System.Nullable<bool> SkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> SetSkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> UnsetSkipBecauseLongTimeoutAndFailConnect, 
                    string Purpose, 
                    string Comments, 
                    int SourceId, 
                    System.DateTimeOffset Created, 
                    int CreatedBy, 
                    global::System.Nullable<global::System.DateTimeOffset> Tested, 
                    global::System.Nullable<int> TestedButNoChangeBy, 
                    System.DateTimeOffset Updated, 
                    int UpdatedBy, 
                    int Original_DomainId, 
                    string Original_DomainNm, 
                    string Original_DomainType, 
                    int Original_ClientId, 
                    global::System.Nullable<bool> Original_FoundInDocument, 
                    global::System.Nullable<bool> Original_NoInfoDueToConnectFailure, 
                    global::System.Nullable<bool> Original_SkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_SetSkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_UnsetSkipBecauseLongTimeoutAndFailConnect, 
                    string Original_Purpose, 
                    int Original_SourceId, 
                    System.DateTimeOffset Original_Created, 
                    int Original_CreatedBy, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_Tested, 
                    global::System.Nullable<int> Original_TestedButNoChangeBy, 
                    System.DateTimeOffset Original_Updated, 
                    int Original_UpdatedBy, 
                    int DomainId) {
            if ((DomainNm == null)) {
                throw new global::System.ArgumentNullException("DomainNm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(DomainNm));
            }
            if ((DomainType == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(DomainType));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(ClientId));
            if ((FoundInDocument.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((bool)(FoundInDocument.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((NoInfoDueToConnectFailure.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(NoInfoDueToConnectFailure.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((SkipBecauseLongTimeoutAndFailConnect.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(SkipBecauseLongTimeoutAndFailConnect.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((SetSkipBecauseLongTimeoutAndFailConnect.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTimeOffset)(SetSkipBecauseLongTimeoutAndFailConnect.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((UnsetSkipBecauseLongTimeoutAndFailConnect.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTimeOffset)(UnsetSkipBecauseLongTimeoutAndFailConnect.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Purpose == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Purpose));
            }
            if ((Comments == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Comments));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(SourceId));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTimeOffset)(Created));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(CreatedBy));
            if ((Tested.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTimeOffset)(Tested.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((TestedButNoChangeBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(TestedButNoChangeBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTimeOffset)(Updated));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(UpdatedBy));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_DomainId));
            if ((Original_DomainNm == null)) {
                throw new global::System.ArgumentNullException("Original_DomainNm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_DomainNm));
            }
            if ((Original_DomainType == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_DomainType));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Original_ClientId));
            if ((Original_FoundInDocument.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((bool)(Original_FoundInDocument.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_NoInfoDueToConnectFailure.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((bool)(Original_NoInfoDueToConnectFailure.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_SkipBecauseLongTimeoutAndFailConnect.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((bool)(Original_SkipBecauseLongTimeoutAndFailConnect.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_SetSkipBecauseLongTimeoutAndFailConnect.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((System.DateTimeOffset)(Original_SetSkipBecauseLongTimeoutAndFailConnect.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_UnsetSkipBecauseLongTimeoutAndFailConnect.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((System.DateTimeOffset)(Original_UnsetSkipBecauseLongTimeoutAndFailConnect.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_Purpose == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_Purpose));
            }
            this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(Original_SourceId));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((System.DateTimeOffset)(Original_Created));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(Original_CreatedBy));
            if ((Original_Tested.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((System.DateTimeOffset)(Original_Tested.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_TestedButNoChangeBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((int)(Original_TestedButNoChangeBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[41].Value = ((System.DateTimeOffset)(Original_Updated));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((int)(Original_UpdatedBy));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((int)(DomainId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string DomainNm, 
                    string DomainType, 
                    int ClientId, 
                    global::System.Nullable<bool> FoundInDocument, 
                    global::System.Nullable<bool> NoInfoDueToConnectFailure, 
                    global::System.Nullable<bool> SkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> SetSkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> UnsetSkipBecauseLongTimeoutAndFailConnect, 
                    string Purpose, 
                    string Comments, 
                    int SourceId, 
                    System.DateTimeOffset Created, 
                    int CreatedBy, 
                    global::System.Nullable<global::System.DateTimeOffset> Tested, 
                    global::System.Nullable<int> TestedButNoChangeBy, 
                    System.DateTimeOffset Updated, 
                    int UpdatedBy, 
                    int Original_DomainId, 
                    string Original_DomainNm, 
                    string Original_DomainType, 
                    int Original_ClientId, 
                    global::System.Nullable<bool> Original_FoundInDocument, 
                    global::System.Nullable<bool> Original_NoInfoDueToConnectFailure, 
                    global::System.Nullable<bool> Original_SkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_SetSkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_UnsetSkipBecauseLongTimeoutAndFailConnect, 
                    string Original_Purpose, 
                    int Original_SourceId, 
                    System.DateTimeOffset Original_Created, 
                    int Original_CreatedBy, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_Tested, 
                    global::System.Nullable<int> Original_TestedButNoChangeBy, 
                    System.DateTimeOffset Original_Updated, 
                    int Original_UpdatedBy) {
            return this.Update(DomainNm, DomainType, ClientId, FoundInDocument, NoInfoDueToConnectFailure, SkipBecauseLongTimeoutAndFailConnect, SetSkipBecauseLongTimeoutAndFailConnect, UnsetSkipBecauseLongTimeoutAndFailConnect, Purpose, Comments, SourceId, Created, CreatedBy, Tested, TestedButNoChangeBy, Updated, UpdatedBy, Original_DomainId, Original_DomainNm, Original_DomainType, Original_ClientId, Original_FoundInDocument, Original_NoInfoDueToConnectFailure, Original_SkipBecauseLongTimeoutAndFailConnect, Original_SetSkipBecauseLongTimeoutAndFailConnect, Original_UnsetSkipBecauseLongTimeoutAndFailConnect, Original_Purpose, Original_SourceId, Original_Created, Original_CreatedBy, Original_Tested, Original_TestedButNoChangeBy, Original_Updated, Original_UpdatedBy, Original_DomainId);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ServerAliasesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ServerAliasesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ServerAliases";
            tableMapping.ColumnMappings.Add("AliasId", "AliasId");
            tableMapping.ColumnMappings.Add("AliasNm", "AliasNm");
            tableMapping.ColumnMappings.Add("AliasType", "AliasType");
            tableMapping.ColumnMappings.Add("IsSQLConfiguration", "IsSQLConfiguration");
            tableMapping.ColumnMappings.Add("IsDSNAlias", "IsDSNAlias");
            tableMapping.ColumnMappings.Add("IsLnkSvrEntry", "IsLnkSvrEntry");
            tableMapping.ColumnMappings.Add("FoundOnServerId", "FoundOnServerId");
            tableMapping.ColumnMappings.Add("PointsToServerId", "PointsToServerId");
            tableMapping.ColumnMappings.Add("CreatedForApp", "CreatedForApp");
            tableMapping.ColumnMappings.Add("CreatedForDBAConvenience", "CreatedForDBAConvenience");
            tableMapping.ColumnMappings.Add("FoundInDocument", "FoundInDocument");
            tableMapping.ColumnMappings.Add("NoInfoDueToConnectFailure", "NoInfoDueToConnectFailure");
            tableMapping.ColumnMappings.Add("SkipBecauseLongTimeoutAndFailConnect", "SkipBecauseLongTimeoutAndFailConnect");
            tableMapping.ColumnMappings.Add("SetSkipBecauseLongTimeoutAndFailConnect", "SetSkipBecauseLongTimeoutAndFailConnect");
            tableMapping.ColumnMappings.Add("UnsetSkipBecauseLongTimeoutAndFailConnect", "UnsetSkipBecauseLongTimeoutAndFailConnect");
            tableMapping.ColumnMappings.Add("TestQueryFailed", "TestQueryFailed");
            tableMapping.ColumnMappings.Add("TestQuerySucceeded", "TestQuerySucceeded");
            tableMapping.ColumnMappings.Add("Purpose", "Purpose");
            tableMapping.ColumnMappings.Add("Comments", "Comments");
            tableMapping.ColumnMappings.Add("SourceId", "SourceId");
            tableMapping.ColumnMappings.Add("Created", "Created");
            tableMapping.ColumnMappings.Add("CreatedBy", "CreatedBy");
            tableMapping.ColumnMappings.Add("Tested", "Tested");
            tableMapping.ColumnMappings.Add("TestedButNoChangeBy", "TestedButNoChangeBy");
            tableMapping.ColumnMappings.Add("Updated", "Updated");
            tableMapping.ColumnMappings.Add("UpdatedBy", "UpdatedBy");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [InfrastructureForSQLServer].[ServerAliases] WHERE (([AliasId] = @Ori" +
                "ginal_AliasId) AND ([AliasNm] = @Original_AliasNm) AND ((@IsNull_AliasType = 1 A" +
                "ND [AliasType] IS NULL) OR ([AliasType] = @Original_AliasType)) AND ((@IsNull_Is" +
                "SQLConfiguration = 1 AND [IsSQLConfiguration] IS NULL) OR ([IsSQLConfiguration] " +
                "= @Original_IsSQLConfiguration)) AND ((@IsNull_IsDSNAlias = 1 AND [IsDSNAlias] I" +
                "S NULL) OR ([IsDSNAlias] = @Original_IsDSNAlias)) AND ((@IsNull_IsLnkSvrEntry = " +
                "1 AND [IsLnkSvrEntry] IS NULL) OR ([IsLnkSvrEntry] = @Original_IsLnkSvrEntry)) A" +
                "ND ((@IsNull_FoundOnServerId = 1 AND [FoundOnServerId] IS NULL) OR ([FoundOnServ" +
                "erId] = @Original_FoundOnServerId)) AND ((@IsNull_PointsToServerId = 1 AND [Poin" +
                "tsToServerId] IS NULL) OR ([PointsToServerId] = @Original_PointsToServerId)) AND" +
                " ((@IsNull_CreatedForApp = 1 AND [CreatedForApp] IS NULL) OR ([CreatedForApp] = " +
                "@Original_CreatedForApp)) AND ((@IsNull_CreatedForDBAConvenience = 1 AND [Create" +
                "dForDBAConvenience] IS NULL) OR ([CreatedForDBAConvenience] = @Original_CreatedF" +
                "orDBAConvenience)) AND ((@IsNull_FoundInDocument = 1 AND [FoundInDocument] IS NU" +
                "LL) OR ([FoundInDocument] = @Original_FoundInDocument)) AND ((@IsNull_NoInfoDueT" +
                "oConnectFailure = 1 AND [NoInfoDueToConnectFailure] IS NULL) OR ([NoInfoDueToCon" +
                "nectFailure] = @Original_NoInfoDueToConnectFailure)) AND ((@IsNull_SkipBecauseLo" +
                "ngTimeoutAndFailConnect = 1 AND [SkipBecauseLongTimeoutAndFailConnect] IS NULL) " +
                "OR ([SkipBecauseLongTimeoutAndFailConnect] = @Original_SkipBecauseLongTimeoutAnd" +
                "FailConnect)) AND ((@IsNull_SetSkipBecauseLongTimeoutAndFailConnect = 1 AND [Set" +
                "SkipBecauseLongTimeoutAndFailConnect] IS NULL) OR ([SetSkipBecauseLongTimeoutAnd" +
                "FailConnect] = @Original_SetSkipBecauseLongTimeoutAndFailConnect)) AND ((@IsNull" +
                "_UnsetSkipBecauseLongTimeoutAndFailConnect = 1 AND [UnsetSkipBecauseLongTimeoutA" +
                "ndFailConnect] IS NULL) OR ([UnsetSkipBecauseLongTimeoutAndFailConnect] = @Origi" +
                "nal_UnsetSkipBecauseLongTimeoutAndFailConnect)) AND ((@IsNull_TestQueryFailed = " +
                "1 AND [TestQueryFailed] IS NULL) OR ([TestQueryFailed] = @Original_TestQueryFail" +
                "ed)) AND ((@IsNull_TestQuerySucceeded = 1 AND [TestQuerySucceeded] IS NULL) OR (" +
                "[TestQuerySucceeded] = @Original_TestQuerySucceeded)) AND ((@IsNull_Purpose = 1 " +
                "AND [Purpose] IS NULL) OR ([Purpose] = @Original_Purpose)) AND ([SourceId] = @Or" +
                "iginal_SourceId) AND ([Created] = @Original_Created) AND ([CreatedBy] = @Origina" +
                "l_CreatedBy) AND ((@IsNull_Tested = 1 AND [Tested] IS NULL) OR ([Tested] = @Orig" +
                "inal_Tested)) AND ((@IsNull_TestedButNoChangeBy = 1 AND [TestedButNoChangeBy] IS" +
                " NULL) OR ([TestedButNoChangeBy] = @Original_TestedButNoChangeBy)) AND ([Updated" +
                "] = @Original_Updated) AND ([UpdatedBy] = @Original_UpdatedBy))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AliasId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AliasId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AliasNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AliasNm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AliasType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AliasType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AliasType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AliasType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsSQLConfiguration", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsSQLConfiguration", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsSQLConfiguration", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsSQLConfiguration", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsDSNAlias", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsDSNAlias", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsDSNAlias", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsDSNAlias", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsLnkSvrEntry", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsLnkSvrEntry", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsLnkSvrEntry", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsLnkSvrEntry", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FoundOnServerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FoundOnServerId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FoundOnServerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FoundOnServerId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PointsToServerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PointsToServerId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PointsToServerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PointsToServerId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CreatedForApp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedForApp", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedForApp", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedForApp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CreatedForDBAConvenience", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedForDBAConvenience", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedForDBAConvenience", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedForDBAConvenience", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FoundInDocument", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FoundInDocument", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FoundInDocument", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FoundInDocument", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NoInfoDueToConnectFailure", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoInfoDueToConnectFailure", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NoInfoDueToConnectFailure", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoInfoDueToConnectFailure", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UnsetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnsetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UnsetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnsetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TestQueryFailed", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestQueryFailed", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TestQueryFailed", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestQueryFailed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TestQuerySucceeded", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestQuerySucceeded", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TestQuerySucceeded", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestQuerySucceeded", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Purpose", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Purpose", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SourceId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Created", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Tested", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tested", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tested", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tested", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TestedButNoChangeBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestedButNoChangeBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TestedButNoChangeBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestedButNoChangeBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Updated", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Updated", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [InfrastructureForSQLServer].[ServerAliases] ([AliasNm], [AliasType]," +
                " [IsSQLConfiguration], [IsDSNAlias], [IsLnkSvrEntry], [FoundOnServerId], [Points" +
                "ToServerId], [CreatedForApp], [CreatedForDBAConvenience], [FoundInDocument], [No" +
                "InfoDueToConnectFailure], [SkipBecauseLongTimeoutAndFailConnect], [SetSkipBecaus" +
                "eLongTimeoutAndFailConnect], [UnsetSkipBecauseLongTimeoutAndFailConnect], [TestQ" +
                "ueryFailed], [TestQuerySucceeded], [Purpose], [Comments], [SourceId], [Created]," +
                " [CreatedBy], [Tested], [TestedButNoChangeBy], [Updated], [UpdatedBy]) VALUES (@" +
                "AliasNm, @AliasType, @IsSQLConfiguration, @IsDSNAlias, @IsLnkSvrEntry, @FoundOnS" +
                "erverId, @PointsToServerId, @CreatedForApp, @CreatedForDBAConvenience, @FoundInD" +
                "ocument, @NoInfoDueToConnectFailure, @SkipBecauseLongTimeoutAndFailConnect, @Set" +
                "SkipBecauseLongTimeoutAndFailConnect, @UnsetSkipBecauseLongTimeoutAndFailConnect" +
                ", @TestQueryFailed, @TestQuerySucceeded, @Purpose, @Comments, @SourceId, @Create" +
                "d, @CreatedBy, @Tested, @TestedButNoChangeBy, @Updated, @UpdatedBy);\r\nSELECT Ali" +
                "asId, AliasNm, AliasType, IsSQLConfiguration, IsDSNAlias, IsLnkSvrEntry, FoundOn" +
                "ServerId, PointsToServerId, CreatedForApp, CreatedForDBAConvenience, FoundInDocu" +
                "ment, NoInfoDueToConnectFailure, SkipBecauseLongTimeoutAndFailConnect, SetSkipBe" +
                "causeLongTimeoutAndFailConnect, UnsetSkipBecauseLongTimeoutAndFailConnect, TestQ" +
                "ueryFailed, TestQuerySucceeded, Purpose, Comments, SourceId, Created, CreatedBy," +
                " Tested, TestedButNoChangeBy, Updated, UpdatedBy FROM InfrastructureForSQLServer" +
                ".ServerAliases WHERE (AliasId = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AliasNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AliasNm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AliasType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AliasType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsSQLConfiguration", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsSQLConfiguration", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsDSNAlias", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsDSNAlias", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsLnkSvrEntry", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsLnkSvrEntry", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FoundOnServerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FoundOnServerId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PointsToServerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PointsToServerId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedForApp", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedForApp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedForDBAConvenience", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedForDBAConvenience", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FoundInDocument", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FoundInDocument", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NoInfoDueToConnectFailure", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoInfoDueToConnectFailure", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UnsetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnsetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TestQueryFailed", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestQueryFailed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TestQuerySucceeded", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestQuerySucceeded", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comments", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comments", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SourceId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Created", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tested", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tested", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TestedButNoChangeBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestedButNoChangeBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Updated", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Updated", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [InfrastructureForSQLServer].[ServerAliases] SET [AliasNm] = @AliasNm, [Al" +
                "iasType] = @AliasType, [IsSQLConfiguration] = @IsSQLConfiguration, [IsDSNAlias] " +
                "= @IsDSNAlias, [IsLnkSvrEntry] = @IsLnkSvrEntry, [FoundOnServerId] = @FoundOnSer" +
                "verId, [PointsToServerId] = @PointsToServerId, [CreatedForApp] = @CreatedForApp," +
                " [CreatedForDBAConvenience] = @CreatedForDBAConvenience, [FoundInDocument] = @Fo" +
                "undInDocument, [NoInfoDueToConnectFailure] = @NoInfoDueToConnectFailure, [SkipBe" +
                "causeLongTimeoutAndFailConnect] = @SkipBecauseLongTimeoutAndFailConnect, [SetSki" +
                "pBecauseLongTimeoutAndFailConnect] = @SetSkipBecauseLongTimeoutAndFailConnect, [" +
                "UnsetSkipBecauseLongTimeoutAndFailConnect] = @UnsetSkipBecauseLongTimeoutAndFail" +
                "Connect, [TestQueryFailed] = @TestQueryFailed, [TestQuerySucceeded] = @TestQuery" +
                "Succeeded, [Purpose] = @Purpose, [Comments] = @Comments, [SourceId] = @SourceId," +
                " [Created] = @Created, [CreatedBy] = @CreatedBy, [Tested] = @Tested, [TestedButN" +
                "oChangeBy] = @TestedButNoChangeBy, [Updated] = @Updated, [UpdatedBy] = @UpdatedB" +
                "y WHERE (([AliasId] = @Original_AliasId) AND ([AliasNm] = @Original_AliasNm) AND" +
                " ((@IsNull_AliasType = 1 AND [AliasType] IS NULL) OR ([AliasType] = @Original_Al" +
                "iasType)) AND ((@IsNull_IsSQLConfiguration = 1 AND [IsSQLConfiguration] IS NULL)" +
                " OR ([IsSQLConfiguration] = @Original_IsSQLConfiguration)) AND ((@IsNull_IsDSNAl" +
                "ias = 1 AND [IsDSNAlias] IS NULL) OR ([IsDSNAlias] = @Original_IsDSNAlias)) AND " +
                "((@IsNull_IsLnkSvrEntry = 1 AND [IsLnkSvrEntry] IS NULL) OR ([IsLnkSvrEntry] = @" +
                "Original_IsLnkSvrEntry)) AND ((@IsNull_FoundOnServerId = 1 AND [FoundOnServerId]" +
                " IS NULL) OR ([FoundOnServerId] = @Original_FoundOnServerId)) AND ((@IsNull_Poin" +
                "tsToServerId = 1 AND [PointsToServerId] IS NULL) OR ([PointsToServerId] = @Origi" +
                "nal_PointsToServerId)) AND ((@IsNull_CreatedForApp = 1 AND [CreatedForApp] IS NU" +
                "LL) OR ([CreatedForApp] = @Original_CreatedForApp)) AND ((@IsNull_CreatedForDBAC" +
                "onvenience = 1 AND [CreatedForDBAConvenience] IS NULL) OR ([CreatedForDBAConveni" +
                "ence] = @Original_CreatedForDBAConvenience)) AND ((@IsNull_FoundInDocument = 1 A" +
                "ND [FoundInDocument] IS NULL) OR ([FoundInDocument] = @Original_FoundInDocument)" +
                ") AND ((@IsNull_NoInfoDueToConnectFailure = 1 AND [NoInfoDueToConnectFailure] IS" +
                " NULL) OR ([NoInfoDueToConnectFailure] = @Original_NoInfoDueToConnectFailure)) A" +
                "ND ((@IsNull_SkipBecauseLongTimeoutAndFailConnect = 1 AND [SkipBecauseLongTimeou" +
                "tAndFailConnect] IS NULL) OR ([SkipBecauseLongTimeoutAndFailConnect] = @Original" +
                "_SkipBecauseLongTimeoutAndFailConnect)) AND ((@IsNull_SetSkipBecauseLongTimeoutA" +
                "ndFailConnect = 1 AND [SetSkipBecauseLongTimeoutAndFailConnect] IS NULL) OR ([Se" +
                "tSkipBecauseLongTimeoutAndFailConnect] = @Original_SetSkipBecauseLongTimeoutAndF" +
                "ailConnect)) AND ((@IsNull_UnsetSkipBecauseLongTimeoutAndFailConnect = 1 AND [Un" +
                "setSkipBecauseLongTimeoutAndFailConnect] IS NULL) OR ([UnsetSkipBecauseLongTimeo" +
                "utAndFailConnect] = @Original_UnsetSkipBecauseLongTimeoutAndFailConnect)) AND ((" +
                "@IsNull_TestQueryFailed = 1 AND [TestQueryFailed] IS NULL) OR ([TestQueryFailed]" +
                " = @Original_TestQueryFailed)) AND ((@IsNull_TestQuerySucceeded = 1 AND [TestQue" +
                "rySucceeded] IS NULL) OR ([TestQuerySucceeded] = @Original_TestQuerySucceeded)) " +
                "AND ((@IsNull_Purpose = 1 AND [Purpose] IS NULL) OR ([Purpose] = @Original_Purpo" +
                "se)) AND ([SourceId] = @Original_SourceId) AND ([Created] = @Original_Created) A" +
                "ND ([CreatedBy] = @Original_CreatedBy) AND ((@IsNull_Tested = 1 AND [Tested] IS " +
                "NULL) OR ([Tested] = @Original_Tested)) AND ((@IsNull_TestedButNoChangeBy = 1 AN" +
                "D [TestedButNoChangeBy] IS NULL) OR ([TestedButNoChangeBy] = @Original_TestedBut" +
                "NoChangeBy)) AND ([Updated] = @Original_Updated) AND ([UpdatedBy] = @Original_Up" +
                "datedBy));\r\nSELECT AliasId, AliasNm, AliasType, IsSQLConfiguration, IsDSNAlias, " +
                "IsLnkSvrEntry, FoundOnServerId, PointsToServerId, CreatedForApp, CreatedForDBACo" +
                "nvenience, FoundInDocument, NoInfoDueToConnectFailure, SkipBecauseLongTimeoutAnd" +
                "FailConnect, SetSkipBecauseLongTimeoutAndFailConnect, UnsetSkipBecauseLongTimeou" +
                "tAndFailConnect, TestQueryFailed, TestQuerySucceeded, Purpose, Comments, SourceI" +
                "d, Created, CreatedBy, Tested, TestedButNoChangeBy, Updated, UpdatedBy FROM Infr" +
                "astructureForSQLServer.ServerAliases WHERE (AliasId = @AliasId)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AliasNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AliasNm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AliasType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AliasType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsSQLConfiguration", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsSQLConfiguration", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsDSNAlias", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsDSNAlias", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsLnkSvrEntry", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsLnkSvrEntry", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FoundOnServerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FoundOnServerId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PointsToServerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PointsToServerId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedForApp", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedForApp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedForDBAConvenience", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedForDBAConvenience", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FoundInDocument", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FoundInDocument", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NoInfoDueToConnectFailure", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoInfoDueToConnectFailure", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UnsetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnsetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TestQueryFailed", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestQueryFailed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TestQuerySucceeded", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestQuerySucceeded", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comments", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comments", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SourceId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Created", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tested", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tested", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TestedButNoChangeBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestedButNoChangeBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Updated", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Updated", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AliasId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AliasId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AliasNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AliasNm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AliasType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AliasType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AliasType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AliasType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsSQLConfiguration", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsSQLConfiguration", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsSQLConfiguration", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsSQLConfiguration", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsDSNAlias", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsDSNAlias", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsDSNAlias", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsDSNAlias", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsLnkSvrEntry", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsLnkSvrEntry", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsLnkSvrEntry", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsLnkSvrEntry", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FoundOnServerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FoundOnServerId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FoundOnServerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FoundOnServerId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PointsToServerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PointsToServerId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PointsToServerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PointsToServerId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CreatedForApp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedForApp", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedForApp", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedForApp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CreatedForDBAConvenience", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedForDBAConvenience", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedForDBAConvenience", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedForDBAConvenience", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FoundInDocument", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FoundInDocument", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FoundInDocument", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FoundInDocument", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NoInfoDueToConnectFailure", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoInfoDueToConnectFailure", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NoInfoDueToConnectFailure", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoInfoDueToConnectFailure", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UnsetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnsetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UnsetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnsetSkipBecauseLongTimeoutAndFailConnect", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TestQueryFailed", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestQueryFailed", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TestQueryFailed", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestQueryFailed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TestQuerySucceeded", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestQuerySucceeded", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TestQuerySucceeded", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestQuerySucceeded", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Purpose", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Purpose", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SourceId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Created", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Tested", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tested", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tested", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tested", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TestedButNoChangeBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestedButNoChangeBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TestedButNoChangeBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestedButNoChangeBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Updated", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Updated", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AliasId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AliasId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QuickInterface.Properties.Settings.Default.DBABnch_LOCALConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT AliasId, AliasNm, AliasType, IsSQLConfiguration, IsDSNAlias, IsLnkSvrEntry, FoundOnServerId, PointsToServerId, CreatedForApp, CreatedForDBAConvenience, FoundInDocument, NoInfoDueToConnectFailure, SkipBecauseLongTimeoutAndFailConnect, SetSkipBecauseLongTimeoutAndFailConnect, UnsetSkipBecauseLongTimeoutAndFailConnect, TestQueryFailed, TestQuerySucceeded, Purpose, Comments, SourceId, Created, CreatedBy, Tested, TestedButNoChangeBy, Updated, UpdatedBy FROM InfrastructureForSQLServer.ServerAliases";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DBABnch_LOCALDataSet.ServerAliasesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DBABnch_LOCALDataSet.ServerAliasesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DBABnch_LOCALDataSet.ServerAliasesDataTable dataTable = new DBABnch_LOCALDataSet.ServerAliasesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DBABnch_LOCALDataSet.ServerAliasesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DBABnch_LOCALDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ServerAliases");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_AliasId, 
                    string Original_AliasNm, 
                    string Original_AliasType, 
                    global::System.Nullable<bool> Original_IsSQLConfiguration, 
                    global::System.Nullable<bool> Original_IsDSNAlias, 
                    global::System.Nullable<bool> Original_IsLnkSvrEntry, 
                    global::System.Nullable<int> Original_FoundOnServerId, 
                    global::System.Nullable<int> Original_PointsToServerId, 
                    global::System.Nullable<bool> Original_CreatedForApp, 
                    global::System.Nullable<bool> Original_CreatedForDBAConvenience, 
                    global::System.Nullable<bool> Original_FoundInDocument, 
                    global::System.Nullable<bool> Original_NoInfoDueToConnectFailure, 
                    global::System.Nullable<bool> Original_SkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_SetSkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_UnsetSkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_TestQueryFailed, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_TestQuerySucceeded, 
                    string Original_Purpose, 
                    int Original_SourceId, 
                    System.DateTimeOffset Original_Created, 
                    int Original_CreatedBy, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_Tested, 
                    global::System.Nullable<int> Original_TestedButNoChangeBy, 
                    System.DateTimeOffset Original_Updated, 
                    int Original_UpdatedBy) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_AliasId));
            if ((Original_AliasNm == null)) {
                throw new global::System.ArgumentNullException("Original_AliasNm");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_AliasNm));
            }
            if ((Original_AliasType == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_AliasType));
            }
            if ((Original_IsSQLConfiguration.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((bool)(Original_IsSQLConfiguration.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_IsDSNAlias.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((bool)(Original_IsDSNAlias.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_IsLnkSvrEntry.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((bool)(Original_IsLnkSvrEntry.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_FoundOnServerId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((int)(Original_FoundOnServerId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_PointsToServerId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_PointsToServerId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_CreatedForApp.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((bool)(Original_CreatedForApp.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_CreatedForDBAConvenience.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((bool)(Original_CreatedForDBAConvenience.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_FoundInDocument.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((bool)(Original_FoundInDocument.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_NoInfoDueToConnectFailure.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((bool)(Original_NoInfoDueToConnectFailure.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_SkipBecauseLongTimeoutAndFailConnect.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((bool)(Original_SkipBecauseLongTimeoutAndFailConnect.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_SetSkipBecauseLongTimeoutAndFailConnect.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((System.DateTimeOffset)(Original_SetSkipBecauseLongTimeoutAndFailConnect.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_UnsetSkipBecauseLongTimeoutAndFailConnect.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((System.DateTimeOffset)(Original_UnsetSkipBecauseLongTimeoutAndFailConnect.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_TestQueryFailed.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((System.DateTimeOffset)(Original_TestQueryFailed.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_TestQuerySucceeded.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((System.DateTimeOffset)(Original_TestQuerySucceeded.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_Purpose == null)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((string)(Original_Purpose));
            }
            this.Adapter.DeleteCommand.Parameters[34].Value = ((int)(Original_SourceId));
            this.Adapter.DeleteCommand.Parameters[35].Value = ((System.DateTimeOffset)(Original_Created));
            this.Adapter.DeleteCommand.Parameters[36].Value = ((int)(Original_CreatedBy));
            if ((Original_Tested.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((System.DateTimeOffset)(Original_Tested.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_TestedButNoChangeBy.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((int)(Original_TestedButNoChangeBy.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[41].Value = ((System.DateTimeOffset)(Original_Updated));
            this.Adapter.DeleteCommand.Parameters[42].Value = ((int)(Original_UpdatedBy));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string AliasNm, 
                    string AliasType, 
                    global::System.Nullable<bool> IsSQLConfiguration, 
                    global::System.Nullable<bool> IsDSNAlias, 
                    global::System.Nullable<bool> IsLnkSvrEntry, 
                    global::System.Nullable<int> FoundOnServerId, 
                    global::System.Nullable<int> PointsToServerId, 
                    global::System.Nullable<bool> CreatedForApp, 
                    global::System.Nullable<bool> CreatedForDBAConvenience, 
                    global::System.Nullable<bool> FoundInDocument, 
                    global::System.Nullable<bool> NoInfoDueToConnectFailure, 
                    global::System.Nullable<bool> SkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> SetSkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> UnsetSkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> TestQueryFailed, 
                    global::System.Nullable<global::System.DateTimeOffset> TestQuerySucceeded, 
                    string Purpose, 
                    string Comments, 
                    int SourceId, 
                    System.DateTimeOffset Created, 
                    int CreatedBy, 
                    global::System.Nullable<global::System.DateTimeOffset> Tested, 
                    global::System.Nullable<int> TestedButNoChangeBy, 
                    System.DateTimeOffset Updated, 
                    int UpdatedBy) {
            if ((AliasNm == null)) {
                throw new global::System.ArgumentNullException("AliasNm");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(AliasNm));
            }
            if ((AliasType == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(AliasType));
            }
            if ((IsSQLConfiguration.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(IsSQLConfiguration.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((IsDSNAlias.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((bool)(IsDSNAlias.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((IsLnkSvrEntry.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(IsLnkSvrEntry.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((FoundOnServerId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(FoundOnServerId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((PointsToServerId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(PointsToServerId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((CreatedForApp.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((bool)(CreatedForApp.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((CreatedForDBAConvenience.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((bool)(CreatedForDBAConvenience.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((FoundInDocument.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((bool)(FoundInDocument.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((NoInfoDueToConnectFailure.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((bool)(NoInfoDueToConnectFailure.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((SkipBecauseLongTimeoutAndFailConnect.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((bool)(SkipBecauseLongTimeoutAndFailConnect.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((SetSkipBecauseLongTimeoutAndFailConnect.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTimeOffset)(SetSkipBecauseLongTimeoutAndFailConnect.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((UnsetSkipBecauseLongTimeoutAndFailConnect.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTimeOffset)(UnsetSkipBecauseLongTimeoutAndFailConnect.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((TestQueryFailed.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTimeOffset)(TestQueryFailed.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((TestQuerySucceeded.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((System.DateTimeOffset)(TestQuerySucceeded.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Purpose == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(Purpose));
            }
            if ((Comments == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(Comments));
            }
            this.Adapter.InsertCommand.Parameters[18].Value = ((int)(SourceId));
            this.Adapter.InsertCommand.Parameters[19].Value = ((System.DateTimeOffset)(Created));
            this.Adapter.InsertCommand.Parameters[20].Value = ((int)(CreatedBy));
            if ((Tested.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((System.DateTimeOffset)(Tested.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((TestedButNoChangeBy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((int)(TestedButNoChangeBy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[23].Value = ((System.DateTimeOffset)(Updated));
            this.Adapter.InsertCommand.Parameters[24].Value = ((int)(UpdatedBy));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string AliasNm, 
                    string AliasType, 
                    global::System.Nullable<bool> IsSQLConfiguration, 
                    global::System.Nullable<bool> IsDSNAlias, 
                    global::System.Nullable<bool> IsLnkSvrEntry, 
                    global::System.Nullable<int> FoundOnServerId, 
                    global::System.Nullable<int> PointsToServerId, 
                    global::System.Nullable<bool> CreatedForApp, 
                    global::System.Nullable<bool> CreatedForDBAConvenience, 
                    global::System.Nullable<bool> FoundInDocument, 
                    global::System.Nullable<bool> NoInfoDueToConnectFailure, 
                    global::System.Nullable<bool> SkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> SetSkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> UnsetSkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> TestQueryFailed, 
                    global::System.Nullable<global::System.DateTimeOffset> TestQuerySucceeded, 
                    string Purpose, 
                    string Comments, 
                    int SourceId, 
                    System.DateTimeOffset Created, 
                    int CreatedBy, 
                    global::System.Nullable<global::System.DateTimeOffset> Tested, 
                    global::System.Nullable<int> TestedButNoChangeBy, 
                    System.DateTimeOffset Updated, 
                    int UpdatedBy, 
                    int Original_AliasId, 
                    string Original_AliasNm, 
                    string Original_AliasType, 
                    global::System.Nullable<bool> Original_IsSQLConfiguration, 
                    global::System.Nullable<bool> Original_IsDSNAlias, 
                    global::System.Nullable<bool> Original_IsLnkSvrEntry, 
                    global::System.Nullable<int> Original_FoundOnServerId, 
                    global::System.Nullable<int> Original_PointsToServerId, 
                    global::System.Nullable<bool> Original_CreatedForApp, 
                    global::System.Nullable<bool> Original_CreatedForDBAConvenience, 
                    global::System.Nullable<bool> Original_FoundInDocument, 
                    global::System.Nullable<bool> Original_NoInfoDueToConnectFailure, 
                    global::System.Nullable<bool> Original_SkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_SetSkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_UnsetSkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_TestQueryFailed, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_TestQuerySucceeded, 
                    string Original_Purpose, 
                    int Original_SourceId, 
                    System.DateTimeOffset Original_Created, 
                    int Original_CreatedBy, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_Tested, 
                    global::System.Nullable<int> Original_TestedButNoChangeBy, 
                    System.DateTimeOffset Original_Updated, 
                    int Original_UpdatedBy, 
                    int AliasId) {
            if ((AliasNm == null)) {
                throw new global::System.ArgumentNullException("AliasNm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(AliasNm));
            }
            if ((AliasType == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(AliasType));
            }
            if ((IsSQLConfiguration.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(IsSQLConfiguration.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((IsDSNAlias.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((bool)(IsDSNAlias.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((IsLnkSvrEntry.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(IsLnkSvrEntry.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((FoundOnServerId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(FoundOnServerId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((PointsToServerId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(PointsToServerId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((CreatedForApp.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((bool)(CreatedForApp.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((CreatedForDBAConvenience.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((bool)(CreatedForDBAConvenience.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((FoundInDocument.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(FoundInDocument.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((NoInfoDueToConnectFailure.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(NoInfoDueToConnectFailure.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((SkipBecauseLongTimeoutAndFailConnect.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((bool)(SkipBecauseLongTimeoutAndFailConnect.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((SetSkipBecauseLongTimeoutAndFailConnect.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTimeOffset)(SetSkipBecauseLongTimeoutAndFailConnect.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((UnsetSkipBecauseLongTimeoutAndFailConnect.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTimeOffset)(UnsetSkipBecauseLongTimeoutAndFailConnect.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((TestQueryFailed.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTimeOffset)(TestQueryFailed.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((TestQuerySucceeded.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTimeOffset)(TestQuerySucceeded.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Purpose == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Purpose));
            }
            if ((Comments == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Comments));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(SourceId));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTimeOffset)(Created));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(CreatedBy));
            if ((Tested.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTimeOffset)(Tested.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((TestedButNoChangeBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(TestedButNoChangeBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTimeOffset)(Updated));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(UpdatedBy));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(Original_AliasId));
            if ((Original_AliasNm == null)) {
                throw new global::System.ArgumentNullException("Original_AliasNm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_AliasNm));
            }
            if ((Original_AliasType == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_AliasType));
            }
            if ((Original_IsSQLConfiguration.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((bool)(Original_IsSQLConfiguration.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_IsDSNAlias.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((bool)(Original_IsDSNAlias.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_IsLnkSvrEntry.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((bool)(Original_IsLnkSvrEntry.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_FoundOnServerId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(Original_FoundOnServerId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_PointsToServerId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(Original_PointsToServerId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_CreatedForApp.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((bool)(Original_CreatedForApp.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_CreatedForDBAConvenience.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((bool)(Original_CreatedForDBAConvenience.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_FoundInDocument.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((bool)(Original_FoundInDocument.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_NoInfoDueToConnectFailure.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((bool)(Original_NoInfoDueToConnectFailure.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_SkipBecauseLongTimeoutAndFailConnect.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((bool)(Original_SkipBecauseLongTimeoutAndFailConnect.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_SetSkipBecauseLongTimeoutAndFailConnect.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((System.DateTimeOffset)(Original_SetSkipBecauseLongTimeoutAndFailConnect.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_UnsetSkipBecauseLongTimeoutAndFailConnect.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((System.DateTimeOffset)(Original_UnsetSkipBecauseLongTimeoutAndFailConnect.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_TestQueryFailed.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((System.DateTimeOffset)(Original_TestQueryFailed.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_TestQuerySucceeded.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[56].Value = ((System.DateTimeOffset)(Original_TestQuerySucceeded.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_Purpose == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(Original_Purpose));
            }
            this.Adapter.UpdateCommand.Parameters[59].Value = ((int)(Original_SourceId));
            this.Adapter.UpdateCommand.Parameters[60].Value = ((System.DateTimeOffset)(Original_Created));
            this.Adapter.UpdateCommand.Parameters[61].Value = ((int)(Original_CreatedBy));
            if ((Original_Tested.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((System.DateTimeOffset)(Original_Tested.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((Original_TestedButNoChangeBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((int)(Original_TestedButNoChangeBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[66].Value = ((System.DateTimeOffset)(Original_Updated));
            this.Adapter.UpdateCommand.Parameters[67].Value = ((int)(Original_UpdatedBy));
            this.Adapter.UpdateCommand.Parameters[68].Value = ((int)(AliasId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string AliasNm, 
                    string AliasType, 
                    global::System.Nullable<bool> IsSQLConfiguration, 
                    global::System.Nullable<bool> IsDSNAlias, 
                    global::System.Nullable<bool> IsLnkSvrEntry, 
                    global::System.Nullable<int> FoundOnServerId, 
                    global::System.Nullable<int> PointsToServerId, 
                    global::System.Nullable<bool> CreatedForApp, 
                    global::System.Nullable<bool> CreatedForDBAConvenience, 
                    global::System.Nullable<bool> FoundInDocument, 
                    global::System.Nullable<bool> NoInfoDueToConnectFailure, 
                    global::System.Nullable<bool> SkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> SetSkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> UnsetSkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> TestQueryFailed, 
                    global::System.Nullable<global::System.DateTimeOffset> TestQuerySucceeded, 
                    string Purpose, 
                    string Comments, 
                    int SourceId, 
                    System.DateTimeOffset Created, 
                    int CreatedBy, 
                    global::System.Nullable<global::System.DateTimeOffset> Tested, 
                    global::System.Nullable<int> TestedButNoChangeBy, 
                    System.DateTimeOffset Updated, 
                    int UpdatedBy, 
                    int Original_AliasId, 
                    string Original_AliasNm, 
                    string Original_AliasType, 
                    global::System.Nullable<bool> Original_IsSQLConfiguration, 
                    global::System.Nullable<bool> Original_IsDSNAlias, 
                    global::System.Nullable<bool> Original_IsLnkSvrEntry, 
                    global::System.Nullable<int> Original_FoundOnServerId, 
                    global::System.Nullable<int> Original_PointsToServerId, 
                    global::System.Nullable<bool> Original_CreatedForApp, 
                    global::System.Nullable<bool> Original_CreatedForDBAConvenience, 
                    global::System.Nullable<bool> Original_FoundInDocument, 
                    global::System.Nullable<bool> Original_NoInfoDueToConnectFailure, 
                    global::System.Nullable<bool> Original_SkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_SetSkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_UnsetSkipBecauseLongTimeoutAndFailConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_TestQueryFailed, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_TestQuerySucceeded, 
                    string Original_Purpose, 
                    int Original_SourceId, 
                    System.DateTimeOffset Original_Created, 
                    int Original_CreatedBy, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_Tested, 
                    global::System.Nullable<int> Original_TestedButNoChangeBy, 
                    System.DateTimeOffset Original_Updated, 
                    int Original_UpdatedBy) {
            return this.Update(AliasNm, AliasType, IsSQLConfiguration, IsDSNAlias, IsLnkSvrEntry, FoundOnServerId, PointsToServerId, CreatedForApp, CreatedForDBAConvenience, FoundInDocument, NoInfoDueToConnectFailure, SkipBecauseLongTimeoutAndFailConnect, SetSkipBecauseLongTimeoutAndFailConnect, UnsetSkipBecauseLongTimeoutAndFailConnect, TestQueryFailed, TestQuerySucceeded, Purpose, Comments, SourceId, Created, CreatedBy, Tested, TestedButNoChangeBy, Updated, UpdatedBy, Original_AliasId, Original_AliasNm, Original_AliasType, Original_IsSQLConfiguration, Original_IsDSNAlias, Original_IsLnkSvrEntry, Original_FoundOnServerId, Original_PointsToServerId, Original_CreatedForApp, Original_CreatedForDBAConvenience, Original_FoundInDocument, Original_NoInfoDueToConnectFailure, Original_SkipBecauseLongTimeoutAndFailConnect, Original_SetSkipBecauseLongTimeoutAndFailConnect, Original_UnsetSkipBecauseLongTimeoutAndFailConnect, Original_TestQueryFailed, Original_TestQuerySucceeded, Original_Purpose, Original_SourceId, Original_Created, Original_CreatedBy, Original_Tested, Original_TestedButNoChangeBy, Original_Updated, Original_UpdatedBy, Original_AliasId);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ServersTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ServersTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Servers";
            tableMapping.ColumnMappings.Add("ServerId", "ServerId");
            tableMapping.ColumnMappings.Add("ServerNm", "ServerNm");
            tableMapping.ColumnMappings.Add("ServerType", "ServerType");
            tableMapping.ColumnMappings.Add("Impl", "Impl");
            tableMapping.ColumnMappings.Add("ServerDesc", "ServerDesc");
            tableMapping.ColumnMappings.Add("ServerAliases", "ServerAliases");
            tableMapping.ColumnMappings.Add("ServerEnvironments", "ServerEnvironments");
            tableMapping.ColumnMappings.Add("EnvironmentId", "EnvironmentId");
            tableMapping.ColumnMappings.Add("RestrictionNotice", "RestrictionNotice");
            tableMapping.ColumnMappings.Add("RestrictedByNm", "RestrictedByNm");
            tableMapping.ColumnMappings.Add("Restricted", "Restricted");
            tableMapping.ColumnMappings.Add("InstanceNm", "InstanceNm");
            tableMapping.ColumnMappings.Add("IP4Address", "IP4Address");
            tableMapping.ColumnMappings.Add("FoundInDocument", "FoundInDocument");
            tableMapping.ColumnMappings.Add("LegacySource", "LegacySource");
            tableMapping.ColumnMappings.Add("NoLongerExists", "NoLongerExists");
            tableMapping.ColumnMappings.Add("NoInfoDueToConnectFailure", "NoInfoDueToConnectFailure");
            tableMapping.ColumnMappings.Add("LastTimePingSucceeded", "LastTimePingSucceeded");
            tableMapping.ColumnMappings.Add("SuccessfulPingDurationNS", "SuccessfulPingDurationNS");
            tableMapping.ColumnMappings.Add("LastTimePingFailed", "LastTimePingFailed");
            tableMapping.ColumnMappings.Add("FailedPingDurationNS", "FailedPingDurationNS");
            tableMapping.ColumnMappings.Add("PingFailed", "PingFailed");
            tableMapping.ColumnMappings.Add("LongTimeoutAndFailedToConnect", "LongTimeoutAndFailedToConnect");
            tableMapping.ColumnMappings.Add("LastTimeLongTimeoutAndFailedToConnect", "LastTimeLongTimeoutAndFailedToConnect");
            tableMapping.ColumnMappings.Add("NoAccessForADUserId", "NoAccessForADUserId");
            tableMapping.ColumnMappings.Add("LastTimeNoAccessForADUserId", "LastTimeNoAccessForADUserId");
            tableMapping.ColumnMappings.Add("ConnectionAttemptTimedOut", "ConnectionAttemptTimedOut");
            tableMapping.ColumnMappings.Add("LastTimeConnectionAttemptTimedOut", "LastTimeConnectionAttemptTimedOut");
            tableMapping.ColumnMappings.Add("LastTimeConnectionAttemptSucceeded", "LastTimeConnectionAttemptSucceeded");
            tableMapping.ColumnMappings.Add("TimeItTookToConnect", "TimeItTookToConnect");
            tableMapping.ColumnMappings.Add("ConnectTimeoutSetAtTimeOfTimeOut", "ConnectTimeoutSetAtTimeOfTimeOut");
            tableMapping.ColumnMappings.Add("ClientFailedToMakeAConnection", "ClientFailedToMakeAConnection");
            tableMapping.ColumnMappings.Add("LastTimeClientFailedToMakeAConnection", "LastTimeClientFailedToMakeAConnection");
            tableMapping.ColumnMappings.Add("LoginFailedForUserId", "LoginFailedForUserId");
            tableMapping.ColumnMappings.Add("LastTimeLoginFailedForUser", "LastTimeLoginFailedForUser");
            tableMapping.ColumnMappings.Add("Skip", "Skip");
            tableMapping.ColumnMappings.Add("DomainNm", "DomainNm");
            tableMapping.ColumnMappings.Add("DbLinkLoginId", "DbLinkLoginId");
            tableMapping.ColumnMappings.Add("LinkedFromServerId", "LinkedFromServerId");
            tableMapping.ColumnMappings.Add("HostId", "HostId");
            tableMapping.ColumnMappings.Add("HostNm", "HostNm");
            tableMapping.ColumnMappings.Add("HostOSDesc", "HostOSDesc");
            tableMapping.ColumnMappings.Add("HostNmPhysicalNetBIOS", "HostNmPhysicalNetBIOS");
            tableMapping.ColumnMappings.Add("Purpose", "Purpose");
            tableMapping.ColumnMappings.Add("MethodsUsedToDeterminePurpose", "MethodsUsedToDeterminePurpose");
            tableMapping.ColumnMappings.Add("Edition", "Edition");
            tableMapping.ColumnMappings.Add("EngineEdition", "EngineEdition");
            tableMapping.ColumnMappings.Add("EditionNm", "EditionNm");
            tableMapping.ColumnMappings.Add("ProductBuild", "ProductBuild");
            tableMapping.ColumnMappings.Add("ProductBuildType", "ProductBuildType");
            tableMapping.ColumnMappings.Add("ProductReleaseYear", "ProductReleaseYear");
            tableMapping.ColumnMappings.Add("ProductVersion", "ProductVersion");
            tableMapping.ColumnMappings.Add("ProductLevel", "ProductLevel");
            tableMapping.ColumnMappings.Add("LastKBApplied", "LastKBApplied");
            tableMapping.ColumnMappings.Add("ProductMajorVersion", "ProductMajorVersion");
            tableMapping.ColumnMappings.Add("ProductMinorVersion", "ProductMinorVersion");
            tableMapping.ColumnMappings.Add("ProductUpdateLevel", "ProductUpdateLevel");
            tableMapping.ColumnMappings.Add("Collation", "Collation");
            tableMapping.ColumnMappings.Add("ErrorLogFileNm", "ErrorLogFileNm");
            tableMapping.ColumnMappings.Add("FilestreamConfiguredLevel", "FilestreamConfiguredLevel");
            tableMapping.ColumnMappings.Add("FilestreamShareNm", "FilestreamShareNm");
            tableMapping.ColumnMappings.Add("HadrManagerStatus", "HadrManagerStatus");
            tableMapping.ColumnMappings.Add("IsHadrEnabled", "IsHadrEnabled");
            tableMapping.ColumnMappings.Add("IsXTPSupported", "IsXTPSupported");
            tableMapping.ColumnMappings.Add("IsClustered", "IsClustered");
            tableMapping.ColumnMappings.Add("IsPolyBaseInstalled", "IsPolyBaseInstalled");
            tableMapping.ColumnMappings.Add("IsIntegratedSecurityOnly", "IsIntegratedSecurityOnly");
            tableMapping.ColumnMappings.Add("IsSingleUser", "IsSingleUser");
            tableMapping.ColumnMappings.Add("IsFullTextInstalled", "IsFullTextInstalled");
            tableMapping.ColumnMappings.Add("IsAdvancedAnalyticsInstalled", "IsAdvancedAnalyticsInstalled");
            tableMapping.ColumnMappings.Add("IsLocalDb", "IsLocalDb");
            tableMapping.ColumnMappings.Add("BuildClrVersion", "BuildClrVersion");
            tableMapping.ColumnMappings.Add("ProcessId", "ProcessId");
            tableMapping.ColumnMappings.Add("ComparisonStyle", "ComparisonStyle");
            tableMapping.ColumnMappings.Add("SqlCharSetNm", "SqlCharSetNm");
            tableMapping.ColumnMappings.Add("SqlSortOrderNm", "SqlSortOrderNm");
            tableMapping.ColumnMappings.Add("BackupPrimaryPath", "BackupPrimaryPath");
            tableMapping.ColumnMappings.Add("BackupSecondaryPath", "BackupSecondaryPath");
            tableMapping.ColumnMappings.Add("LastBackupName", "LastBackupName");
            tableMapping.ColumnMappings.Add("Created", "Created");
            tableMapping.ColumnMappings.Add("CreatedBy", "CreatedBy");
            tableMapping.ColumnMappings.Add("Updated", "Updated");
            tableMapping.ColumnMappings.Add("UpdatedBy", "UpdatedBy");
            tableMapping.ColumnMappings.Add("TestedButNoChange", "TestedButNoChange");
            tableMapping.ColumnMappings.Add("TestedButNoChangeBy", "TestedButNoChangeBy");
            tableMapping.ColumnMappings.Add("Audited", "Audited");
            tableMapping.ColumnMappings.Add("SourceId", "SourceId");
            tableMapping.ColumnMappings.Add("SourceId2", "SourceId2");
            tableMapping.ColumnMappings.Add("SourceId3", "SourceId3");
            tableMapping.ColumnMappings.Add("SourceId4", "SourceId4");
            tableMapping.ColumnMappings.Add("IsDMZ", "IsDMZ");
            tableMapping.ColumnMappings.Add("FedFromServerId", "FedFromServerId");
            tableMapping.ColumnMappings.Add("FeedsIntoServerId", "FeedsIntoServerId");
            tableMapping.ColumnMappings.Add("Region", "Region");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [InfrastructureForSQLServer].[Servers] WHERE (([ServerId] = @Original" +
                "_ServerId) AND ([ServerNm] = @Original_ServerNm) AND ((@IsNull_ServerType = 1 AN" +
                "D [ServerType] IS NULL) OR ([ServerType] = @Original_ServerType)) AND ((@IsNull_" +
                "Impl = 1 AND [Impl] IS NULL) OR ([Impl] = @Original_Impl)) AND ((@IsNull_ServerA" +
                "liases = 1 AND [ServerAliases] IS NULL) OR ([ServerAliases] = @Original_ServerAl" +
                "iases)) AND ((@IsNull_ServerEnvironments = 1 AND [ServerEnvironments] IS NULL) O" +
                "R ([ServerEnvironments] = @Original_ServerEnvironments)) AND ((@IsNull_Environme" +
                "ntId = 1 AND [EnvironmentId] IS NULL) OR ([EnvironmentId] = @Original_Environmen" +
                "tId)) AND ((@IsNull_RestrictionNotice = 1 AND [RestrictionNotice] IS NULL) OR ([" +
                "RestrictionNotice] = @Original_RestrictionNotice)) AND ((@IsNull_RestrictedByNm " +
                "= 1 AND [RestrictedByNm] IS NULL) OR ([RestrictedByNm] = @Original_RestrictedByN" +
                "m)) AND ((@IsNull_Restricted = 1 AND [Restricted] IS NULL) OR ([Restricted] = @O" +
                "riginal_Restricted)) AND ((@IsNull_InstanceNm = 1 AND [InstanceNm] IS NULL) OR (" +
                "[InstanceNm] = @Original_InstanceNm)) AND ((@IsNull_IP4Address = 1 AND [IP4Addre" +
                "ss] IS NULL) OR ([IP4Address] = @Original_IP4Address)) AND ((@IsNull_FoundInDocu" +
                "ment = 1 AND [FoundInDocument] IS NULL) OR ([FoundInDocument] = @Original_FoundI" +
                "nDocument)) AND ((@IsNull_LegacySource = 1 AND [LegacySource] IS NULL) OR ([Lega" +
                "cySource] = @Original_LegacySource)) AND ((@IsNull_NoLongerExists = 1 AND [NoLon" +
                "gerExists] IS NULL) OR ([NoLongerExists] = @Original_NoLongerExists)) AND ([NoIn" +
                "foDueToConnectFailure] = @Original_NoInfoDueToConnectFailure) AND ((@IsNull_Last" +
                "TimePingSucceeded = 1 AND [LastTimePingSucceeded] IS NULL) OR ([LastTimePingSucc" +
                "eeded] = @Original_LastTimePingSucceeded)) AND ((@IsNull_SuccessfulPingDurationN" +
                "S = 1 AND [SuccessfulPingDurationNS] IS NULL) OR ([SuccessfulPingDurationNS] = @" +
                "Original_SuccessfulPingDurationNS)) AND ((@IsNull_LastTimePingFailed = 1 AND [La" +
                "stTimePingFailed] IS NULL) OR ([LastTimePingFailed] = @Original_LastTimePingFail" +
                "ed)) AND ((@IsNull_FailedPingDurationNS = 1 AND [FailedPingDurationNS] IS NULL) " +
                "OR ([FailedPingDurationNS] = @Original_FailedPingDurationNS)) AND ((@IsNull_Ping" +
                "Failed = 1 AND [PingFailed] IS NULL) OR ([PingFailed] = @Original_PingFailed)) A" +
                "ND ((@IsNull_LongTimeoutAndFailedToConnect = 1 AND [LongTimeoutAndFailedToConnec" +
                "t] IS NULL) OR ([LongTimeoutAndFailedToConnect] = @Original_LongTimeoutAndFailed" +
                "ToConnect)) AND ((@IsNull_LastTimeLongTimeoutAndFailedToConnect = 1 AND [LastTim" +
                "eLongTimeoutAndFailedToConnect] IS NULL) OR ([LastTimeLongTimeoutAndFailedToConn" +
                "ect] = @Original_LastTimeLongTimeoutAndFailedToConnect)) AND ((@IsNull_NoAccessF" +
                "orADUserId = 1 AND [NoAccessForADUserId] IS NULL) OR ([NoAccessForADUserId] = @O" +
                "riginal_NoAccessForADUserId)) AND ((@IsNull_LastTimeNoAccessForADUserId = 1 AND " +
                "[LastTimeNoAccessForADUserId] IS NULL) OR ([LastTimeNoAccessForADUserId] = @Orig" +
                "inal_LastTimeNoAccessForADUserId)) AND ((@IsNull_ConnectionAttemptTimedOut = 1 A" +
                "ND [ConnectionAttemptTimedOut] IS NULL) OR ([ConnectionAttemptTimedOut] = @Origi" +
                "nal_ConnectionAttemptTimedOut)) AND ((@IsNull_LastTimeConnectionAttemptTimedOut " +
                "= 1 AND [LastTimeConnectionAttemptTimedOut] IS NULL) OR ([LastTimeConnectionAtte" +
                "mptTimedOut] = @Original_LastTimeConnectionAttemptTimedOut)) AND ((@IsNull_LastT" +
                "imeConnectionAttemptSucceeded = 1 AND [LastTimeConnectionAttemptSucceeded] IS NU" +
                "LL) OR ([LastTimeConnectionAttemptSucceeded] = @Original_LastTimeConnectionAttem" +
                "ptSucceeded)) AND ((@IsNull_TimeItTookToConnect = 1 AND [TimeItTookToConnect] IS" +
                " NULL) OR ([TimeItTookToConnect] = @Original_TimeItTookToConnect)) AND ((@IsNull" +
                "_ConnectTimeoutSetAtTimeOfTimeOut = 1 AND [ConnectTimeoutSetAtTimeOfTimeOut] IS " +
                "NULL) OR ([ConnectTimeoutSetAtTimeOfTimeOut] = @Original_ConnectTimeoutSetAtTime" +
                "OfTimeOut)) AND ((@IsNull_ClientFailedToMakeAConnection = 1 AND [ClientFailedToM" +
                "akeAConnection] IS NULL) OR ([ClientFailedToMakeAConnection] = @Original_ClientF" +
                "ailedToMakeAConnection)) AND ((@IsNull_LastTimeClientFailedToMakeAConnection = 1" +
                " AND [LastTimeClientFailedToMakeAConnection] IS NULL) OR ([LastTimeClientFailedT" +
                "oMakeAConnection] = @Original_LastTimeClientFailedToMakeAConnection)) AND ((@IsN" +
                "ull_LoginFailedForUserId = 1 AND [LoginFailedForUserId] IS NULL) OR ([LoginFaile" +
                "dForUserId] = @Original_LoginFailedForUserId)) AND ((@IsNull_LastTimeLoginFailed" +
                "ForUser = 1 AND [LastTimeLoginFailedForUser] IS NULL) OR ([LastTimeLoginFailedFo" +
                "rUser] = @Original_LastTimeLoginFailedForUser)) AND ([Skip] = @Original_Skip) AN" +
                "D ([DomainNm] = @Original_DomainNm) AND ((@IsNull_DbLinkLoginId = 1 AND [DbLinkL" +
                "oginId] IS NULL) OR ([DbLinkLoginId] = @Original_DbLinkLoginId)) AND ((@IsNull_L" +
                "inkedFromServerId = 1 AND [LinkedFromServerId] IS NULL) OR ([LinkedFromServerId]" +
                " = @Original_LinkedFromServerId)) AND ((@IsNull_HostId = 1 AND [HostId] IS NULL)" +
                " OR ([HostId] = @Original_HostId)) AND ((@IsNull_HostNm = 1 AND [HostNm] IS NULL" +
                ") OR ([HostNm] = @Original_HostNm)) AND ((@IsNull_HostOSDesc = 1 AND [HostOSDesc" +
                "] IS NULL) OR ([HostOSDesc] = @Original_HostOSDesc)) AND ((@IsNull_HostNmPhysica" +
                "lNetBIOS = 1 AND [HostNmPhysicalNetBIOS] IS NULL) OR ([HostNmPhysicalNetBIOS] = " +
                "@Original_HostNmPhysicalNetBIOS)) AND ((@IsNull_Purpose = 1 AND [Purpose] IS NUL" +
                "L) OR ([Purpose] = @Original_Purpose)) AND ((@IsNull_MethodsUsedToDeterminePurpo" +
                "se = 1 AND [MethodsUsedToDeterminePurpose] IS NULL) OR ([MethodsUsedToDetermineP" +
                "urpose] = @Original_MethodsUsedToDeterminePurpose)) AND ((@IsNull_Edition = 1 AN" +
                "D [Edition] IS NULL) OR ([Edition] = @Original_Edition)) AND ((@IsNull_EngineEdi" +
                "tion = 1 AND [EngineEdition] IS NULL) OR ([EngineEdition] = @Original_EngineEdit" +
                "ion)) AND ((@IsNull_EditionNm = 1 AND [EditionNm] IS NULL) OR ([EditionNm] = @Or" +
                "iginal_EditionNm)) AND ((@IsNull_ProductBuild = 1 AND [ProductBuild] IS NULL) OR" +
                " ([ProductBuild] = @Original_ProductBuild)) AND ((@IsNull_ProductBuildType = 1 A" +
                "ND [ProductBuildType] IS NULL) OR ([ProductBuildType] = @Original_ProductBuildTy" +
                "pe)) AND ((@IsNull_ProductReleaseYear = 1 AND [ProductReleaseYear] IS NULL) OR (" +
                "[ProductReleaseYear] = @Original_ProductReleaseYear)) AND ((@IsNull_ProductVersi" +
                "on = 1 AND [ProductVersion] IS NULL) OR ([ProductVersion] = @Original_ProductVer" +
                "sion)) AND ((@IsNull_ProductLevel = 1 AND [ProductLevel] IS NULL) OR ([ProductLe" +
                "vel] = @Original_ProductLevel)) AND ((@IsNull_LastKBApplied = 1 AND [LastKBAppli" +
                "ed] IS NULL) OR ([LastKBApplied] = @Original_LastKBApplied)) AND ((@IsNull_Produ" +
                "ctMajorVersion = 1 AND [ProductMajorVersion] IS NULL) OR ([ProductMajorVersion] " +
                "= @Original_ProductMajorVersion)) AND ((@IsNull_ProductMinorVersion = 1 AND [Pro" +
                "ductMinorVersion] IS NULL) OR ([ProductMinorVersion] = @Original_ProductMinorVer" +
                "sion)) AND ((@IsNull_ProductUpdateLevel = 1 AND [ProductUpdateLevel] IS NULL) OR" +
                " ([ProductUpdateLevel] = @Original_ProductUpdateLevel)) AND ((@IsNull_Collation " +
                "= 1 AND [Collation] IS NULL) OR ([Collation] = @Original_Collation)) AND ((@IsNu" +
                "ll_FilestreamConfiguredLevel = 1 AND [FilestreamConfiguredLevel] IS NULL) OR ([F" +
                "ilestreamConfiguredLevel] = @Original_FilestreamConfiguredLevel)) AND ((@IsNull_" +
                "FilestreamShareNm = 1 AND [FilestreamShareNm] IS NULL) OR ([FilestreamShareNm] =" +
                " @Original_FilestreamShareNm)) AND ((@IsNull_HadrManagerStatus = 1 AND [HadrMana" +
                "gerStatus] IS NULL) OR ([HadrManagerStatus] = @Original_HadrManagerStatus)) AND " +
                "((@IsNull_IsHadrEnabled = 1 AND [IsHadrEnabled] IS NULL) OR ([IsHadrEnabled] = @" +
                "Original_IsHadrEnabled)) AND ((@IsNull_IsXTPSupported = 1 AND [IsXTPSupported] I" +
                "S NULL) OR ([IsXTPSupported] = @Original_IsXTPSupported)) AND ((@IsNull_IsCluste" +
                "red = 1 AND [IsClustered] IS NULL) OR ([IsClustered] = @Original_IsClustered)) A" +
                "ND ((@IsNull_IsPolyBaseInstalled = 1 AND [IsPolyBaseInstalled] IS NULL) OR ([IsP" +
                "olyBaseInstalled] = @Original_IsPolyBaseInstalled)) AND ((@IsNull_IsIntegratedSe" +
                "curityOnly = 1 AND [IsIntegratedSecurityOnly] IS NULL) OR ([IsIntegratedSecurity" +
                "Only] = @Original_IsIntegratedSecurityOnly)) AND ((@IsNull_IsSingleUser = 1 AND " +
                "[IsSingleUser] IS NULL) OR ([IsSingleUser] = @Original_IsSingleUser)) AND ((@IsN" +
                "ull_IsFullTextInstalled = 1 AND [IsFullTextInstalled] IS NULL) OR ([IsFullTextIn" +
                "stalled] = @Original_IsFullTextInstalled)) AND ((@IsNull_IsAdvancedAnalyticsInst" +
                "alled = 1 AND [IsAdvancedAnalyticsInstalled] IS NULL) OR ([IsAdvancedAnalyticsIn" +
                "stalled] = @Original_IsAdvancedAnalyticsInstalled)) AND ((@IsNull_IsLocalDb = 1 " +
                "AND [IsLocalDb] IS NULL) OR ([IsLocalDb] = @Original_IsLocalDb)) AND ((@IsNull_B" +
                "uildClrVersion = 1 AND [BuildClrVersion] IS NULL) OR ([BuildClrVersion] = @Origi" +
                "nal_BuildClrVersion)) AND ((@IsNull_ProcessId = 1 AND [ProcessId] IS NULL) OR ([" +
                "ProcessId] = @Original_ProcessId)) AND ((@IsNull_ComparisonStyle = 1 AND [Compar" +
                "isonStyle] IS NULL) OR ([ComparisonStyle] = @Original_ComparisonStyle)) AND ((@I" +
                "sNull_SqlCharSetNm = 1 AND [SqlCharSetNm] IS NULL) OR ([SqlCharSetNm] = @Origina" +
                "l_SqlCharSetNm)) AND ((@IsNull_SqlSortOrderNm = 1 AND [SqlSortOrderNm] IS NULL) " +
                "OR ([SqlSortOrderNm] = @Original_SqlSortOrderNm)) AND ((@IsNull_BackupPrimaryPat" +
                "h = 1 AND [BackupPrimaryPath] IS NULL) OR ([BackupPrimaryPath] = @Original_Backu" +
                "pPrimaryPath)) AND ((@IsNull_BackupSecondaryPath = 1 AND [BackupSecondaryPath] I" +
                "S NULL) OR ([BackupSecondaryPath] = @Original_BackupSecondaryPath)) AND ((@IsNul" +
                "l_LastBackupName = 1 AND [LastBackupName] IS NULL) OR ([LastBackupName] = @Origi" +
                "nal_LastBackupName)) AND ((@IsNull_Created = 1 AND [Created] IS NULL) OR ([Creat" +
                "ed] = @Original_Created)) AND ((@IsNull_CreatedBy = 1 AND [CreatedBy] IS NULL) O" +
                "R ([CreatedBy] = @Original_CreatedBy)) AND ((@IsNull_Updated = 1 AND [Updated] I" +
                "S NULL) OR ([Updated] = @Original_Updated)) AND ((@IsNull_UpdatedBy = 1 AND [Upd" +
                "atedBy] IS NULL) OR ([UpdatedBy] = @Original_UpdatedBy)) AND ((@IsNull_TestedBut" +
                "NoChange = 1 AND [TestedButNoChange] IS NULL) OR ([TestedButNoChange] = @Origina" +
                "l_TestedButNoChange)) AND ((@IsNull_TestedButNoChangeBy = 1 AND [TestedButNoChan" +
                "geBy] IS NULL) OR ([TestedButNoChangeBy] = @Original_TestedButNoChangeBy)) AND (" +
                "(@IsNull_Audited = 1 AND [Audited] IS NULL) OR ([Audited] = @Original_Audited)) " +
                "AND ([SourceId] = @Original_SourceId) AND ((@IsNull_SourceId2 = 1 AND [SourceId2" +
                "] IS NULL) OR ([SourceId2] = @Original_SourceId2)) AND ((@IsNull_SourceId3 = 1 A" +
                "ND [SourceId3] IS NULL) OR ([SourceId3] = @Original_SourceId3)) AND ((@IsNull_So" +
                "urceId4 = 1 AND [SourceId4] IS NULL) OR ([SourceId4] = @Original_SourceId4)) AND" +
                " ((@IsNull_IsDMZ = 1 AND [IsDMZ] IS NULL) OR ([IsDMZ] = @Original_IsDMZ)) AND ((" +
                "@IsNull_FedFromServerId = 1 AND [FedFromServerId] IS NULL) OR ([FedFromServerId]" +
                " = @Original_FedFromServerId)) AND ((@IsNull_FeedsIntoServerId = 1 AND [FeedsInt" +
                "oServerId] IS NULL) OR ([FeedsIntoServerId] = @Original_FeedsIntoServerId)) AND " +
                "((@IsNull_Region = 1 AND [Region] IS NULL) OR ([Region] = @Original_Region)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ServerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServerId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ServerNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServerNm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ServerType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServerType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ServerType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServerType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Impl", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Impl", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Impl", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Impl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ServerAliases", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServerAliases", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ServerAliases", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServerAliases", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ServerEnvironments", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServerEnvironments", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ServerEnvironments", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServerEnvironments", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EnvironmentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnvironmentId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EnvironmentId", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnvironmentId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RestrictionNotice", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RestrictionNotice", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RestrictionNotice", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RestrictionNotice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RestrictedByNm", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RestrictedByNm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RestrictedByNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RestrictedByNm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Restricted", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Restricted", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Restricted", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Restricted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InstanceNm", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InstanceNm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InstanceNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InstanceNm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP4Address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP4Address", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP4Address", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP4Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FoundInDocument", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FoundInDocument", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FoundInDocument", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FoundInDocument", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LegacySource", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LegacySource", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LegacySource", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LegacySource", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NoLongerExists", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoLongerExists", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NoLongerExists", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoLongerExists", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NoInfoDueToConnectFailure", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoInfoDueToConnectFailure", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastTimePingSucceeded", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimePingSucceeded", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastTimePingSucceeded", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimePingSucceeded", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SuccessfulPingDurationNS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuccessfulPingDurationNS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SuccessfulPingDurationNS", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuccessfulPingDurationNS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastTimePingFailed", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimePingFailed", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastTimePingFailed", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimePingFailed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FailedPingDurationNS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FailedPingDurationNS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FailedPingDurationNS", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FailedPingDurationNS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PingFailed", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PingFailed", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PingFailed", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PingFailed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LongTimeoutAndFailedToConnect", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LongTimeoutAndFailedToConnect", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LongTimeoutAndFailedToConnect", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LongTimeoutAndFailedToConnect", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastTimeLongTimeoutAndFailedToConnect", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimeLongTimeoutAndFailedToConnect", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastTimeLongTimeoutAndFailedToConnect", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimeLongTimeoutAndFailedToConnect", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NoAccessForADUserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoAccessForADUserId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NoAccessForADUserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoAccessForADUserId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastTimeNoAccessForADUserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimeNoAccessForADUserId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastTimeNoAccessForADUserId", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimeNoAccessForADUserId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConnectionAttemptTimedOut", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConnectionAttemptTimedOut", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConnectionAttemptTimedOut", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConnectionAttemptTimedOut", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastTimeConnectionAttemptTimedOut", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimeConnectionAttemptTimedOut", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastTimeConnectionAttemptTimedOut", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimeConnectionAttemptTimedOut", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastTimeConnectionAttemptSucceeded", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimeConnectionAttemptSucceeded", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastTimeConnectionAttemptSucceeded", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimeConnectionAttemptSucceeded", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TimeItTookToConnect", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimeItTookToConnect", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TimeItTookToConnect", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimeItTookToConnect", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConnectTimeoutSetAtTimeOfTimeOut", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConnectTimeoutSetAtTimeOfTimeOut", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConnectTimeoutSetAtTimeOfTimeOut", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConnectTimeoutSetAtTimeOfTimeOut", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ClientFailedToMakeAConnection", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientFailedToMakeAConnection", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClientFailedToMakeAConnection", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientFailedToMakeAConnection", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastTimeClientFailedToMakeAConnection", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimeClientFailedToMakeAConnection", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastTimeClientFailedToMakeAConnection", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimeClientFailedToMakeAConnection", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LoginFailedForUserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoginFailedForUserId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LoginFailedForUserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoginFailedForUserId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastTimeLoginFailedForUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimeLoginFailedForUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastTimeLoginFailedForUser", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimeLoginFailedForUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Skip", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Skip", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DomainNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DomainNm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DbLinkLoginId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DbLinkLoginId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DbLinkLoginId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DbLinkLoginId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LinkedFromServerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LinkedFromServerId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LinkedFromServerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LinkedFromServerId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HostId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HostId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HostId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HostId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HostNm", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HostNm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HostNm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HostNm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HostOSDesc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HostOSDesc", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HostOSDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HostOSDesc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HostNmPhysicalNetBIOS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HostNmPhysicalNetBIOS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HostNmPhysicalNetBIOS", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HostNmPhysicalNetBIOS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Purpose", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Purpose", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MethodsUsedToDeterminePurpose", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MethodsUsedToDeterminePurpose", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MethodsUsedToDeterminePurpose", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MethodsUsedToDeterminePurpose", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Edition", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Edition", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Edition", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Edition", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EngineEdition", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EngineEdition", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EngineEdition", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EngineEdition", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EditionNm", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EditionNm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EditionNm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EditionNm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProductBuild", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductBuild", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductBuild", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductBuild", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProductBuildType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductBuildType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductBuildType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductBuildType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProductReleaseYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductReleaseYear", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductReleaseYear", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductReleaseYear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProductVersion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductVersion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductVersion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductVersion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProductLevel", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductLevel", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductLevel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductLevel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastKBApplied", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastKBApplied", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastKBApplied", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastKBApplied", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProductMajorVersion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductMajorVersion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductMajorVersion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductMajorVersion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProductMinorVersion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductMinorVersion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductMinorVersion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductMinorVersion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProductUpdateLevel", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductUpdateLevel", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductUpdateLevel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductUpdateLevel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Collation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Collation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Collation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Collation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FilestreamConfiguredLevel", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FilestreamConfiguredLevel", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FilestreamConfiguredLevel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FilestreamConfiguredLevel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FilestreamShareNm", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FilestreamShareNm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FilestreamShareNm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FilestreamShareNm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HadrManagerStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HadrManagerStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HadrManagerStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HadrManagerStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsHadrEnabled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsHadrEnabled", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsHadrEnabled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsHadrEnabled", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsXTPSupported", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsXTPSupported", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsXTPSupported", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsXTPSupported", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsClustered", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsClustered", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsClustered", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsClustered", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsPolyBaseInstalled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsPolyBaseInstalled", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsPolyBaseInstalled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsPolyBaseInstalled", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsIntegratedSecurityOnly", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsIntegratedSecurityOnly", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsIntegratedSecurityOnly", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsIntegratedSecurityOnly", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsSingleUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsSingleUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsSingleUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsSingleUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsFullTextInstalled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsFullTextInstalled", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsFullTextInstalled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsFullTextInstalled", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsAdvancedAnalyticsInstalled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsAdvancedAnalyticsInstalled", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsAdvancedAnalyticsInstalled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsAdvancedAnalyticsInstalled", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsLocalDb", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsLocalDb", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsLocalDb", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsLocalDb", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BuildClrVersion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BuildClrVersion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BuildClrVersion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BuildClrVersion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProcessId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProcessId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ComparisonStyle", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComparisonStyle", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ComparisonStyle", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComparisonStyle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SqlCharSetNm", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SqlCharSetNm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SqlCharSetNm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SqlCharSetNm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SqlSortOrderNm", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SqlSortOrderNm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SqlSortOrderNm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SqlSortOrderNm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BackupPrimaryPath", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BackupPrimaryPath", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BackupPrimaryPath", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BackupPrimaryPath", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BackupSecondaryPath", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BackupSecondaryPath", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BackupSecondaryPath", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BackupSecondaryPath", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastBackupName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastBackupName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastBackupName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastBackupName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Created", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Created", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CreatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Updated", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Updated", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Updated", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Updated", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UpdatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TestedButNoChange", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestedButNoChange", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TestedButNoChange", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestedButNoChange", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TestedButNoChangeBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestedButNoChangeBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TestedButNoChangeBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestedButNoChangeBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Audited", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Audited", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Audited", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Audited", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SourceId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SourceId2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceId2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SourceId2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceId2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SourceId3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceId3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SourceId3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceId3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SourceId4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceId4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SourceId4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceId4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsDMZ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsDMZ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsDMZ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsDMZ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FedFromServerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FedFromServerId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FedFromServerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FedFromServerId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FeedsIntoServerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FeedsIntoServerId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FeedsIntoServerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FeedsIntoServerId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Region", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Region", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Region", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Region", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [InfrastructureForSQLServer].[Servers] ([ServerNm], [ServerType], [Im" +
                "pl], [ServerDesc], [ServerAliases], [ServerEnvironments], [EnvironmentId], [Rest" +
                "rictionNotice], [RestrictedByNm], [Restricted], [InstanceNm], [IP4Address], [Fou" +
                "ndInDocument], [LegacySource], [NoLongerExists], [NoInfoDueToConnectFailure], [L" +
                "astTimePingSucceeded], [SuccessfulPingDurationNS], [LastTimePingFailed], [Failed" +
                "PingDurationNS], [LongTimeoutAndFailedToConnect], [LastTimeLongTimeoutAndFailedT" +
                "oConnect], [NoAccessForADUserId], [LastTimeNoAccessForADUserId], [ConnectionAtte" +
                "mptTimedOut], [LastTimeConnectionAttemptTimedOut], [LastTimeConnectionAttemptSuc" +
                "ceeded], [TimeItTookToConnect], [ConnectTimeoutSetAtTimeOfTimeOut], [ClientFaile" +
                "dToMakeAConnection], [LastTimeClientFailedToMakeAConnection], [LoginFailedForUse" +
                "rId], [LastTimeLoginFailedForUser], [DomainNm], [DbLinkLoginId], [LinkedFromServ" +
                "erId], [HostId], [HostNm], [HostOSDesc], [HostNmPhysicalNetBIOS], [Purpose], [Me" +
                "thodsUsedToDeterminePurpose], [Edition], [EngineEdition], [EditionNm], [ProductB" +
                "uild], [ProductBuildType], [ProductReleaseYear], [ProductVersion], [ProductLevel" +
                "], [LastKBApplied], [ProductMajorVersion], [ProductMinorVersion], [ProductUpdate" +
                "Level], [Collation], [ErrorLogFileNm], [FilestreamConfiguredLevel], [FilestreamS" +
                "hareNm], [HadrManagerStatus], [IsHadrEnabled], [IsXTPSupported], [IsClustered], " +
                "[IsPolyBaseInstalled], [IsIntegratedSecurityOnly], [IsSingleUser], [IsFullTextIn" +
                "stalled], [IsAdvancedAnalyticsInstalled], [IsLocalDb], [BuildClrVersion], [Proce" +
                "ssId], [ComparisonStyle], [SqlCharSetNm], [SqlSortOrderNm], [BackupPrimaryPath]," +
                " [BackupSecondaryPath], [LastBackupName], [Created], [CreatedBy], [Updated], [Up" +
                "datedBy], [TestedButNoChange], [TestedButNoChangeBy], [Audited], [SourceId], [So" +
                "urceId2], [SourceId3], [SourceId4], [IsDMZ], [FedFromServerId], [FeedsIntoServer" +
                "Id], [Region]) VALUES (@ServerNm, @ServerType, @Impl, @ServerDesc, @ServerAliase" +
                "s, @ServerEnvironments, @EnvironmentId, @RestrictionNotice, @RestrictedByNm, @Re" +
                "stricted, @InstanceNm, @IP4Address, @FoundInDocument, @LegacySource, @NoLongerEx" +
                "ists, @NoInfoDueToConnectFailure, @LastTimePingSucceeded, @SuccessfulPingDuratio" +
                "nNS, @LastTimePingFailed, @FailedPingDurationNS, @LongTimeoutAndFailedToConnect," +
                " @LastTimeLongTimeoutAndFailedToConnect, @NoAccessForADUserId, @LastTimeNoAccess" +
                "ForADUserId, @ConnectionAttemptTimedOut, @LastTimeConnectionAttemptTimedOut, @La" +
                "stTimeConnectionAttemptSucceeded, @TimeItTookToConnect, @ConnectTimeoutSetAtTime" +
                "OfTimeOut, @ClientFailedToMakeAConnection, @LastTimeClientFailedToMakeAConnectio" +
                "n, @LoginFailedForUserId, @LastTimeLoginFailedForUser, @DomainNm, @DbLinkLoginId" +
                ", @LinkedFromServerId, @HostId, @HostNm, @HostOSDesc, @HostNmPhysicalNetBIOS, @P" +
                "urpose, @MethodsUsedToDeterminePurpose, @Edition, @EngineEdition, @EditionNm, @P" +
                "roductBuild, @ProductBuildType, @ProductReleaseYear, @ProductVersion, @ProductLe" +
                "vel, @LastKBApplied, @ProductMajorVersion, @ProductMinorVersion, @ProductUpdateL" +
                "evel, @Collation, @ErrorLogFileNm, @FilestreamConfiguredLevel, @FilestreamShareN" +
                "m, @HadrManagerStatus, @IsHadrEnabled, @IsXTPSupported, @IsClustered, @IsPolyBas" +
                "eInstalled, @IsIntegratedSecurityOnly, @IsSingleUser, @IsFullTextInstalled, @IsA" +
                "dvancedAnalyticsInstalled, @IsLocalDb, @BuildClrVersion, @ProcessId, @Comparison" +
                "Style, @SqlCharSetNm, @SqlSortOrderNm, @BackupPrimaryPath, @BackupSecondaryPath," +
                " @LastBackupName, @Created, @CreatedBy, @Updated, @UpdatedBy, @TestedButNoChange" +
                ", @TestedButNoChangeBy, @Audited, @SourceId, @SourceId2, @SourceId3, @SourceId4," +
                " @IsDMZ, @FedFromServerId, @FeedsIntoServerId, @Region);\r\nSELECT ServerId, Serve" +
                "rNm, ServerType, Impl, ServerDesc, ServerAliases, ServerEnvironments, Environmen" +
                "tId, RestrictionNotice, RestrictedByNm, Restricted, InstanceNm, IP4Address, Foun" +
                "dInDocument, LegacySource, NoLongerExists, NoInfoDueToConnectFailure, LastTimePi" +
                "ngSucceeded, SuccessfulPingDurationNS, LastTimePingFailed, FailedPingDurationNS," +
                " PingFailed, LongTimeoutAndFailedToConnect, LastTimeLongTimeoutAndFailedToConnec" +
                "t, NoAccessForADUserId, LastTimeNoAccessForADUserId, ConnectionAttemptTimedOut, " +
                "LastTimeConnectionAttemptTimedOut, LastTimeConnectionAttemptSucceeded, TimeItToo" +
                "kToConnect, ConnectTimeoutSetAtTimeOfTimeOut, ClientFailedToMakeAConnection, Las" +
                "tTimeClientFailedToMakeAConnection, LoginFailedForUserId, LastTimeLoginFailedFor" +
                "User, Skip, DomainNm, DbLinkLoginId, LinkedFromServerId, HostId, HostNm, HostOSD" +
                "esc, HostNmPhysicalNetBIOS, Purpose, MethodsUsedToDeterminePurpose, Edition, Eng" +
                "ineEdition, EditionNm, ProductBuild, ProductBuildType, ProductReleaseYear, Produ" +
                "ctVersion, ProductLevel, LastKBApplied, ProductMajorVersion, ProductMinorVersion" +
                ", ProductUpdateLevel, Collation, ErrorLogFileNm, FilestreamConfiguredLevel, File" +
                "streamShareNm, HadrManagerStatus, IsHadrEnabled, IsXTPSupported, IsClustered, Is" +
                "PolyBaseInstalled, IsIntegratedSecurityOnly, IsSingleUser, IsFullTextInstalled, " +
                "IsAdvancedAnalyticsInstalled, IsLocalDb, BuildClrVersion, ProcessId, ComparisonS" +
                "tyle, SqlCharSetNm, SqlSortOrderNm, BackupPrimaryPath, BackupSecondaryPath, Last" +
                "BackupName, Created, CreatedBy, Updated, UpdatedBy, TestedButNoChange, TestedBut" +
                "NoChangeBy, Audited, SourceId, SourceId2, SourceId3, SourceId4, IsDMZ, FedFromSe" +
                "rverId, FeedsIntoServerId, Region FROM InfrastructureForSQLServer.Servers WHERE " +
                "(ServerId = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServerNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServerNm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServerType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServerType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Impl", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Impl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServerDesc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServerDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServerAliases", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServerAliases", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServerEnvironments", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServerEnvironments", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnvironmentId", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnvironmentId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RestrictionNotice", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RestrictionNotice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RestrictedByNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RestrictedByNm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Restricted", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Restricted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InstanceNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InstanceNm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP4Address", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP4Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FoundInDocument", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FoundInDocument", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LegacySource", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LegacySource", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NoLongerExists", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoLongerExists", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NoInfoDueToConnectFailure", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoInfoDueToConnectFailure", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastTimePingSucceeded", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimePingSucceeded", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SuccessfulPingDurationNS", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuccessfulPingDurationNS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastTimePingFailed", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimePingFailed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FailedPingDurationNS", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FailedPingDurationNS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LongTimeoutAndFailedToConnect", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LongTimeoutAndFailedToConnect", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastTimeLongTimeoutAndFailedToConnect", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimeLongTimeoutAndFailedToConnect", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NoAccessForADUserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoAccessForADUserId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastTimeNoAccessForADUserId", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimeNoAccessForADUserId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConnectionAttemptTimedOut", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConnectionAttemptTimedOut", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastTimeConnectionAttemptTimedOut", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimeConnectionAttemptTimedOut", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastTimeConnectionAttemptSucceeded", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimeConnectionAttemptSucceeded", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TimeItTookToConnect", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimeItTookToConnect", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConnectTimeoutSetAtTimeOfTimeOut", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConnectTimeoutSetAtTimeOfTimeOut", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClientFailedToMakeAConnection", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientFailedToMakeAConnection", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastTimeClientFailedToMakeAConnection", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimeClientFailedToMakeAConnection", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LoginFailedForUserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoginFailedForUserId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastTimeLoginFailedForUser", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimeLoginFailedForUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DomainNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DomainNm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DbLinkLoginId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DbLinkLoginId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LinkedFromServerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LinkedFromServerId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HostId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HostId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HostNm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HostNm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HostOSDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HostOSDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HostNmPhysicalNetBIOS", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HostNmPhysicalNetBIOS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MethodsUsedToDeterminePurpose", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MethodsUsedToDeterminePurpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Edition", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Edition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EngineEdition", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EngineEdition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EditionNm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EditionNm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductBuild", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductBuild", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductBuildType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductBuildType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductReleaseYear", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductReleaseYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductVersion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductVersion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductLevel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastKBApplied", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastKBApplied", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductMajorVersion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductMajorVersion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductMinorVersion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductMinorVersion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductUpdateLevel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductUpdateLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Collation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Collation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ErrorLogFileNm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ErrorLogFileNm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FilestreamConfiguredLevel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FilestreamConfiguredLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FilestreamShareNm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FilestreamShareNm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HadrManagerStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HadrManagerStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsHadrEnabled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsHadrEnabled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsXTPSupported", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsXTPSupported", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsClustered", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsClustered", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsPolyBaseInstalled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsPolyBaseInstalled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsIntegratedSecurityOnly", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsIntegratedSecurityOnly", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsSingleUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsSingleUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsFullTextInstalled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsFullTextInstalled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsAdvancedAnalyticsInstalled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsAdvancedAnalyticsInstalled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsLocalDb", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsLocalDb", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BuildClrVersion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BuildClrVersion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProcessId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ComparisonStyle", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComparisonStyle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SqlCharSetNm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SqlCharSetNm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SqlSortOrderNm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SqlSortOrderNm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BackupPrimaryPath", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BackupPrimaryPath", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BackupSecondaryPath", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BackupSecondaryPath", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastBackupName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastBackupName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Created", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Updated", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Updated", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TestedButNoChange", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestedButNoChange", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TestedButNoChangeBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestedButNoChangeBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Audited", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Audited", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SourceId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SourceId2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceId2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SourceId3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceId3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SourceId4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceId4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsDMZ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsDMZ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FedFromServerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FedFromServerId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FeedsIntoServerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FeedsIntoServerId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Region", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Region", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [InfrastructureForSQLServer].[Servers] SET [ServerNm] = @ServerNm, [Server" +
                "Type] = @ServerType, [Impl] = @Impl, [ServerDesc] = @ServerDesc, [ServerAliases]" +
                " = @ServerAliases, [ServerEnvironments] = @ServerEnvironments, [EnvironmentId] =" +
                " @EnvironmentId, [RestrictionNotice] = @RestrictionNotice, [RestrictedByNm] = @R" +
                "estrictedByNm, [Restricted] = @Restricted, [InstanceNm] = @InstanceNm, [IP4Addre" +
                "ss] = @IP4Address, [FoundInDocument] = @FoundInDocument, [LegacySource] = @Legac" +
                "ySource, [NoLongerExists] = @NoLongerExists, [NoInfoDueToConnectFailure] = @NoIn" +
                "foDueToConnectFailure, [LastTimePingSucceeded] = @LastTimePingSucceeded, [Succes" +
                "sfulPingDurationNS] = @SuccessfulPingDurationNS, [LastTimePingFailed] = @LastTim" +
                "ePingFailed, [FailedPingDurationNS] = @FailedPingDurationNS, [LongTimeoutAndFail" +
                "edToConnect] = @LongTimeoutAndFailedToConnect, [LastTimeLongTimeoutAndFailedToCo" +
                "nnect] = @LastTimeLongTimeoutAndFailedToConnect, [NoAccessForADUserId] = @NoAcce" +
                "ssForADUserId, [LastTimeNoAccessForADUserId] = @LastTimeNoAccessForADUserId, [Co" +
                "nnectionAttemptTimedOut] = @ConnectionAttemptTimedOut, [LastTimeConnectionAttemp" +
                "tTimedOut] = @LastTimeConnectionAttemptTimedOut, [LastTimeConnectionAttemptSucce" +
                "eded] = @LastTimeConnectionAttemptSucceeded, [TimeItTookToConnect] = @TimeItTook" +
                "ToConnect, [ConnectTimeoutSetAtTimeOfTimeOut] = @ConnectTimeoutSetAtTimeOfTimeOu" +
                "t, [ClientFailedToMakeAConnection] = @ClientFailedToMakeAConnection, [LastTimeCl" +
                "ientFailedToMakeAConnection] = @LastTimeClientFailedToMakeAConnection, [LoginFai" +
                "ledForUserId] = @LoginFailedForUserId, [LastTimeLoginFailedForUser] = @LastTimeL" +
                "oginFailedForUser, [DomainNm] = @DomainNm, [DbLinkLoginId] = @DbLinkLoginId, [Li" +
                "nkedFromServerId] = @LinkedFromServerId, [HostId] = @HostId, [HostNm] = @HostNm," +
                " [HostOSDesc] = @HostOSDesc, [HostNmPhysicalNetBIOS] = @HostNmPhysicalNetBIOS, [" +
                "Purpose] = @Purpose, [MethodsUsedToDeterminePurpose] = @MethodsUsedToDeterminePu" +
                "rpose, [Edition] = @Edition, [EngineEdition] = @EngineEdition, [EditionNm] = @Ed" +
                "itionNm, [ProductBuild] = @ProductBuild, [ProductBuildType] = @ProductBuildType," +
                " [ProductReleaseYear] = @ProductReleaseYear, [ProductVersion] = @ProductVersion," +
                " [ProductLevel] = @ProductLevel, [LastKBApplied] = @LastKBApplied, [ProductMajor" +
                "Version] = @ProductMajorVersion, [ProductMinorVersion] = @ProductMinorVersion, [" +
                "ProductUpdateLevel] = @ProductUpdateLevel, [Collation] = @Collation, [ErrorLogFi" +
                "leNm] = @ErrorLogFileNm, [FilestreamConfiguredLevel] = @FilestreamConfiguredLeve" +
                "l, [FilestreamShareNm] = @FilestreamShareNm, [HadrManagerStatus] = @HadrManagerS" +
                "tatus, [IsHadrEnabled] = @IsHadrEnabled, [IsXTPSupported] = @IsXTPSupported, [Is" +
                "Clustered] = @IsClustered, [IsPolyBaseInstalled] = @IsPolyBaseInstalled, [IsInte" +
                "gratedSecurityOnly] = @IsIntegratedSecurityOnly, [IsSingleUser] = @IsSingleUser," +
                " [IsFullTextInstalled] = @IsFullTextInstalled, [IsAdvancedAnalyticsInstalled] = " +
                "@IsAdvancedAnalyticsInstalled, [IsLocalDb] = @IsLocalDb, [BuildClrVersion] = @Bu" +
                "ildClrVersion, [ProcessId] = @ProcessId, [ComparisonStyle] = @ComparisonStyle, [" +
                "SqlCharSetNm] = @SqlCharSetNm, [SqlSortOrderNm] = @SqlSortOrderNm, [BackupPrimar" +
                "yPath] = @BackupPrimaryPath, [BackupSecondaryPath] = @BackupSecondaryPath, [Last" +
                "BackupName] = @LastBackupName, [Created] = @Created, [CreatedBy] = @CreatedBy, [" +
                "Updated] = @Updated, [UpdatedBy] = @UpdatedBy, [TestedButNoChange] = @TestedButN" +
                "oChange, [TestedButNoChangeBy] = @TestedButNoChangeBy, [Audited] = @Audited, [So" +
                "urceId] = @SourceId, [SourceId2] = @SourceId2, [SourceId3] = @SourceId3, [Source" +
                "Id4] = @SourceId4, [IsDMZ] = @IsDMZ, [FedFromServerId] = @FedFromServerId, [Feed" +
                "sIntoServerId] = @FeedsIntoServerId, [Region] = @Region WHERE (([ServerId] = @Or" +
                "iginal_ServerId) AND ([ServerNm] = @Original_ServerNm) AND ((@IsNull_ServerType " +
                "= 1 AND [ServerType] IS NULL) OR ([ServerType] = @Original_ServerType)) AND ((@I" +
                "sNull_Impl = 1 AND [Impl] IS NULL) OR ([Impl] = @Original_Impl)) AND ((@IsNull_S" +
                "erverAliases = 1 AND [ServerAliases] IS NULL) OR ([ServerAliases] = @Original_Se" +
                "rverAliases)) AND ((@IsNull_ServerEnvironments = 1 AND [ServerEnvironments] IS N" +
                "ULL) OR ([ServerEnvironments] = @Original_ServerEnvironments)) AND ((@IsNull_Env" +
                "ironmentId = 1 AND [EnvironmentId] IS NULL) OR ([EnvironmentId] = @Original_Envi" +
                "ronmentId)) AND ((@IsNull_RestrictionNotice = 1 AND [RestrictionNotice] IS NULL)" +
                " OR ([RestrictionNotice] = @Original_RestrictionNotice)) AND ((@IsNull_Restricte" +
                "dByNm = 1 AND [RestrictedByNm] IS NULL) OR ([RestrictedByNm] = @Original_Restric" +
                "tedByNm)) AND ((@IsNull_Restricted = 1 AND [Restricted] IS NULL) OR ([Restricted" +
                "] = @Original_Restricted)) AND ((@IsNull_InstanceNm = 1 AND [InstanceNm] IS NULL" +
                ") OR ([InstanceNm] = @Original_InstanceNm)) AND ((@IsNull_IP4Address = 1 AND [IP" +
                "4Address] IS NULL) OR ([IP4Address] = @Original_IP4Address)) AND ((@IsNull_Found" +
                "InDocument = 1 AND [FoundInDocument] IS NULL) OR ([FoundInDocument] = @Original_" +
                "FoundInDocument)) AND ((@IsNull_LegacySource = 1 AND [LegacySource] IS NULL) OR " +
                "([LegacySource] = @Original_LegacySource)) AND ((@IsNull_NoLongerExists = 1 AND " +
                "[NoLongerExists] IS NULL) OR ([NoLongerExists] = @Original_NoLongerExists)) AND " +
                "([NoInfoDueToConnectFailure] = @Original_NoInfoDueToConnectFailure) AND ((@IsNul" +
                "l_LastTimePingSucceeded = 1 AND [LastTimePingSucceeded] IS NULL) OR ([LastTimePi" +
                "ngSucceeded] = @Original_LastTimePingSucceeded)) AND ((@IsNull_SuccessfulPingDur" +
                "ationNS = 1 AND [SuccessfulPingDurationNS] IS NULL) OR ([SuccessfulPingDurationN" +
                "S] = @Original_SuccessfulPingDurationNS)) AND ((@IsNull_LastTimePingFailed = 1 A" +
                "ND [LastTimePingFailed] IS NULL) OR ([LastTimePingFailed] = @Original_LastTimePi" +
                "ngFailed)) AND ((@IsNull_FailedPingDurationNS = 1 AND [FailedPingDurationNS] IS " +
                "NULL) OR ([FailedPingDurationNS] = @Original_FailedPingDurationNS)) AND ((@IsNul" +
                "l_PingFailed = 1 AND [PingFailed] IS NULL) OR ([PingFailed] = @Original_PingFail" +
                "ed)) AND ((@IsNull_LongTimeoutAndFailedToConnect = 1 AND [LongTimeoutAndFailedTo" +
                "Connect] IS NULL) OR ([LongTimeoutAndFailedToConnect] = @Original_LongTimeoutAnd" +
                "FailedToConnect)) AND ((@IsNull_LastTimeLongTimeoutAndFailedToConnect = 1 AND [L" +
                "astTimeLongTimeoutAndFailedToConnect] IS NULL) OR ([LastTimeLongTimeoutAndFailed" +
                "ToConnect] = @Original_LastTimeLongTimeoutAndFailedToConnect)) AND ((@IsNull_NoA" +
                "ccessForADUserId = 1 AND [NoAccessForADUserId] IS NULL) OR ([NoAccessForADUserId" +
                "] = @Original_NoAccessForADUserId)) AND ((@IsNull_LastTimeNoAccessForADUserId = " +
                "1 AND [LastTimeNoAccessForADUserId] IS NULL) OR ([LastTimeNoAccessForADUserId] =" +
                " @Original_LastTimeNoAccessForADUserId)) AND ((@IsNull_ConnectionAttemptTimedOut" +
                " = 1 AND [ConnectionAttemptTimedOut] IS NULL) OR ([ConnectionAttemptTimedOut] = " +
                "@Original_ConnectionAttemptTimedOut)) AND ((@IsNull_LastTimeConnectionAttemptTim" +
                "edOut = 1 AND [LastTimeConnectionAttemptTimedOut] IS NULL) OR ([LastTimeConnecti" +
                "onAttemptTimedOut] = @Original_LastTimeConnectionAttemptTimedOut)) AND ((@IsNull" +
                "_LastTimeConnectionAttemptSucceeded = 1 AND [LastTimeConnectionAttemptSucceeded]" +
                " IS NULL) OR ([LastTimeConnectionAttemptSucceeded] = @Original_LastTimeConnectio" +
                "nAttemptSucceeded)) AND ((@IsNull_TimeItTookToConnect = 1 AND [TimeItTookToConne" +
                "ct] IS NULL) OR ([TimeItTookToConnect] = @Original_TimeItTookToConnect)) AND ((@" +
                "IsNull_ConnectTimeoutSetAtTimeOfTimeOut = 1 AND [ConnectTimeoutSetAtTimeOfTimeOu" +
                "t] IS NULL) OR ([ConnectTimeoutSetAtTimeOfTimeOut] = @Original_ConnectTimeoutSet" +
                "AtTimeOfTimeOut)) AND ((@IsNull_ClientFailedToMakeAConnection = 1 AND [ClientFai" +
                "ledToMakeAConnection] IS NULL) OR ([ClientFailedToMakeAConnection] = @Original_C" +
                "lientFailedToMakeAConnection)) AND ((@IsNull_LastTimeClientFailedToMakeAConnecti" +
                "on = 1 AND [LastTimeClientFailedToMakeAConnection] IS NULL) OR ([LastTimeClientF" +
                "ailedToMakeAConnection] = @Original_LastTimeClientFailedToMakeAConnection)) AND " +
                "((@IsNull_LoginFailedForUserId = 1 AND [LoginFailedForUserId] IS NULL) OR ([Logi" +
                "nFailedForUserId] = @Original_LoginFailedForUserId)) AND ((@IsNull_LastTimeLogin" +
                "FailedForUser = 1 AND [LastTimeLoginFailedForUser] IS NULL) OR ([LastTimeLoginFa" +
                "iledForUser] = @Original_LastTimeLoginFailedForUser)) AND ([Skip] = @Original_Sk" +
                "ip) AND ([DomainNm] = @Original_DomainNm) AND ((@IsNull_DbLinkLoginId = 1 AND [D" +
                "bLinkLoginId] IS NULL) OR ([DbLinkLoginId] = @Original_DbLinkLoginId)) AND ((@Is" +
                "Null_LinkedFromServerId = 1 AND [LinkedFromServerId] IS NULL) OR ([LinkedFromSer" +
                "verId] = @Original_LinkedFromServerId)) AND ((@IsNull_HostId = 1 AND [HostId] IS" +
                " NULL) OR ([HostId] = @Original_HostId)) AND ((@IsNull_HostNm = 1 AND [HostNm] I" +
                "S NULL) OR ([HostNm] = @Original_HostNm)) AND ((@IsNull_HostOSDesc = 1 AND [Host" +
                "OSDesc] IS NULL) OR ([HostOSDesc] = @Original_HostOSDesc)) AND ((@IsNull_HostNmP" +
                "hysicalNetBIOS = 1 AND [HostNmPhysicalNetBIOS] IS NULL) OR ([HostNmPhysicalNetBI" +
                "OS] = @Original_HostNmPhysicalNetBIOS)) AND ((@IsNull_Purpose = 1 AND [Purpose] " +
                "IS NULL) OR ([Purpose] = @Original_Purpose)) AND ((@IsNull_MethodsUsedToDetermin" +
                "ePurpose = 1 AND [MethodsUsedToDeterminePurpose] IS NULL) OR ([MethodsUsedToDete" +
                "rminePurpose] = @Original_MethodsUsedToDeterminePurpose)) AND ((@IsNull_Edition " +
                "= 1 AND [Edition] IS NULL) OR ([Edition] = @Original_Edition)) AND ((@IsNull_Eng" +
                "ineEdition = 1 AND [EngineEdition] IS NULL) OR ([EngineEdition] = @Original_Engi" +
                "neEdition)) AND ((@IsNull_EditionNm = 1 AND [EditionNm] IS NULL) OR ([EditionNm]" +
                " = @Original_EditionNm)) AND ((@IsNull_ProductBuild = 1 AND [ProductBuild] IS NU" +
                "LL) OR ([ProductBuild] = @Original_ProductBuild)) AND ((@IsNull_ProductBuildType" +
                " = 1 AND [ProductBuildType] IS NULL) OR ([ProductBuildType] = @Original_ProductB" +
                "uildType)) AND ((@IsNull_ProductReleaseYear = 1 AND [ProductReleaseYear] IS NULL" +
                ") OR ([ProductReleaseYear] = @Original_ProductReleaseYear)) AND ((@IsNull_Produc" +
                "tVersion = 1 AND [ProductVersion] IS NULL) OR ([ProductVersion] = @Original_Prod" +
                "uctVersion)) AND ((@IsNull_ProductLevel = 1 AND [ProductLevel] IS NULL) OR ([Pro" +
                "ductLevel] = @Original_ProductLevel)) AND ((@IsNull_LastKBApplied = 1 AND [LastK" +
                "BApplied] IS NULL) OR ([LastKBApplied] = @Original_LastKBApplied)) AND ((@IsNull" +
                "_ProductMajorVersion = 1 AND [ProductMajorVersion] IS NULL) OR ([ProductMajorVer" +
                "sion] = @Original_ProductMajorVersion)) AND ((@IsNull_ProductMinorVersion = 1 AN" +
                "D [ProductMinorVersion] IS NULL) OR ([ProductMinorVersion] = @Original_ProductMi" +
                "norVersion)) AND ((@IsNull_ProductUpdateLevel = 1 AND [ProductUpdateLevel] IS NU" +
                "LL) OR ([ProductUpdateLevel] = @Original_ProductUpdateLevel)) AND ((@IsNull_Coll" +
                "ation = 1 AND [Collation] IS NULL) OR ([Collation] = @Original_Collation)) AND (" +
                "(@IsNull_FilestreamConfiguredLevel = 1 AND [FilestreamConfiguredLevel] IS NULL) " +
                "OR ([FilestreamConfiguredLevel] = @Original_FilestreamConfiguredLevel)) AND ((@I" +
                "sNull_FilestreamShareNm = 1 AND [FilestreamShareNm] IS NULL) OR ([FilestreamShar" +
                "eNm] = @Original_FilestreamShareNm)) AND ((@IsNull_HadrManagerStatus = 1 AND [Ha" +
                "drManagerStatus] IS NULL) OR ([HadrManagerStatus] = @Original_HadrManagerStatus)" +
                ") AND ((@IsNull_IsHadrEnabled = 1 AND [IsHadrEnabled] IS NULL) OR ([IsHadrEnable" +
                "d] = @Original_IsHadrEnabled)) AND ((@IsNull_IsXTPSupported = 1 AND [IsXTPSuppor" +
                "ted] IS NULL) OR ([IsXTPSupported] = @Original_IsXTPSupported)) AND ((@IsNull_Is" +
                "Clustered = 1 AND [IsClustered] IS NULL) OR ([IsClustered] = @Original_IsCluster" +
                "ed)) AND ((@IsNull_IsPolyBaseInstalled = 1 AND [IsPolyBaseInstalled] IS NULL) OR" +
                " ([IsPolyBaseInstalled] = @Original_IsPolyBaseInstalled)) AND ((@IsNull_IsIntegr" +
                "atedSecurityOnly = 1 AND [IsIntegratedSecurityOnly] IS NULL) OR ([IsIntegratedSe" +
                "curityOnly] = @Original_IsIntegratedSecurityOnly)) AND ((@IsNull_IsSingleUser = " +
                "1 AND [IsSingleUser] IS NULL) OR ([IsSingleUser] = @Original_IsSingleUser)) AND " +
                "((@IsNull_IsFullTextInstalled = 1 AND [IsFullTextInstalled] IS NULL) OR ([IsFull" +
                "TextInstalled] = @Original_IsFullTextInstalled)) AND ((@IsNull_IsAdvancedAnalyti" +
                "csInstalled = 1 AND [IsAdvancedAnalyticsInstalled] IS NULL) OR ([IsAdvancedAnaly" +
                "ticsInstalled] = @Original_IsAdvancedAnalyticsInstalled)) AND ((@IsNull_IsLocalD" +
                "b = 1 AND [IsLocalDb] IS NULL) OR ([IsLocalDb] = @Original_IsLocalDb)) AND ((@Is" +
                "Null_BuildClrVersion = 1 AND [BuildClrVersion] IS NULL) OR ([BuildClrVersion] = " +
                "@Original_BuildClrVersion)) AND ((@IsNull_ProcessId = 1 AND [ProcessId] IS NULL)" +
                " OR ([ProcessId] = @Original_ProcessId)) AND ((@IsNull_ComparisonStyle = 1 AND [" +
                "ComparisonStyle] IS NULL) OR ([ComparisonStyle] = @Original_ComparisonStyle)) AN" +
                "D ((@IsNull_SqlCharSetNm = 1 AND [SqlCharSetNm] IS NULL) OR ([SqlCharSetNm] = @O" +
                "riginal_SqlCharSetNm)) AND ((@IsNull_SqlSortOrderNm = 1 AND [SqlSortOrderNm] IS " +
                "NULL) OR ([SqlSortOrderNm] = @Original_SqlSortOrderNm)) AND ((@IsNull_BackupPrim" +
                "aryPath = 1 AND [BackupPrimaryPath] IS NULL) OR ([BackupPrimaryPath] = @Original" +
                "_BackupPrimaryPath)) AND ((@IsNull_BackupSecondaryPath = 1 AND [BackupSecondaryP" +
                "ath] IS NULL) OR ([BackupSecondaryPath] = @Original_BackupSecondaryPath)) AND ((" +
                "@IsNull_LastBackupName = 1 AND [LastBackupName] IS NULL) OR ([LastBackupName] = " +
                "@Original_LastBackupName)) AND ((@IsNull_Created = 1 AND [Created] IS NULL) OR (" +
                "[Created] = @Original_Created)) AND ((@IsNull_CreatedBy = 1 AND [CreatedBy] IS N" +
                "ULL) OR ([CreatedBy] = @Original_CreatedBy)) AND ((@IsNull_Updated = 1 AND [Upda" +
                "ted] IS NULL) OR ([Updated] = @Original_Updated)) AND ((@IsNull_UpdatedBy = 1 AN" +
                "D [UpdatedBy] IS NULL) OR ([UpdatedBy] = @Original_UpdatedBy)) AND ((@IsNull_Tes" +
                "tedButNoChange = 1 AND [TestedButNoChange] IS NULL) OR ([TestedButNoChange] = @O" +
                "riginal_TestedButNoChange)) AND ((@IsNull_TestedButNoChangeBy = 1 AND [TestedBut" +
                "NoChangeBy] IS NULL) OR ([TestedButNoChangeBy] = @Original_TestedButNoChangeBy))" +
                " AND ((@IsNull_Audited = 1 AND [Audited] IS NULL) OR ([Audited] = @Original_Audi" +
                "ted)) AND ([SourceId] = @Original_SourceId) AND ((@IsNull_SourceId2 = 1 AND [Sou" +
                "rceId2] IS NULL) OR ([SourceId2] = @Original_SourceId2)) AND ((@IsNull_SourceId3" +
                " = 1 AND [SourceId3] IS NULL) OR ([SourceId3] = @Original_SourceId3)) AND ((@IsN" +
                "ull_SourceId4 = 1 AND [SourceId4] IS NULL) OR ([SourceId4] = @Original_SourceId4" +
                ")) AND ((@IsNull_IsDMZ = 1 AND [IsDMZ] IS NULL) OR ([IsDMZ] = @Original_IsDMZ)) " +
                "AND ((@IsNull_FedFromServerId = 1 AND [FedFromServerId] IS NULL) OR ([FedFromSer" +
                "verId] = @Original_FedFromServerId)) AND ((@IsNull_FeedsIntoServerId = 1 AND [Fe" +
                "edsIntoServerId] IS NULL) OR ([FeedsIntoServerId] = @Original_FeedsIntoServerId)" +
                ") AND ((@IsNull_Region = 1 AND [Region] IS NULL) OR ([Region] = @Original_Region" +
                ")));\r\nSELECT ServerId, ServerNm, ServerType, Impl, ServerDesc, ServerAliases, Se" +
                "rverEnvironments, EnvironmentId, RestrictionNotice, RestrictedByNm, Restricted, " +
                "InstanceNm, IP4Address, FoundInDocument, LegacySource, NoLongerExists, NoInfoDue" +
                "ToConnectFailure, LastTimePingSucceeded, SuccessfulPingDurationNS, LastTimePingF" +
                "ailed, FailedPingDurationNS, PingFailed, LongTimeoutAndFailedToConnect, LastTime" +
                "LongTimeoutAndFailedToConnect, NoAccessForADUserId, LastTimeNoAccessForADUserId," +
                " ConnectionAttemptTimedOut, LastTimeConnectionAttemptTimedOut, LastTimeConnectio" +
                "nAttemptSucceeded, TimeItTookToConnect, ConnectTimeoutSetAtTimeOfTimeOut, Client" +
                "FailedToMakeAConnection, LastTimeClientFailedToMakeAConnection, LoginFailedForUs" +
                "erId, LastTimeLoginFailedForUser, Skip, DomainNm, DbLinkLoginId, LinkedFromServe" +
                "rId, HostId, HostNm, HostOSDesc, HostNmPhysicalNetBIOS, Purpose, MethodsUsedToDe" +
                "terminePurpose, Edition, EngineEdition, EditionNm, ProductBuild, ProductBuildTyp" +
                "e, ProductReleaseYear, ProductVersion, ProductLevel, LastKBApplied, ProductMajor" +
                "Version, ProductMinorVersion, ProductUpdateLevel, Collation, ErrorLogFileNm, Fil" +
                "estreamConfiguredLevel, FilestreamShareNm, HadrManagerStatus, IsHadrEnabled, IsX" +
                "TPSupported, IsClustered, IsPolyBaseInstalled, IsIntegratedSecurityOnly, IsSingl" +
                "eUser, IsFullTextInstalled, IsAdvancedAnalyticsInstalled, IsLocalDb, BuildClrVer" +
                "sion, ProcessId, ComparisonStyle, SqlCharSetNm, SqlSortOrderNm, BackupPrimaryPat" +
                "h, BackupSecondaryPath, LastBackupName, Created, CreatedBy, Updated, UpdatedBy, " +
                "TestedButNoChange, TestedButNoChangeBy, Audited, SourceId, SourceId2, SourceId3," +
                " SourceId4, IsDMZ, FedFromServerId, FeedsIntoServerId, Region FROM Infrastructur" +
                "eForSQLServer.Servers WHERE (ServerId = @ServerId)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServerNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServerNm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServerType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServerType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Impl", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Impl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServerDesc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServerDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServerAliases", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServerAliases", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServerEnvironments", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServerEnvironments", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnvironmentId", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnvironmentId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RestrictionNotice", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RestrictionNotice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RestrictedByNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RestrictedByNm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Restricted", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Restricted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InstanceNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InstanceNm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP4Address", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP4Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FoundInDocument", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FoundInDocument", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LegacySource", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LegacySource", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NoLongerExists", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoLongerExists", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NoInfoDueToConnectFailure", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoInfoDueToConnectFailure", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastTimePingSucceeded", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimePingSucceeded", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SuccessfulPingDurationNS", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuccessfulPingDurationNS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastTimePingFailed", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimePingFailed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FailedPingDurationNS", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FailedPingDurationNS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LongTimeoutAndFailedToConnect", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LongTimeoutAndFailedToConnect", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastTimeLongTimeoutAndFailedToConnect", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimeLongTimeoutAndFailedToConnect", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NoAccessForADUserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoAccessForADUserId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastTimeNoAccessForADUserId", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimeNoAccessForADUserId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConnectionAttemptTimedOut", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConnectionAttemptTimedOut", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastTimeConnectionAttemptTimedOut", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimeConnectionAttemptTimedOut", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastTimeConnectionAttemptSucceeded", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimeConnectionAttemptSucceeded", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TimeItTookToConnect", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimeItTookToConnect", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConnectTimeoutSetAtTimeOfTimeOut", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConnectTimeoutSetAtTimeOfTimeOut", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClientFailedToMakeAConnection", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientFailedToMakeAConnection", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastTimeClientFailedToMakeAConnection", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimeClientFailedToMakeAConnection", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LoginFailedForUserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoginFailedForUserId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastTimeLoginFailedForUser", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimeLoginFailedForUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DomainNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DomainNm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DbLinkLoginId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DbLinkLoginId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LinkedFromServerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LinkedFromServerId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HostId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HostId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HostNm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HostNm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HostOSDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HostOSDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HostNmPhysicalNetBIOS", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HostNmPhysicalNetBIOS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MethodsUsedToDeterminePurpose", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MethodsUsedToDeterminePurpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Edition", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Edition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EngineEdition", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EngineEdition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EditionNm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EditionNm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductBuild", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductBuild", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductBuildType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductBuildType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductReleaseYear", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductReleaseYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductVersion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductVersion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductLevel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastKBApplied", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastKBApplied", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductMajorVersion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductMajorVersion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductMinorVersion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductMinorVersion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductUpdateLevel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductUpdateLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Collation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Collation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ErrorLogFileNm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ErrorLogFileNm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FilestreamConfiguredLevel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FilestreamConfiguredLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FilestreamShareNm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FilestreamShareNm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HadrManagerStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HadrManagerStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsHadrEnabled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsHadrEnabled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsXTPSupported", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsXTPSupported", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsClustered", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsClustered", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsPolyBaseInstalled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsPolyBaseInstalled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsIntegratedSecurityOnly", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsIntegratedSecurityOnly", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsSingleUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsSingleUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsFullTextInstalled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsFullTextInstalled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsAdvancedAnalyticsInstalled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsAdvancedAnalyticsInstalled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsLocalDb", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsLocalDb", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BuildClrVersion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BuildClrVersion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProcessId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ComparisonStyle", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComparisonStyle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SqlCharSetNm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SqlCharSetNm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SqlSortOrderNm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SqlSortOrderNm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BackupPrimaryPath", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BackupPrimaryPath", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BackupSecondaryPath", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BackupSecondaryPath", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastBackupName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastBackupName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Created", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Updated", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Updated", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TestedButNoChange", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestedButNoChange", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TestedButNoChangeBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestedButNoChangeBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Audited", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Audited", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SourceId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SourceId2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceId2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SourceId3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceId3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SourceId4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceId4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsDMZ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsDMZ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FedFromServerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FedFromServerId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FeedsIntoServerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FeedsIntoServerId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Region", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Region", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ServerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServerId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ServerNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServerNm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ServerType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServerType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ServerType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServerType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Impl", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Impl", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Impl", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Impl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ServerAliases", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServerAliases", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ServerAliases", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServerAliases", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ServerEnvironments", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServerEnvironments", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ServerEnvironments", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServerEnvironments", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EnvironmentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnvironmentId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EnvironmentId", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnvironmentId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RestrictionNotice", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RestrictionNotice", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RestrictionNotice", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RestrictionNotice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RestrictedByNm", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RestrictedByNm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RestrictedByNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RestrictedByNm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Restricted", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Restricted", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Restricted", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Restricted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InstanceNm", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InstanceNm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InstanceNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InstanceNm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP4Address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP4Address", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP4Address", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP4Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FoundInDocument", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FoundInDocument", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FoundInDocument", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FoundInDocument", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LegacySource", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LegacySource", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LegacySource", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LegacySource", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NoLongerExists", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoLongerExists", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NoLongerExists", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoLongerExists", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NoInfoDueToConnectFailure", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoInfoDueToConnectFailure", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastTimePingSucceeded", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimePingSucceeded", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastTimePingSucceeded", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimePingSucceeded", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SuccessfulPingDurationNS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuccessfulPingDurationNS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SuccessfulPingDurationNS", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuccessfulPingDurationNS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastTimePingFailed", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimePingFailed", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastTimePingFailed", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimePingFailed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FailedPingDurationNS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FailedPingDurationNS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FailedPingDurationNS", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FailedPingDurationNS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PingFailed", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PingFailed", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PingFailed", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PingFailed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LongTimeoutAndFailedToConnect", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LongTimeoutAndFailedToConnect", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LongTimeoutAndFailedToConnect", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LongTimeoutAndFailedToConnect", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastTimeLongTimeoutAndFailedToConnect", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimeLongTimeoutAndFailedToConnect", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastTimeLongTimeoutAndFailedToConnect", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimeLongTimeoutAndFailedToConnect", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NoAccessForADUserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoAccessForADUserId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NoAccessForADUserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoAccessForADUserId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastTimeNoAccessForADUserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimeNoAccessForADUserId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastTimeNoAccessForADUserId", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimeNoAccessForADUserId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConnectionAttemptTimedOut", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConnectionAttemptTimedOut", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConnectionAttemptTimedOut", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConnectionAttemptTimedOut", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastTimeConnectionAttemptTimedOut", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimeConnectionAttemptTimedOut", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastTimeConnectionAttemptTimedOut", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimeConnectionAttemptTimedOut", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastTimeConnectionAttemptSucceeded", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimeConnectionAttemptSucceeded", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastTimeConnectionAttemptSucceeded", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimeConnectionAttemptSucceeded", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TimeItTookToConnect", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimeItTookToConnect", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TimeItTookToConnect", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimeItTookToConnect", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConnectTimeoutSetAtTimeOfTimeOut", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConnectTimeoutSetAtTimeOfTimeOut", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConnectTimeoutSetAtTimeOfTimeOut", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConnectTimeoutSetAtTimeOfTimeOut", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ClientFailedToMakeAConnection", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientFailedToMakeAConnection", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClientFailedToMakeAConnection", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientFailedToMakeAConnection", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastTimeClientFailedToMakeAConnection", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimeClientFailedToMakeAConnection", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastTimeClientFailedToMakeAConnection", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimeClientFailedToMakeAConnection", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LoginFailedForUserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoginFailedForUserId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LoginFailedForUserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoginFailedForUserId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastTimeLoginFailedForUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimeLoginFailedForUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastTimeLoginFailedForUser", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTimeLoginFailedForUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Skip", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Skip", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DomainNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DomainNm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DbLinkLoginId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DbLinkLoginId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DbLinkLoginId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DbLinkLoginId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LinkedFromServerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LinkedFromServerId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LinkedFromServerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LinkedFromServerId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HostId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HostId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HostId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HostId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HostNm", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HostNm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HostNm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HostNm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HostOSDesc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HostOSDesc", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HostOSDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HostOSDesc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HostNmPhysicalNetBIOS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HostNmPhysicalNetBIOS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HostNmPhysicalNetBIOS", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HostNmPhysicalNetBIOS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Purpose", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Purpose", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MethodsUsedToDeterminePurpose", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MethodsUsedToDeterminePurpose", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MethodsUsedToDeterminePurpose", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MethodsUsedToDeterminePurpose", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Edition", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Edition", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Edition", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Edition", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EngineEdition", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EngineEdition", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EngineEdition", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EngineEdition", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EditionNm", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EditionNm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EditionNm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EditionNm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProductBuild", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductBuild", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductBuild", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductBuild", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProductBuildType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductBuildType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductBuildType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductBuildType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProductReleaseYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductReleaseYear", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductReleaseYear", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductReleaseYear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProductVersion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductVersion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductVersion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductVersion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProductLevel", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductLevel", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductLevel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductLevel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastKBApplied", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastKBApplied", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastKBApplied", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastKBApplied", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProductMajorVersion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductMajorVersion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductMajorVersion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductMajorVersion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProductMinorVersion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductMinorVersion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductMinorVersion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductMinorVersion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProductUpdateLevel", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductUpdateLevel", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductUpdateLevel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductUpdateLevel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Collation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Collation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Collation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Collation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FilestreamConfiguredLevel", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FilestreamConfiguredLevel", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FilestreamConfiguredLevel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FilestreamConfiguredLevel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FilestreamShareNm", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FilestreamShareNm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FilestreamShareNm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FilestreamShareNm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HadrManagerStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HadrManagerStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HadrManagerStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HadrManagerStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsHadrEnabled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsHadrEnabled", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsHadrEnabled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsHadrEnabled", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsXTPSupported", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsXTPSupported", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsXTPSupported", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsXTPSupported", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsClustered", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsClustered", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsClustered", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsClustered", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsPolyBaseInstalled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsPolyBaseInstalled", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsPolyBaseInstalled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsPolyBaseInstalled", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsIntegratedSecurityOnly", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsIntegratedSecurityOnly", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsIntegratedSecurityOnly", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsIntegratedSecurityOnly", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsSingleUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsSingleUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsSingleUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsSingleUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsFullTextInstalled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsFullTextInstalled", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsFullTextInstalled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsFullTextInstalled", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsAdvancedAnalyticsInstalled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsAdvancedAnalyticsInstalled", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsAdvancedAnalyticsInstalled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsAdvancedAnalyticsInstalled", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsLocalDb", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsLocalDb", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsLocalDb", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsLocalDb", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BuildClrVersion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BuildClrVersion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BuildClrVersion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BuildClrVersion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProcessId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProcessId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ComparisonStyle", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComparisonStyle", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ComparisonStyle", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComparisonStyle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SqlCharSetNm", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SqlCharSetNm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SqlCharSetNm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SqlCharSetNm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SqlSortOrderNm", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SqlSortOrderNm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SqlSortOrderNm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SqlSortOrderNm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BackupPrimaryPath", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BackupPrimaryPath", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BackupPrimaryPath", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BackupPrimaryPath", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BackupSecondaryPath", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BackupSecondaryPath", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BackupSecondaryPath", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BackupSecondaryPath", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastBackupName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastBackupName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastBackupName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastBackupName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Created", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Created", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CreatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Updated", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Updated", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Updated", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Updated", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UpdatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TestedButNoChange", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestedButNoChange", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TestedButNoChange", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestedButNoChange", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TestedButNoChangeBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestedButNoChangeBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TestedButNoChangeBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TestedButNoChangeBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Audited", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Audited", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Audited", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Audited", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SourceId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SourceId2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceId2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SourceId2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceId2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SourceId3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceId3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SourceId3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceId3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SourceId4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceId4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SourceId4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceId4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsDMZ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsDMZ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsDMZ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsDMZ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FedFromServerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FedFromServerId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FedFromServerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FedFromServerId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FeedsIntoServerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FeedsIntoServerId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FeedsIntoServerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FeedsIntoServerId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Region", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Region", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Region", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Region", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServerId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ServerId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QuickInterface.Properties.Settings.Default.DBABnch_LOCALConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ServerId, ServerNm, ServerType, Impl, ServerDesc, ServerAliases, ServerEnv" +
                "ironments, EnvironmentId, RestrictionNotice, RestrictedByNm, Restricted, Instanc" +
                "eNm, IP4Address, FoundInDocument, LegacySource, NoLongerExists, NoInfoDueToConne" +
                "ctFailure, LastTimePingSucceeded, SuccessfulPingDurationNS, LastTimePingFailed, " +
                "FailedPingDurationNS, PingFailed, LongTimeoutAndFailedToConnect, LastTimeLongTim" +
                "eoutAndFailedToConnect, NoAccessForADUserId, LastTimeNoAccessForADUserId, Connec" +
                "tionAttemptTimedOut, LastTimeConnectionAttemptTimedOut, LastTimeConnectionAttemp" +
                "tSucceeded, TimeItTookToConnect, ConnectTimeoutSetAtTimeOfTimeOut, ClientFailedT" +
                "oMakeAConnection, LastTimeClientFailedToMakeAConnection, LoginFailedForUserId, L" +
                "astTimeLoginFailedForUser, Skip, DomainNm, DbLinkLoginId, LinkedFromServerId, Ho" +
                "stId, HostNm, HostOSDesc, HostNmPhysicalNetBIOS, Purpose, MethodsUsedToDetermine" +
                "Purpose, Edition, EngineEdition, EditionNm, ProductBuild, ProductBuildType, Prod" +
                "uctReleaseYear, ProductVersion, ProductLevel, LastKBApplied, ProductMajorVersion" +
                ", ProductMinorVersion, ProductUpdateLevel, Collation, ErrorLogFileNm, Filestream" +
                "ConfiguredLevel, FilestreamShareNm, HadrManagerStatus, IsHadrEnabled, IsXTPSuppo" +
                "rted, IsClustered, IsPolyBaseInstalled, IsIntegratedSecurityOnly, IsSingleUser, " +
                "IsFullTextInstalled, IsAdvancedAnalyticsInstalled, IsLocalDb, BuildClrVersion, P" +
                "rocessId, ComparisonStyle, SqlCharSetNm, SqlSortOrderNm, BackupPrimaryPath, Back" +
                "upSecondaryPath, LastBackupName, Created, CreatedBy, Updated, UpdatedBy, TestedB" +
                "utNoChange, TestedButNoChangeBy, Audited, SourceId, SourceId2, SourceId3, Source" +
                "Id4, IsDMZ, FedFromServerId, FeedsIntoServerId, Region FROM InfrastructureForSQL" +
                "Server.Servers";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DBABnch_LOCALDataSet.ServersDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DBABnch_LOCALDataSet.ServersDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DBABnch_LOCALDataSet.ServersDataTable dataTable = new DBABnch_LOCALDataSet.ServersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DBABnch_LOCALDataSet.ServersDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DBABnch_LOCALDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Servers");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_ServerId, 
                    string Original_ServerNm, 
                    string Original_ServerType, 
                    string Original_Impl, 
                    string Original_ServerAliases, 
                    string Original_ServerEnvironments, 
                    global::System.Nullable<byte> Original_EnvironmentId, 
                    string Original_RestrictionNotice, 
                    string Original_RestrictedByNm, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_Restricted, 
                    string Original_InstanceNm, 
                    byte[] Original_IP4Address, 
                    global::System.Nullable<bool> Original_FoundInDocument, 
                    global::System.Nullable<bool> Original_LegacySource, 
                    global::System.Nullable<bool> Original_NoLongerExists, 
                    bool Original_NoInfoDueToConnectFailure, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_LastTimePingSucceeded, 
                    global::System.Nullable<long> Original_SuccessfulPingDurationNS, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_LastTimePingFailed, 
                    global::System.Nullable<long> Original_FailedPingDurationNS, 
                    global::System.Nullable<int> Original_PingFailed, 
                    global::System.Nullable<bool> Original_LongTimeoutAndFailedToConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_LastTimeLongTimeoutAndFailedToConnect, 
                    global::System.Nullable<int> Original_NoAccessForADUserId, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_LastTimeNoAccessForADUserId, 
                    global::System.Nullable<bool> Original_ConnectionAttemptTimedOut, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_LastTimeConnectionAttemptTimedOut, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_LastTimeConnectionAttemptSucceeded, 
                    global::System.Nullable<long> Original_TimeItTookToConnect, 
                    global::System.Nullable<int> Original_ConnectTimeoutSetAtTimeOfTimeOut, 
                    global::System.Nullable<bool> Original_ClientFailedToMakeAConnection, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_LastTimeClientFailedToMakeAConnection, 
                    global::System.Nullable<int> Original_LoginFailedForUserId, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_LastTimeLoginFailedForUser, 
                    int Original_Skip, 
                    string Original_DomainNm, 
                    global::System.Nullable<int> Original_DbLinkLoginId, 
                    global::System.Nullable<int> Original_LinkedFromServerId, 
                    global::System.Nullable<int> Original_HostId, 
                    string Original_HostNm, 
                    string Original_HostOSDesc, 
                    string Original_HostNmPhysicalNetBIOS, 
                    string Original_Purpose, 
                    string Original_MethodsUsedToDeterminePurpose, 
                    string Original_Edition, 
                    global::System.Nullable<int> Original_EngineEdition, 
                    string Original_EditionNm, 
                    string Original_ProductBuild, 
                    string Original_ProductBuildType, 
                    string Original_ProductReleaseYear, 
                    string Original_ProductVersion, 
                    string Original_ProductLevel, 
                    string Original_LastKBApplied, 
                    string Original_ProductMajorVersion, 
                    string Original_ProductMinorVersion, 
                    string Original_ProductUpdateLevel, 
                    string Original_Collation, 
                    string Original_FilestreamConfiguredLevel, 
                    string Original_FilestreamShareNm, 
                    global::System.Nullable<int> Original_HadrManagerStatus, 
                    global::System.Nullable<int> Original_IsHadrEnabled, 
                    global::System.Nullable<int> Original_IsXTPSupported, 
                    global::System.Nullable<int> Original_IsClustered, 
                    global::System.Nullable<int> Original_IsPolyBaseInstalled, 
                    global::System.Nullable<int> Original_IsIntegratedSecurityOnly, 
                    global::System.Nullable<int> Original_IsSingleUser, 
                    global::System.Nullable<int> Original_IsFullTextInstalled, 
                    global::System.Nullable<int> Original_IsAdvancedAnalyticsInstalled, 
                    global::System.Nullable<int> Original_IsLocalDb, 
                    string Original_BuildClrVersion, 
                    global::System.Nullable<int> Original_ProcessId, 
                    global::System.Nullable<int> Original_ComparisonStyle, 
                    string Original_SqlCharSetNm, 
                    string Original_SqlSortOrderNm, 
                    string Original_BackupPrimaryPath, 
                    string Original_BackupSecondaryPath, 
                    string Original_LastBackupName, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_Created, 
                    global::System.Nullable<int> Original_CreatedBy, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_Updated, 
                    global::System.Nullable<int> Original_UpdatedBy, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_TestedButNoChange, 
                    global::System.Nullable<int> Original_TestedButNoChangeBy, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_Audited, 
                    int Original_SourceId, 
                    global::System.Nullable<int> Original_SourceId2, 
                    global::System.Nullable<int> Original_SourceId3, 
                    global::System.Nullable<int> Original_SourceId4, 
                    global::System.Nullable<bool> Original_IsDMZ, 
                    global::System.Nullable<int> Original_FedFromServerId, 
                    global::System.Nullable<int> Original_FeedsIntoServerId, 
                    string Original_Region) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ServerId));
            if ((Original_ServerNm == null)) {
                throw new global::System.ArgumentNullException("Original_ServerNm");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_ServerNm));
            }
            if ((Original_ServerType == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_ServerType));
            }
            if ((Original_Impl == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Impl));
            }
            if ((Original_ServerAliases == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_ServerAliases));
            }
            if ((Original_ServerEnvironments == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_ServerEnvironments));
            }
            if ((Original_EnvironmentId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((byte)(Original_EnvironmentId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_RestrictionNotice == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_RestrictionNotice));
            }
            if ((Original_RestrictedByNm == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_RestrictedByNm));
            }
            if ((Original_Restricted.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((System.DateTimeOffset)(Original_Restricted.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_InstanceNm == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_InstanceNm));
            }
            if ((Original_IP4Address == null)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((byte[])(Original_IP4Address));
            }
            if ((Original_FoundInDocument.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((bool)(Original_FoundInDocument.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_LegacySource.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((bool)(Original_LegacySource.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_NoLongerExists.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((bool)(Original_NoLongerExists.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[28].Value = ((bool)(Original_NoInfoDueToConnectFailure));
            if ((Original_LastTimePingSucceeded.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((System.DateTimeOffset)(Original_LastTimePingSucceeded.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_SuccessfulPingDurationNS.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((long)(Original_SuccessfulPingDurationNS.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_LastTimePingFailed.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((System.DateTimeOffset)(Original_LastTimePingFailed.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_FailedPingDurationNS.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((long)(Original_FailedPingDurationNS.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_PingFailed.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((int)(Original_PingFailed.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_LongTimeoutAndFailedToConnect.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((bool)(Original_LongTimeoutAndFailedToConnect.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_LastTimeLongTimeoutAndFailedToConnect.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((System.DateTimeOffset)(Original_LastTimeLongTimeoutAndFailedToConnect.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_NoAccessForADUserId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((int)(Original_NoAccessForADUserId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_LastTimeNoAccessForADUserId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((System.DateTimeOffset)(Original_LastTimeNoAccessForADUserId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_ConnectionAttemptTimedOut.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((bool)(Original_ConnectionAttemptTimedOut.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_LastTimeConnectionAttemptTimedOut.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((System.DateTimeOffset)(Original_LastTimeConnectionAttemptTimedOut.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_LastTimeConnectionAttemptSucceeded.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((System.DateTimeOffset)(Original_LastTimeConnectionAttemptSucceeded.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_TimeItTookToConnect.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((long)(Original_TimeItTookToConnect.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_ConnectTimeoutSetAtTimeOfTimeOut.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((int)(Original_ConnectTimeoutSetAtTimeOfTimeOut.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_ClientFailedToMakeAConnection.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((bool)(Original_ClientFailedToMakeAConnection.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_LastTimeClientFailedToMakeAConnection.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((System.DateTimeOffset)(Original_LastTimeClientFailedToMakeAConnection.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_LoginFailedForUserId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[62].Value = ((int)(Original_LoginFailedForUserId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Original_LastTimeLoginFailedForUser.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((System.DateTimeOffset)(Original_LastTimeLoginFailedForUser.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[65].Value = ((int)(Original_Skip));
            if ((Original_DomainNm == null)) {
                throw new global::System.ArgumentNullException("Original_DomainNm");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((string)(Original_DomainNm));
            }
            if ((Original_DbLinkLoginId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[68].Value = ((int)(Original_DbLinkLoginId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((Original_LinkedFromServerId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[70].Value = ((int)(Original_LinkedFromServerId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((Original_HostId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[72].Value = ((int)(Original_HostId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((Original_HostNm == null)) {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[74].Value = ((string)(Original_HostNm));
            }
            if ((Original_HostOSDesc == null)) {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[76].Value = ((string)(Original_HostOSDesc));
            }
            if ((Original_HostNmPhysicalNetBIOS == null)) {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[78].Value = ((string)(Original_HostNmPhysicalNetBIOS));
            }
            if ((Original_Purpose == null)) {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[80].Value = ((string)(Original_Purpose));
            }
            if ((Original_MethodsUsedToDeterminePurpose == null)) {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[82].Value = ((string)(Original_MethodsUsedToDeterminePurpose));
            }
            if ((Original_Edition == null)) {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[84].Value = ((string)(Original_Edition));
            }
            if ((Original_EngineEdition.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[86].Value = ((int)(Original_EngineEdition.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            if ((Original_EditionNm == null)) {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[88].Value = ((string)(Original_EditionNm));
            }
            if ((Original_ProductBuild == null)) {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[90].Value = ((string)(Original_ProductBuild));
            }
            if ((Original_ProductBuildType == null)) {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[92].Value = ((string)(Original_ProductBuildType));
            }
            if ((Original_ProductReleaseYear == null)) {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[94].Value = ((string)(Original_ProductReleaseYear));
            }
            if ((Original_ProductVersion == null)) {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[96].Value = ((string)(Original_ProductVersion));
            }
            if ((Original_ProductLevel == null)) {
                this.Adapter.DeleteCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[98].Value = ((string)(Original_ProductLevel));
            }
            if ((Original_LastKBApplied == null)) {
                this.Adapter.DeleteCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[100].Value = ((string)(Original_LastKBApplied));
            }
            if ((Original_ProductMajorVersion == null)) {
                this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[102].Value = ((string)(Original_ProductMajorVersion));
            }
            if ((Original_ProductMinorVersion == null)) {
                this.Adapter.DeleteCommand.Parameters[103].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[103].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[104].Value = ((string)(Original_ProductMinorVersion));
            }
            if ((Original_ProductUpdateLevel == null)) {
                this.Adapter.DeleteCommand.Parameters[105].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[105].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[106].Value = ((string)(Original_ProductUpdateLevel));
            }
            if ((Original_Collation == null)) {
                this.Adapter.DeleteCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[108].Value = ((string)(Original_Collation));
            }
            if ((Original_FilestreamConfiguredLevel == null)) {
                this.Adapter.DeleteCommand.Parameters[109].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[109].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[110].Value = ((string)(Original_FilestreamConfiguredLevel));
            }
            if ((Original_FilestreamShareNm == null)) {
                this.Adapter.DeleteCommand.Parameters[111].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[111].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[112].Value = ((string)(Original_FilestreamShareNm));
            }
            if ((Original_HadrManagerStatus.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[113].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[114].Value = ((int)(Original_HadrManagerStatus.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[113].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            if ((Original_IsHadrEnabled.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[115].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[116].Value = ((int)(Original_IsHadrEnabled.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[115].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            if ((Original_IsXTPSupported.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[117].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[118].Value = ((int)(Original_IsXTPSupported.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[117].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            if ((Original_IsClustered.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[119].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[120].Value = ((int)(Original_IsClustered.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[119].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            if ((Original_IsPolyBaseInstalled.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[121].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[122].Value = ((int)(Original_IsPolyBaseInstalled.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[121].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            if ((Original_IsIntegratedSecurityOnly.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[123].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[124].Value = ((int)(Original_IsIntegratedSecurityOnly.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[123].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            if ((Original_IsSingleUser.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[125].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[126].Value = ((int)(Original_IsSingleUser.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[125].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            if ((Original_IsFullTextInstalled.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[127].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[128].Value = ((int)(Original_IsFullTextInstalled.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[127].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            if ((Original_IsAdvancedAnalyticsInstalled.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[129].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[130].Value = ((int)(Original_IsAdvancedAnalyticsInstalled.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[129].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            if ((Original_IsLocalDb.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[131].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[132].Value = ((int)(Original_IsLocalDb.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[131].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            if ((Original_BuildClrVersion == null)) {
                this.Adapter.DeleteCommand.Parameters[133].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[134].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[133].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[134].Value = ((string)(Original_BuildClrVersion));
            }
            if ((Original_ProcessId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[135].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[136].Value = ((int)(Original_ProcessId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[135].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[136].Value = global::System.DBNull.Value;
            }
            if ((Original_ComparisonStyle.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[137].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[138].Value = ((int)(Original_ComparisonStyle.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[137].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[138].Value = global::System.DBNull.Value;
            }
            if ((Original_SqlCharSetNm == null)) {
                this.Adapter.DeleteCommand.Parameters[139].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[140].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[139].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[140].Value = ((string)(Original_SqlCharSetNm));
            }
            if ((Original_SqlSortOrderNm == null)) {
                this.Adapter.DeleteCommand.Parameters[141].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[142].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[141].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[142].Value = ((string)(Original_SqlSortOrderNm));
            }
            if ((Original_BackupPrimaryPath == null)) {
                this.Adapter.DeleteCommand.Parameters[143].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[144].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[143].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[144].Value = ((string)(Original_BackupPrimaryPath));
            }
            if ((Original_BackupSecondaryPath == null)) {
                this.Adapter.DeleteCommand.Parameters[145].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[146].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[145].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[146].Value = ((string)(Original_BackupSecondaryPath));
            }
            if ((Original_LastBackupName == null)) {
                this.Adapter.DeleteCommand.Parameters[147].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[148].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[147].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[148].Value = ((string)(Original_LastBackupName));
            }
            if ((Original_Created.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[149].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[150].Value = ((System.DateTimeOffset)(Original_Created.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[149].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[150].Value = global::System.DBNull.Value;
            }
            if ((Original_CreatedBy.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[151].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[152].Value = ((int)(Original_CreatedBy.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[151].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[152].Value = global::System.DBNull.Value;
            }
            if ((Original_Updated.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[153].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[154].Value = ((System.DateTimeOffset)(Original_Updated.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[153].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[154].Value = global::System.DBNull.Value;
            }
            if ((Original_UpdatedBy.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[155].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[156].Value = ((int)(Original_UpdatedBy.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[155].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[156].Value = global::System.DBNull.Value;
            }
            if ((Original_TestedButNoChange.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[157].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[158].Value = ((System.DateTimeOffset)(Original_TestedButNoChange.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[157].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[158].Value = global::System.DBNull.Value;
            }
            if ((Original_TestedButNoChangeBy.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[159].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[160].Value = ((int)(Original_TestedButNoChangeBy.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[159].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[160].Value = global::System.DBNull.Value;
            }
            if ((Original_Audited.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[161].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[162].Value = ((System.DateTimeOffset)(Original_Audited.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[161].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[162].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[163].Value = ((int)(Original_SourceId));
            if ((Original_SourceId2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[164].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[165].Value = ((int)(Original_SourceId2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[164].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[165].Value = global::System.DBNull.Value;
            }
            if ((Original_SourceId3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[166].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[167].Value = ((int)(Original_SourceId3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[166].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[167].Value = global::System.DBNull.Value;
            }
            if ((Original_SourceId4.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[168].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[169].Value = ((int)(Original_SourceId4.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[168].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[169].Value = global::System.DBNull.Value;
            }
            if ((Original_IsDMZ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[170].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[171].Value = ((bool)(Original_IsDMZ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[170].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[171].Value = global::System.DBNull.Value;
            }
            if ((Original_FedFromServerId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[172].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[173].Value = ((int)(Original_FedFromServerId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[172].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[173].Value = global::System.DBNull.Value;
            }
            if ((Original_FeedsIntoServerId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[174].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[175].Value = ((int)(Original_FeedsIntoServerId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[174].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[175].Value = global::System.DBNull.Value;
            }
            if ((Original_Region == null)) {
                this.Adapter.DeleteCommand.Parameters[176].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[177].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[176].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[177].Value = ((string)(Original_Region));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string ServerNm, 
                    string ServerType, 
                    string Impl, 
                    string ServerDesc, 
                    string ServerAliases, 
                    string ServerEnvironments, 
                    global::System.Nullable<byte> EnvironmentId, 
                    string RestrictionNotice, 
                    string RestrictedByNm, 
                    global::System.Nullable<global::System.DateTimeOffset> Restricted, 
                    string InstanceNm, 
                    byte[] IP4Address, 
                    global::System.Nullable<bool> FoundInDocument, 
                    global::System.Nullable<bool> LegacySource, 
                    global::System.Nullable<bool> NoLongerExists, 
                    bool NoInfoDueToConnectFailure, 
                    global::System.Nullable<global::System.DateTimeOffset> LastTimePingSucceeded, 
                    global::System.Nullable<long> SuccessfulPingDurationNS, 
                    global::System.Nullable<global::System.DateTimeOffset> LastTimePingFailed, 
                    global::System.Nullable<long> FailedPingDurationNS, 
                    global::System.Nullable<bool> LongTimeoutAndFailedToConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> LastTimeLongTimeoutAndFailedToConnect, 
                    global::System.Nullable<int> NoAccessForADUserId, 
                    global::System.Nullable<global::System.DateTimeOffset> LastTimeNoAccessForADUserId, 
                    global::System.Nullable<bool> ConnectionAttemptTimedOut, 
                    global::System.Nullable<global::System.DateTimeOffset> LastTimeConnectionAttemptTimedOut, 
                    global::System.Nullable<global::System.DateTimeOffset> LastTimeConnectionAttemptSucceeded, 
                    global::System.Nullable<long> TimeItTookToConnect, 
                    global::System.Nullable<int> ConnectTimeoutSetAtTimeOfTimeOut, 
                    global::System.Nullable<bool> ClientFailedToMakeAConnection, 
                    global::System.Nullable<global::System.DateTimeOffset> LastTimeClientFailedToMakeAConnection, 
                    global::System.Nullable<int> LoginFailedForUserId, 
                    global::System.Nullable<global::System.DateTimeOffset> LastTimeLoginFailedForUser, 
                    string DomainNm, 
                    global::System.Nullable<int> DbLinkLoginId, 
                    global::System.Nullable<int> LinkedFromServerId, 
                    global::System.Nullable<int> HostId, 
                    string HostNm, 
                    string HostOSDesc, 
                    string HostNmPhysicalNetBIOS, 
                    string Purpose, 
                    string MethodsUsedToDeterminePurpose, 
                    string Edition, 
                    global::System.Nullable<int> EngineEdition, 
                    string EditionNm, 
                    string ProductBuild, 
                    string ProductBuildType, 
                    string ProductReleaseYear, 
                    string ProductVersion, 
                    string ProductLevel, 
                    string LastKBApplied, 
                    string ProductMajorVersion, 
                    string ProductMinorVersion, 
                    string ProductUpdateLevel, 
                    string Collation, 
                    string ErrorLogFileNm, 
                    string FilestreamConfiguredLevel, 
                    string FilestreamShareNm, 
                    global::System.Nullable<int> HadrManagerStatus, 
                    global::System.Nullable<int> IsHadrEnabled, 
                    global::System.Nullable<int> IsXTPSupported, 
                    global::System.Nullable<int> IsClustered, 
                    global::System.Nullable<int> IsPolyBaseInstalled, 
                    global::System.Nullable<int> IsIntegratedSecurityOnly, 
                    global::System.Nullable<int> IsSingleUser, 
                    global::System.Nullable<int> IsFullTextInstalled, 
                    global::System.Nullable<int> IsAdvancedAnalyticsInstalled, 
                    global::System.Nullable<int> IsLocalDb, 
                    string BuildClrVersion, 
                    global::System.Nullable<int> ProcessId, 
                    global::System.Nullable<int> ComparisonStyle, 
                    string SqlCharSetNm, 
                    string SqlSortOrderNm, 
                    string BackupPrimaryPath, 
                    string BackupSecondaryPath, 
                    string LastBackupName, 
                    global::System.Nullable<global::System.DateTimeOffset> Created, 
                    global::System.Nullable<int> CreatedBy, 
                    global::System.Nullable<global::System.DateTimeOffset> Updated, 
                    global::System.Nullable<int> UpdatedBy, 
                    global::System.Nullable<global::System.DateTimeOffset> TestedButNoChange, 
                    global::System.Nullable<int> TestedButNoChangeBy, 
                    global::System.Nullable<global::System.DateTimeOffset> Audited, 
                    int SourceId, 
                    global::System.Nullable<int> SourceId2, 
                    global::System.Nullable<int> SourceId3, 
                    global::System.Nullable<int> SourceId4, 
                    global::System.Nullable<bool> IsDMZ, 
                    global::System.Nullable<int> FedFromServerId, 
                    global::System.Nullable<int> FeedsIntoServerId, 
                    string Region) {
            if ((ServerNm == null)) {
                throw new global::System.ArgumentNullException("ServerNm");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ServerNm));
            }
            if ((ServerType == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ServerType));
            }
            if ((Impl == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Impl));
            }
            if ((ServerDesc == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ServerDesc));
            }
            if ((ServerAliases == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ServerAliases));
            }
            if ((ServerEnvironments == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ServerEnvironments));
            }
            if ((EnvironmentId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((byte)(EnvironmentId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((RestrictionNotice == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(RestrictionNotice));
            }
            if ((RestrictedByNm == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(RestrictedByNm));
            }
            if ((Restricted.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTimeOffset)(Restricted.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((InstanceNm == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(InstanceNm));
            }
            if ((IP4Address == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((byte[])(IP4Address));
            }
            if ((FoundInDocument.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((bool)(FoundInDocument.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((LegacySource.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((bool)(LegacySource.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((NoLongerExists.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((bool)(NoLongerExists.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[15].Value = ((bool)(NoInfoDueToConnectFailure));
            if ((LastTimePingSucceeded.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((System.DateTimeOffset)(LastTimePingSucceeded.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((SuccessfulPingDurationNS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((long)(SuccessfulPingDurationNS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((LastTimePingFailed.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((System.DateTimeOffset)(LastTimePingFailed.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((FailedPingDurationNS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((long)(FailedPingDurationNS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((LongTimeoutAndFailedToConnect.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((bool)(LongTimeoutAndFailedToConnect.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((LastTimeLongTimeoutAndFailedToConnect.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((System.DateTimeOffset)(LastTimeLongTimeoutAndFailedToConnect.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((NoAccessForADUserId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((int)(NoAccessForADUserId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((LastTimeNoAccessForADUserId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((System.DateTimeOffset)(LastTimeNoAccessForADUserId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((ConnectionAttemptTimedOut.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((bool)(ConnectionAttemptTimedOut.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((LastTimeConnectionAttemptTimedOut.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((System.DateTimeOffset)(LastTimeConnectionAttemptTimedOut.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((LastTimeConnectionAttemptSucceeded.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((System.DateTimeOffset)(LastTimeConnectionAttemptSucceeded.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((TimeItTookToConnect.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((long)(TimeItTookToConnect.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((ConnectTimeoutSetAtTimeOfTimeOut.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((int)(ConnectTimeoutSetAtTimeOfTimeOut.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((ClientFailedToMakeAConnection.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((bool)(ClientFailedToMakeAConnection.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((LastTimeClientFailedToMakeAConnection.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((System.DateTimeOffset)(LastTimeClientFailedToMakeAConnection.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((LoginFailedForUserId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((int)(LoginFailedForUserId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((LastTimeLoginFailedForUser.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((System.DateTimeOffset)(LastTimeLoginFailedForUser.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((DomainNm == null)) {
                throw new global::System.ArgumentNullException("DomainNm");
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(DomainNm));
            }
            if ((DbLinkLoginId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((int)(DbLinkLoginId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((LinkedFromServerId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((int)(LinkedFromServerId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((HostId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((int)(HostId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((HostNm == null)) {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(HostNm));
            }
            if ((HostOSDesc == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(HostOSDesc));
            }
            if ((HostNmPhysicalNetBIOS == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(HostNmPhysicalNetBIOS));
            }
            if ((Purpose == null)) {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(Purpose));
            }
            if ((MethodsUsedToDeterminePurpose == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(MethodsUsedToDeterminePurpose));
            }
            if ((Edition == null)) {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(Edition));
            }
            if ((EngineEdition.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((int)(EngineEdition.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((EditionNm == null)) {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(EditionNm));
            }
            if ((ProductBuild == null)) {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = ((string)(ProductBuild));
            }
            if ((ProductBuildType == null)) {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = ((string)(ProductBuildType));
            }
            if ((ProductReleaseYear == null)) {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = ((string)(ProductReleaseYear));
            }
            if ((ProductVersion == null)) {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(ProductVersion));
            }
            if ((ProductLevel == null)) {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = ((string)(ProductLevel));
            }
            if ((LastKBApplied == null)) {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = ((string)(LastKBApplied));
            }
            if ((ProductMajorVersion == null)) {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = ((string)(ProductMajorVersion));
            }
            if ((ProductMinorVersion == null)) {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = ((string)(ProductMinorVersion));
            }
            if ((ProductUpdateLevel == null)) {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = ((string)(ProductUpdateLevel));
            }
            if ((Collation == null)) {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = ((string)(Collation));
            }
            if ((ErrorLogFileNm == null)) {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = ((string)(ErrorLogFileNm));
            }
            if ((FilestreamConfiguredLevel == null)) {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = ((string)(FilestreamConfiguredLevel));
            }
            if ((FilestreamShareNm == null)) {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = ((string)(FilestreamShareNm));
            }
            if ((HadrManagerStatus.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[58].Value = ((int)(HadrManagerStatus.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((IsHadrEnabled.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[59].Value = ((int)(IsHadrEnabled.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((IsXTPSupported.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[60].Value = ((int)(IsXTPSupported.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((IsClustered.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[61].Value = ((int)(IsClustered.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((IsPolyBaseInstalled.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[62].Value = ((int)(IsPolyBaseInstalled.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((IsIntegratedSecurityOnly.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[63].Value = ((int)(IsIntegratedSecurityOnly.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((IsSingleUser.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[64].Value = ((int)(IsSingleUser.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((IsFullTextInstalled.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[65].Value = ((int)(IsFullTextInstalled.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((IsAdvancedAnalyticsInstalled.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[66].Value = ((int)(IsAdvancedAnalyticsInstalled.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((IsLocalDb.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[67].Value = ((int)(IsLocalDb.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((BuildClrVersion == null)) {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = ((string)(BuildClrVersion));
            }
            if ((ProcessId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[69].Value = ((int)(ProcessId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((ComparisonStyle.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[70].Value = ((int)(ComparisonStyle.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((SqlCharSetNm == null)) {
                this.Adapter.InsertCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = ((string)(SqlCharSetNm));
            }
            if ((SqlSortOrderNm == null)) {
                this.Adapter.InsertCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = ((string)(SqlSortOrderNm));
            }
            if ((BackupPrimaryPath == null)) {
                this.Adapter.InsertCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[73].Value = ((string)(BackupPrimaryPath));
            }
            if ((BackupSecondaryPath == null)) {
                this.Adapter.InsertCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[74].Value = ((string)(BackupSecondaryPath));
            }
            if ((LastBackupName == null)) {
                this.Adapter.InsertCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[75].Value = ((string)(LastBackupName));
            }
            if ((Created.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[76].Value = ((System.DateTimeOffset)(Created.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((CreatedBy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[77].Value = ((int)(CreatedBy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((Updated.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[78].Value = ((System.DateTimeOffset)(Updated.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((UpdatedBy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[79].Value = ((int)(UpdatedBy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((TestedButNoChange.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[80].Value = ((System.DateTimeOffset)(TestedButNoChange.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((TestedButNoChangeBy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[81].Value = ((int)(TestedButNoChangeBy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((Audited.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[82].Value = ((System.DateTimeOffset)(Audited.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[83].Value = ((int)(SourceId));
            if ((SourceId2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[84].Value = ((int)(SourceId2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((SourceId3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[85].Value = ((int)(SourceId3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((SourceId4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[86].Value = ((int)(SourceId4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            if ((IsDMZ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[87].Value = ((bool)(IsDMZ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((FedFromServerId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[88].Value = ((int)(FedFromServerId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            if ((FeedsIntoServerId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[89].Value = ((int)(FeedsIntoServerId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((Region == null)) {
                this.Adapter.InsertCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[90].Value = ((string)(Region));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ServerNm, 
                    string ServerType, 
                    string Impl, 
                    string ServerDesc, 
                    string ServerAliases, 
                    string ServerEnvironments, 
                    global::System.Nullable<byte> EnvironmentId, 
                    string RestrictionNotice, 
                    string RestrictedByNm, 
                    global::System.Nullable<global::System.DateTimeOffset> Restricted, 
                    string InstanceNm, 
                    byte[] IP4Address, 
                    global::System.Nullable<bool> FoundInDocument, 
                    global::System.Nullable<bool> LegacySource, 
                    global::System.Nullable<bool> NoLongerExists, 
                    bool NoInfoDueToConnectFailure, 
                    global::System.Nullable<global::System.DateTimeOffset> LastTimePingSucceeded, 
                    global::System.Nullable<long> SuccessfulPingDurationNS, 
                    global::System.Nullable<global::System.DateTimeOffset> LastTimePingFailed, 
                    global::System.Nullable<long> FailedPingDurationNS, 
                    global::System.Nullable<bool> LongTimeoutAndFailedToConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> LastTimeLongTimeoutAndFailedToConnect, 
                    global::System.Nullable<int> NoAccessForADUserId, 
                    global::System.Nullable<global::System.DateTimeOffset> LastTimeNoAccessForADUserId, 
                    global::System.Nullable<bool> ConnectionAttemptTimedOut, 
                    global::System.Nullable<global::System.DateTimeOffset> LastTimeConnectionAttemptTimedOut, 
                    global::System.Nullable<global::System.DateTimeOffset> LastTimeConnectionAttemptSucceeded, 
                    global::System.Nullable<long> TimeItTookToConnect, 
                    global::System.Nullable<int> ConnectTimeoutSetAtTimeOfTimeOut, 
                    global::System.Nullable<bool> ClientFailedToMakeAConnection, 
                    global::System.Nullable<global::System.DateTimeOffset> LastTimeClientFailedToMakeAConnection, 
                    global::System.Nullable<int> LoginFailedForUserId, 
                    global::System.Nullable<global::System.DateTimeOffset> LastTimeLoginFailedForUser, 
                    string DomainNm, 
                    global::System.Nullable<int> DbLinkLoginId, 
                    global::System.Nullable<int> LinkedFromServerId, 
                    global::System.Nullable<int> HostId, 
                    string HostNm, 
                    string HostOSDesc, 
                    string HostNmPhysicalNetBIOS, 
                    string Purpose, 
                    string MethodsUsedToDeterminePurpose, 
                    string Edition, 
                    global::System.Nullable<int> EngineEdition, 
                    string EditionNm, 
                    string ProductBuild, 
                    string ProductBuildType, 
                    string ProductReleaseYear, 
                    string ProductVersion, 
                    string ProductLevel, 
                    string LastKBApplied, 
                    string ProductMajorVersion, 
                    string ProductMinorVersion, 
                    string ProductUpdateLevel, 
                    string Collation, 
                    string ErrorLogFileNm, 
                    string FilestreamConfiguredLevel, 
                    string FilestreamShareNm, 
                    global::System.Nullable<int> HadrManagerStatus, 
                    global::System.Nullable<int> IsHadrEnabled, 
                    global::System.Nullable<int> IsXTPSupported, 
                    global::System.Nullable<int> IsClustered, 
                    global::System.Nullable<int> IsPolyBaseInstalled, 
                    global::System.Nullable<int> IsIntegratedSecurityOnly, 
                    global::System.Nullable<int> IsSingleUser, 
                    global::System.Nullable<int> IsFullTextInstalled, 
                    global::System.Nullable<int> IsAdvancedAnalyticsInstalled, 
                    global::System.Nullable<int> IsLocalDb, 
                    string BuildClrVersion, 
                    global::System.Nullable<int> ProcessId, 
                    global::System.Nullable<int> ComparisonStyle, 
                    string SqlCharSetNm, 
                    string SqlSortOrderNm, 
                    string BackupPrimaryPath, 
                    string BackupSecondaryPath, 
                    string LastBackupName, 
                    global::System.Nullable<global::System.DateTimeOffset> Created, 
                    global::System.Nullable<int> CreatedBy, 
                    global::System.Nullable<global::System.DateTimeOffset> Updated, 
                    global::System.Nullable<int> UpdatedBy, 
                    global::System.Nullable<global::System.DateTimeOffset> TestedButNoChange, 
                    global::System.Nullable<int> TestedButNoChangeBy, 
                    global::System.Nullable<global::System.DateTimeOffset> Audited, 
                    int SourceId, 
                    global::System.Nullable<int> SourceId2, 
                    global::System.Nullable<int> SourceId3, 
                    global::System.Nullable<int> SourceId4, 
                    global::System.Nullable<bool> IsDMZ, 
                    global::System.Nullable<int> FedFromServerId, 
                    global::System.Nullable<int> FeedsIntoServerId, 
                    string Region, 
                    int Original_ServerId, 
                    string Original_ServerNm, 
                    string Original_ServerType, 
                    string Original_Impl, 
                    string Original_ServerAliases, 
                    string Original_ServerEnvironments, 
                    global::System.Nullable<byte> Original_EnvironmentId, 
                    string Original_RestrictionNotice, 
                    string Original_RestrictedByNm, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_Restricted, 
                    string Original_InstanceNm, 
                    byte[] Original_IP4Address, 
                    global::System.Nullable<bool> Original_FoundInDocument, 
                    global::System.Nullable<bool> Original_LegacySource, 
                    global::System.Nullable<bool> Original_NoLongerExists, 
                    bool Original_NoInfoDueToConnectFailure, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_LastTimePingSucceeded, 
                    global::System.Nullable<long> Original_SuccessfulPingDurationNS, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_LastTimePingFailed, 
                    global::System.Nullable<long> Original_FailedPingDurationNS, 
                    global::System.Nullable<int> Original_PingFailed, 
                    global::System.Nullable<bool> Original_LongTimeoutAndFailedToConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_LastTimeLongTimeoutAndFailedToConnect, 
                    global::System.Nullable<int> Original_NoAccessForADUserId, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_LastTimeNoAccessForADUserId, 
                    global::System.Nullable<bool> Original_ConnectionAttemptTimedOut, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_LastTimeConnectionAttemptTimedOut, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_LastTimeConnectionAttemptSucceeded, 
                    global::System.Nullable<long> Original_TimeItTookToConnect, 
                    global::System.Nullable<int> Original_ConnectTimeoutSetAtTimeOfTimeOut, 
                    global::System.Nullable<bool> Original_ClientFailedToMakeAConnection, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_LastTimeClientFailedToMakeAConnection, 
                    global::System.Nullable<int> Original_LoginFailedForUserId, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_LastTimeLoginFailedForUser, 
                    int Original_Skip, 
                    string Original_DomainNm, 
                    global::System.Nullable<int> Original_DbLinkLoginId, 
                    global::System.Nullable<int> Original_LinkedFromServerId, 
                    global::System.Nullable<int> Original_HostId, 
                    string Original_HostNm, 
                    string Original_HostOSDesc, 
                    string Original_HostNmPhysicalNetBIOS, 
                    string Original_Purpose, 
                    string Original_MethodsUsedToDeterminePurpose, 
                    string Original_Edition, 
                    global::System.Nullable<int> Original_EngineEdition, 
                    string Original_EditionNm, 
                    string Original_ProductBuild, 
                    string Original_ProductBuildType, 
                    string Original_ProductReleaseYear, 
                    string Original_ProductVersion, 
                    string Original_ProductLevel, 
                    string Original_LastKBApplied, 
                    string Original_ProductMajorVersion, 
                    string Original_ProductMinorVersion, 
                    string Original_ProductUpdateLevel, 
                    string Original_Collation, 
                    string Original_FilestreamConfiguredLevel, 
                    string Original_FilestreamShareNm, 
                    global::System.Nullable<int> Original_HadrManagerStatus, 
                    global::System.Nullable<int> Original_IsHadrEnabled, 
                    global::System.Nullable<int> Original_IsXTPSupported, 
                    global::System.Nullable<int> Original_IsClustered, 
                    global::System.Nullable<int> Original_IsPolyBaseInstalled, 
                    global::System.Nullable<int> Original_IsIntegratedSecurityOnly, 
                    global::System.Nullable<int> Original_IsSingleUser, 
                    global::System.Nullable<int> Original_IsFullTextInstalled, 
                    global::System.Nullable<int> Original_IsAdvancedAnalyticsInstalled, 
                    global::System.Nullable<int> Original_IsLocalDb, 
                    string Original_BuildClrVersion, 
                    global::System.Nullable<int> Original_ProcessId, 
                    global::System.Nullable<int> Original_ComparisonStyle, 
                    string Original_SqlCharSetNm, 
                    string Original_SqlSortOrderNm, 
                    string Original_BackupPrimaryPath, 
                    string Original_BackupSecondaryPath, 
                    string Original_LastBackupName, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_Created, 
                    global::System.Nullable<int> Original_CreatedBy, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_Updated, 
                    global::System.Nullable<int> Original_UpdatedBy, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_TestedButNoChange, 
                    global::System.Nullable<int> Original_TestedButNoChangeBy, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_Audited, 
                    int Original_SourceId, 
                    global::System.Nullable<int> Original_SourceId2, 
                    global::System.Nullable<int> Original_SourceId3, 
                    global::System.Nullable<int> Original_SourceId4, 
                    global::System.Nullable<bool> Original_IsDMZ, 
                    global::System.Nullable<int> Original_FedFromServerId, 
                    global::System.Nullable<int> Original_FeedsIntoServerId, 
                    string Original_Region, 
                    int ServerId) {
            if ((ServerNm == null)) {
                throw new global::System.ArgumentNullException("ServerNm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ServerNm));
            }
            if ((ServerType == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ServerType));
            }
            if ((Impl == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Impl));
            }
            if ((ServerDesc == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ServerDesc));
            }
            if ((ServerAliases == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(ServerAliases));
            }
            if ((ServerEnvironments == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(ServerEnvironments));
            }
            if ((EnvironmentId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((byte)(EnvironmentId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((RestrictionNotice == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(RestrictionNotice));
            }
            if ((RestrictedByNm == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(RestrictedByNm));
            }
            if ((Restricted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTimeOffset)(Restricted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((InstanceNm == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(InstanceNm));
            }
            if ((IP4Address == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((byte[])(IP4Address));
            }
            if ((FoundInDocument.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(FoundInDocument.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((LegacySource.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((bool)(LegacySource.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((NoLongerExists.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((bool)(NoLongerExists.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(NoInfoDueToConnectFailure));
            if ((LastTimePingSucceeded.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTimeOffset)(LastTimePingSucceeded.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((SuccessfulPingDurationNS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((long)(SuccessfulPingDurationNS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((LastTimePingFailed.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTimeOffset)(LastTimePingFailed.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((FailedPingDurationNS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((long)(FailedPingDurationNS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((LongTimeoutAndFailedToConnect.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((bool)(LongTimeoutAndFailedToConnect.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((LastTimeLongTimeoutAndFailedToConnect.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTimeOffset)(LastTimeLongTimeoutAndFailedToConnect.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((NoAccessForADUserId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(NoAccessForADUserId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((LastTimeNoAccessForADUserId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTimeOffset)(LastTimeNoAccessForADUserId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((ConnectionAttemptTimedOut.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((bool)(ConnectionAttemptTimedOut.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((LastTimeConnectionAttemptTimedOut.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((System.DateTimeOffset)(LastTimeConnectionAttemptTimedOut.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((LastTimeConnectionAttemptSucceeded.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTimeOffset)(LastTimeConnectionAttemptSucceeded.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((TimeItTookToConnect.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((long)(TimeItTookToConnect.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((ConnectTimeoutSetAtTimeOfTimeOut.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(ConnectTimeoutSetAtTimeOfTimeOut.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((ClientFailedToMakeAConnection.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((bool)(ClientFailedToMakeAConnection.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((LastTimeClientFailedToMakeAConnection.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((System.DateTimeOffset)(LastTimeClientFailedToMakeAConnection.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((LoginFailedForUserId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(LoginFailedForUserId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((LastTimeLoginFailedForUser.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((System.DateTimeOffset)(LastTimeLoginFailedForUser.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((DomainNm == null)) {
                throw new global::System.ArgumentNullException("DomainNm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(DomainNm));
            }
            if ((DbLinkLoginId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(DbLinkLoginId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((LinkedFromServerId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((int)(LinkedFromServerId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((HostId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(HostId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((HostNm == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(HostNm));
            }
            if ((HostOSDesc == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(HostOSDesc));
            }
            if ((HostNmPhysicalNetBIOS == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(HostNmPhysicalNetBIOS));
            }
            if ((Purpose == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Purpose));
            }
            if ((MethodsUsedToDeterminePurpose == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(MethodsUsedToDeterminePurpose));
            }
            if ((Edition == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Edition));
            }
            if ((EngineEdition.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((int)(EngineEdition.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((EditionNm == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(EditionNm));
            }
            if ((ProductBuild == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(ProductBuild));
            }
            if ((ProductBuildType == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(ProductBuildType));
            }
            if ((ProductReleaseYear == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(ProductReleaseYear));
            }
            if ((ProductVersion == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(ProductVersion));
            }
            if ((ProductLevel == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(ProductLevel));
            }
            if ((LastKBApplied == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(LastKBApplied));
            }
            if ((ProductMajorVersion == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(ProductMajorVersion));
            }
            if ((ProductMinorVersion == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(ProductMinorVersion));
            }
            if ((ProductUpdateLevel == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(ProductUpdateLevel));
            }
            if ((Collation == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(Collation));
            }
            if ((ErrorLogFileNm == null)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(ErrorLogFileNm));
            }
            if ((FilestreamConfiguredLevel == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(FilestreamConfiguredLevel));
            }
            if ((FilestreamShareNm == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(FilestreamShareNm));
            }
            if ((HadrManagerStatus.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((int)(HadrManagerStatus.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((IsHadrEnabled.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((int)(IsHadrEnabled.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((IsXTPSupported.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((int)(IsXTPSupported.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((IsClustered.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((int)(IsClustered.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((IsPolyBaseInstalled.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((int)(IsPolyBaseInstalled.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((IsIntegratedSecurityOnly.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((int)(IsIntegratedSecurityOnly.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((IsSingleUser.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((int)(IsSingleUser.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((IsFullTextInstalled.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((int)(IsFullTextInstalled.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((IsAdvancedAnalyticsInstalled.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((int)(IsAdvancedAnalyticsInstalled.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((IsLocalDb.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((int)(IsLocalDb.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((BuildClrVersion == null)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(BuildClrVersion));
            }
            if ((ProcessId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((int)(ProcessId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((ComparisonStyle.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((int)(ComparisonStyle.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((SqlCharSetNm == null)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((string)(SqlCharSetNm));
            }
            if ((SqlSortOrderNm == null)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(SqlSortOrderNm));
            }
            if ((BackupPrimaryPath == null)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(BackupPrimaryPath));
            }
            if ((BackupSecondaryPath == null)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((string)(BackupSecondaryPath));
            }
            if ((LastBackupName == null)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((string)(LastBackupName));
            }
            if ((Created.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((System.DateTimeOffset)(Created.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((CreatedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((int)(CreatedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((Updated.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((System.DateTimeOffset)(Updated.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((UpdatedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((int)(UpdatedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((TestedButNoChange.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((System.DateTimeOffset)(TestedButNoChange.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((TestedButNoChangeBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((int)(TestedButNoChangeBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((Audited.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((System.DateTimeOffset)(Audited.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[83].Value = ((int)(SourceId));
            if ((SourceId2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((int)(SourceId2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((SourceId3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((int)(SourceId3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((SourceId4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((int)(SourceId4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            if ((IsDMZ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((bool)(IsDMZ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((FedFromServerId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((int)(FedFromServerId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            if ((FeedsIntoServerId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((int)(FeedsIntoServerId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((Region == null)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((string)(Region));
            }
            this.Adapter.UpdateCommand.Parameters[91].Value = ((int)(Original_ServerId));
            if ((Original_ServerNm == null)) {
                throw new global::System.ArgumentNullException("Original_ServerNm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((string)(Original_ServerNm));
            }
            if ((Original_ServerType == null)) {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[94].Value = ((string)(Original_ServerType));
            }
            if ((Original_Impl == null)) {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[96].Value = ((string)(Original_Impl));
            }
            if ((Original_ServerAliases == null)) {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[98].Value = ((string)(Original_ServerAliases));
            }
            if ((Original_ServerEnvironments == null)) {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[100].Value = ((string)(Original_ServerEnvironments));
            }
            if ((Original_EnvironmentId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[102].Value = ((byte)(Original_EnvironmentId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            if ((Original_RestrictionNotice == null)) {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[104].Value = ((string)(Original_RestrictionNotice));
            }
            if ((Original_RestrictedByNm == null)) {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[106].Value = ((string)(Original_RestrictedByNm));
            }
            if ((Original_Restricted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[108].Value = ((System.DateTimeOffset)(Original_Restricted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            if ((Original_InstanceNm == null)) {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[110].Value = ((string)(Original_InstanceNm));
            }
            if ((Original_IP4Address == null)) {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[112].Value = ((byte[])(Original_IP4Address));
            }
            if ((Original_FoundInDocument.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[114].Value = ((bool)(Original_FoundInDocument.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            if ((Original_LegacySource.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[116].Value = ((bool)(Original_LegacySource.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            if ((Original_NoLongerExists.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[118].Value = ((bool)(Original_NoLongerExists.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[119].Value = ((bool)(Original_NoInfoDueToConnectFailure));
            if ((Original_LastTimePingSucceeded.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[121].Value = ((System.DateTimeOffset)(Original_LastTimePingSucceeded.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            if ((Original_SuccessfulPingDurationNS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[123].Value = ((long)(Original_SuccessfulPingDurationNS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            if ((Original_LastTimePingFailed.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[125].Value = ((System.DateTimeOffset)(Original_LastTimePingFailed.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            if ((Original_FailedPingDurationNS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[127].Value = ((long)(Original_FailedPingDurationNS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            if ((Original_PingFailed.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[129].Value = ((int)(Original_PingFailed.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[129].Value = global::System.DBNull.Value;
            }
            if ((Original_LongTimeoutAndFailedToConnect.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[131].Value = ((bool)(Original_LongTimeoutAndFailedToConnect.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[131].Value = global::System.DBNull.Value;
            }
            if ((Original_LastTimeLongTimeoutAndFailedToConnect.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[133].Value = ((System.DateTimeOffset)(Original_LastTimeLongTimeoutAndFailedToConnect.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[133].Value = global::System.DBNull.Value;
            }
            if ((Original_NoAccessForADUserId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[135].Value = ((int)(Original_NoAccessForADUserId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[135].Value = global::System.DBNull.Value;
            }
            if ((Original_LastTimeNoAccessForADUserId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[137].Value = ((System.DateTimeOffset)(Original_LastTimeNoAccessForADUserId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[137].Value = global::System.DBNull.Value;
            }
            if ((Original_ConnectionAttemptTimedOut.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[138].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[139].Value = ((bool)(Original_ConnectionAttemptTimedOut.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[138].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[139].Value = global::System.DBNull.Value;
            }
            if ((Original_LastTimeConnectionAttemptTimedOut.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[141].Value = ((System.DateTimeOffset)(Original_LastTimeConnectionAttemptTimedOut.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[141].Value = global::System.DBNull.Value;
            }
            if ((Original_LastTimeConnectionAttemptSucceeded.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[143].Value = ((System.DateTimeOffset)(Original_LastTimeConnectionAttemptSucceeded.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[143].Value = global::System.DBNull.Value;
            }
            if ((Original_TimeItTookToConnect.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[145].Value = ((long)(Original_TimeItTookToConnect.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[145].Value = global::System.DBNull.Value;
            }
            if ((Original_ConnectTimeoutSetAtTimeOfTimeOut.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[147].Value = ((int)(Original_ConnectTimeoutSetAtTimeOfTimeOut.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[147].Value = global::System.DBNull.Value;
            }
            if ((Original_ClientFailedToMakeAConnection.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[149].Value = ((bool)(Original_ClientFailedToMakeAConnection.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[149].Value = global::System.DBNull.Value;
            }
            if ((Original_LastTimeClientFailedToMakeAConnection.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[151].Value = ((System.DateTimeOffset)(Original_LastTimeClientFailedToMakeAConnection.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[151].Value = global::System.DBNull.Value;
            }
            if ((Original_LoginFailedForUserId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[153].Value = ((int)(Original_LoginFailedForUserId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[153].Value = global::System.DBNull.Value;
            }
            if ((Original_LastTimeLoginFailedForUser.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[155].Value = ((System.DateTimeOffset)(Original_LastTimeLoginFailedForUser.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[155].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[156].Value = ((int)(Original_Skip));
            if ((Original_DomainNm == null)) {
                throw new global::System.ArgumentNullException("Original_DomainNm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[157].Value = ((string)(Original_DomainNm));
            }
            if ((Original_DbLinkLoginId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[158].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[159].Value = ((int)(Original_DbLinkLoginId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[158].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[159].Value = global::System.DBNull.Value;
            }
            if ((Original_LinkedFromServerId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[160].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[161].Value = ((int)(Original_LinkedFromServerId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[160].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[161].Value = global::System.DBNull.Value;
            }
            if ((Original_HostId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[162].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[163].Value = ((int)(Original_HostId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[162].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[163].Value = global::System.DBNull.Value;
            }
            if ((Original_HostNm == null)) {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[165].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[165].Value = ((string)(Original_HostNm));
            }
            if ((Original_HostOSDesc == null)) {
                this.Adapter.UpdateCommand.Parameters[166].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[167].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[166].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[167].Value = ((string)(Original_HostOSDesc));
            }
            if ((Original_HostNmPhysicalNetBIOS == null)) {
                this.Adapter.UpdateCommand.Parameters[168].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[169].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[168].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[169].Value = ((string)(Original_HostNmPhysicalNetBIOS));
            }
            if ((Original_Purpose == null)) {
                this.Adapter.UpdateCommand.Parameters[170].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[171].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[170].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[171].Value = ((string)(Original_Purpose));
            }
            if ((Original_MethodsUsedToDeterminePurpose == null)) {
                this.Adapter.UpdateCommand.Parameters[172].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[173].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[172].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[173].Value = ((string)(Original_MethodsUsedToDeterminePurpose));
            }
            if ((Original_Edition == null)) {
                this.Adapter.UpdateCommand.Parameters[174].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[175].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[174].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[175].Value = ((string)(Original_Edition));
            }
            if ((Original_EngineEdition.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[176].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[177].Value = ((int)(Original_EngineEdition.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[176].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[177].Value = global::System.DBNull.Value;
            }
            if ((Original_EditionNm == null)) {
                this.Adapter.UpdateCommand.Parameters[178].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[179].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[178].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[179].Value = ((string)(Original_EditionNm));
            }
            if ((Original_ProductBuild == null)) {
                this.Adapter.UpdateCommand.Parameters[180].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[181].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[180].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[181].Value = ((string)(Original_ProductBuild));
            }
            if ((Original_ProductBuildType == null)) {
                this.Adapter.UpdateCommand.Parameters[182].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[183].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[182].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[183].Value = ((string)(Original_ProductBuildType));
            }
            if ((Original_ProductReleaseYear == null)) {
                this.Adapter.UpdateCommand.Parameters[184].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[185].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[184].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[185].Value = ((string)(Original_ProductReleaseYear));
            }
            if ((Original_ProductVersion == null)) {
                this.Adapter.UpdateCommand.Parameters[186].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[187].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[186].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[187].Value = ((string)(Original_ProductVersion));
            }
            if ((Original_ProductLevel == null)) {
                this.Adapter.UpdateCommand.Parameters[188].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[189].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[188].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[189].Value = ((string)(Original_ProductLevel));
            }
            if ((Original_LastKBApplied == null)) {
                this.Adapter.UpdateCommand.Parameters[190].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[191].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[190].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[191].Value = ((string)(Original_LastKBApplied));
            }
            if ((Original_ProductMajorVersion == null)) {
                this.Adapter.UpdateCommand.Parameters[192].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[193].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[192].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[193].Value = ((string)(Original_ProductMajorVersion));
            }
            if ((Original_ProductMinorVersion == null)) {
                this.Adapter.UpdateCommand.Parameters[194].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[195].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[194].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[195].Value = ((string)(Original_ProductMinorVersion));
            }
            if ((Original_ProductUpdateLevel == null)) {
                this.Adapter.UpdateCommand.Parameters[196].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[197].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[196].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[197].Value = ((string)(Original_ProductUpdateLevel));
            }
            if ((Original_Collation == null)) {
                this.Adapter.UpdateCommand.Parameters[198].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[199].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[198].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[199].Value = ((string)(Original_Collation));
            }
            if ((Original_FilestreamConfiguredLevel == null)) {
                this.Adapter.UpdateCommand.Parameters[200].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[201].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[200].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[201].Value = ((string)(Original_FilestreamConfiguredLevel));
            }
            if ((Original_FilestreamShareNm == null)) {
                this.Adapter.UpdateCommand.Parameters[202].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[203].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[202].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[203].Value = ((string)(Original_FilestreamShareNm));
            }
            if ((Original_HadrManagerStatus.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[204].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[205].Value = ((int)(Original_HadrManagerStatus.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[204].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[205].Value = global::System.DBNull.Value;
            }
            if ((Original_IsHadrEnabled.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[206].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[207].Value = ((int)(Original_IsHadrEnabled.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[206].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[207].Value = global::System.DBNull.Value;
            }
            if ((Original_IsXTPSupported.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[208].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[209].Value = ((int)(Original_IsXTPSupported.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[208].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[209].Value = global::System.DBNull.Value;
            }
            if ((Original_IsClustered.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[210].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[211].Value = ((int)(Original_IsClustered.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[210].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[211].Value = global::System.DBNull.Value;
            }
            if ((Original_IsPolyBaseInstalled.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[212].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[213].Value = ((int)(Original_IsPolyBaseInstalled.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[212].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[213].Value = global::System.DBNull.Value;
            }
            if ((Original_IsIntegratedSecurityOnly.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[214].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[215].Value = ((int)(Original_IsIntegratedSecurityOnly.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[214].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[215].Value = global::System.DBNull.Value;
            }
            if ((Original_IsSingleUser.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[216].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[217].Value = ((int)(Original_IsSingleUser.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[216].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[217].Value = global::System.DBNull.Value;
            }
            if ((Original_IsFullTextInstalled.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[218].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[219].Value = ((int)(Original_IsFullTextInstalled.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[218].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[219].Value = global::System.DBNull.Value;
            }
            if ((Original_IsAdvancedAnalyticsInstalled.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[220].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[221].Value = ((int)(Original_IsAdvancedAnalyticsInstalled.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[220].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[221].Value = global::System.DBNull.Value;
            }
            if ((Original_IsLocalDb.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[222].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[223].Value = ((int)(Original_IsLocalDb.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[222].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[223].Value = global::System.DBNull.Value;
            }
            if ((Original_BuildClrVersion == null)) {
                this.Adapter.UpdateCommand.Parameters[224].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[225].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[224].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[225].Value = ((string)(Original_BuildClrVersion));
            }
            if ((Original_ProcessId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[226].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[227].Value = ((int)(Original_ProcessId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[226].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[227].Value = global::System.DBNull.Value;
            }
            if ((Original_ComparisonStyle.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[228].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[229].Value = ((int)(Original_ComparisonStyle.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[228].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[229].Value = global::System.DBNull.Value;
            }
            if ((Original_SqlCharSetNm == null)) {
                this.Adapter.UpdateCommand.Parameters[230].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[231].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[230].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[231].Value = ((string)(Original_SqlCharSetNm));
            }
            if ((Original_SqlSortOrderNm == null)) {
                this.Adapter.UpdateCommand.Parameters[232].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[233].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[232].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[233].Value = ((string)(Original_SqlSortOrderNm));
            }
            if ((Original_BackupPrimaryPath == null)) {
                this.Adapter.UpdateCommand.Parameters[234].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[235].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[234].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[235].Value = ((string)(Original_BackupPrimaryPath));
            }
            if ((Original_BackupSecondaryPath == null)) {
                this.Adapter.UpdateCommand.Parameters[236].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[237].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[236].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[237].Value = ((string)(Original_BackupSecondaryPath));
            }
            if ((Original_LastBackupName == null)) {
                this.Adapter.UpdateCommand.Parameters[238].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[239].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[238].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[239].Value = ((string)(Original_LastBackupName));
            }
            if ((Original_Created.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[240].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[241].Value = ((System.DateTimeOffset)(Original_Created.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[240].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[241].Value = global::System.DBNull.Value;
            }
            if ((Original_CreatedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[242].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[243].Value = ((int)(Original_CreatedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[242].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[243].Value = global::System.DBNull.Value;
            }
            if ((Original_Updated.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[244].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[245].Value = ((System.DateTimeOffset)(Original_Updated.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[244].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[245].Value = global::System.DBNull.Value;
            }
            if ((Original_UpdatedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[246].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[247].Value = ((int)(Original_UpdatedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[246].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[247].Value = global::System.DBNull.Value;
            }
            if ((Original_TestedButNoChange.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[248].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[249].Value = ((System.DateTimeOffset)(Original_TestedButNoChange.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[248].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[249].Value = global::System.DBNull.Value;
            }
            if ((Original_TestedButNoChangeBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[250].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[251].Value = ((int)(Original_TestedButNoChangeBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[250].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[251].Value = global::System.DBNull.Value;
            }
            if ((Original_Audited.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[252].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[253].Value = ((System.DateTimeOffset)(Original_Audited.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[252].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[253].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[254].Value = ((int)(Original_SourceId));
            if ((Original_SourceId2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[255].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[256].Value = ((int)(Original_SourceId2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[255].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[256].Value = global::System.DBNull.Value;
            }
            if ((Original_SourceId3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[257].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[258].Value = ((int)(Original_SourceId3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[257].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[258].Value = global::System.DBNull.Value;
            }
            if ((Original_SourceId4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[259].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[260].Value = ((int)(Original_SourceId4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[259].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[260].Value = global::System.DBNull.Value;
            }
            if ((Original_IsDMZ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[261].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[262].Value = ((bool)(Original_IsDMZ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[261].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[262].Value = global::System.DBNull.Value;
            }
            if ((Original_FedFromServerId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[263].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[264].Value = ((int)(Original_FedFromServerId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[263].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[264].Value = global::System.DBNull.Value;
            }
            if ((Original_FeedsIntoServerId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[265].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[266].Value = ((int)(Original_FeedsIntoServerId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[265].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[266].Value = global::System.DBNull.Value;
            }
            if ((Original_Region == null)) {
                this.Adapter.UpdateCommand.Parameters[267].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[268].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[267].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[268].Value = ((string)(Original_Region));
            }
            this.Adapter.UpdateCommand.Parameters[269].Value = ((int)(ServerId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ServerNm, 
                    string ServerType, 
                    string Impl, 
                    string ServerDesc, 
                    string ServerAliases, 
                    string ServerEnvironments, 
                    global::System.Nullable<byte> EnvironmentId, 
                    string RestrictionNotice, 
                    string RestrictedByNm, 
                    global::System.Nullable<global::System.DateTimeOffset> Restricted, 
                    string InstanceNm, 
                    byte[] IP4Address, 
                    global::System.Nullable<bool> FoundInDocument, 
                    global::System.Nullable<bool> LegacySource, 
                    global::System.Nullable<bool> NoLongerExists, 
                    bool NoInfoDueToConnectFailure, 
                    global::System.Nullable<global::System.DateTimeOffset> LastTimePingSucceeded, 
                    global::System.Nullable<long> SuccessfulPingDurationNS, 
                    global::System.Nullable<global::System.DateTimeOffset> LastTimePingFailed, 
                    global::System.Nullable<long> FailedPingDurationNS, 
                    global::System.Nullable<bool> LongTimeoutAndFailedToConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> LastTimeLongTimeoutAndFailedToConnect, 
                    global::System.Nullable<int> NoAccessForADUserId, 
                    global::System.Nullable<global::System.DateTimeOffset> LastTimeNoAccessForADUserId, 
                    global::System.Nullable<bool> ConnectionAttemptTimedOut, 
                    global::System.Nullable<global::System.DateTimeOffset> LastTimeConnectionAttemptTimedOut, 
                    global::System.Nullable<global::System.DateTimeOffset> LastTimeConnectionAttemptSucceeded, 
                    global::System.Nullable<long> TimeItTookToConnect, 
                    global::System.Nullable<int> ConnectTimeoutSetAtTimeOfTimeOut, 
                    global::System.Nullable<bool> ClientFailedToMakeAConnection, 
                    global::System.Nullable<global::System.DateTimeOffset> LastTimeClientFailedToMakeAConnection, 
                    global::System.Nullable<int> LoginFailedForUserId, 
                    global::System.Nullable<global::System.DateTimeOffset> LastTimeLoginFailedForUser, 
                    string DomainNm, 
                    global::System.Nullable<int> DbLinkLoginId, 
                    global::System.Nullable<int> LinkedFromServerId, 
                    global::System.Nullable<int> HostId, 
                    string HostNm, 
                    string HostOSDesc, 
                    string HostNmPhysicalNetBIOS, 
                    string Purpose, 
                    string MethodsUsedToDeterminePurpose, 
                    string Edition, 
                    global::System.Nullable<int> EngineEdition, 
                    string EditionNm, 
                    string ProductBuild, 
                    string ProductBuildType, 
                    string ProductReleaseYear, 
                    string ProductVersion, 
                    string ProductLevel, 
                    string LastKBApplied, 
                    string ProductMajorVersion, 
                    string ProductMinorVersion, 
                    string ProductUpdateLevel, 
                    string Collation, 
                    string ErrorLogFileNm, 
                    string FilestreamConfiguredLevel, 
                    string FilestreamShareNm, 
                    global::System.Nullable<int> HadrManagerStatus, 
                    global::System.Nullable<int> IsHadrEnabled, 
                    global::System.Nullable<int> IsXTPSupported, 
                    global::System.Nullable<int> IsClustered, 
                    global::System.Nullable<int> IsPolyBaseInstalled, 
                    global::System.Nullable<int> IsIntegratedSecurityOnly, 
                    global::System.Nullable<int> IsSingleUser, 
                    global::System.Nullable<int> IsFullTextInstalled, 
                    global::System.Nullable<int> IsAdvancedAnalyticsInstalled, 
                    global::System.Nullable<int> IsLocalDb, 
                    string BuildClrVersion, 
                    global::System.Nullable<int> ProcessId, 
                    global::System.Nullable<int> ComparisonStyle, 
                    string SqlCharSetNm, 
                    string SqlSortOrderNm, 
                    string BackupPrimaryPath, 
                    string BackupSecondaryPath, 
                    string LastBackupName, 
                    global::System.Nullable<global::System.DateTimeOffset> Created, 
                    global::System.Nullable<int> CreatedBy, 
                    global::System.Nullable<global::System.DateTimeOffset> Updated, 
                    global::System.Nullable<int> UpdatedBy, 
                    global::System.Nullable<global::System.DateTimeOffset> TestedButNoChange, 
                    global::System.Nullable<int> TestedButNoChangeBy, 
                    global::System.Nullable<global::System.DateTimeOffset> Audited, 
                    int SourceId, 
                    global::System.Nullable<int> SourceId2, 
                    global::System.Nullable<int> SourceId3, 
                    global::System.Nullable<int> SourceId4, 
                    global::System.Nullable<bool> IsDMZ, 
                    global::System.Nullable<int> FedFromServerId, 
                    global::System.Nullable<int> FeedsIntoServerId, 
                    string Region, 
                    int Original_ServerId, 
                    string Original_ServerNm, 
                    string Original_ServerType, 
                    string Original_Impl, 
                    string Original_ServerAliases, 
                    string Original_ServerEnvironments, 
                    global::System.Nullable<byte> Original_EnvironmentId, 
                    string Original_RestrictionNotice, 
                    string Original_RestrictedByNm, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_Restricted, 
                    string Original_InstanceNm, 
                    byte[] Original_IP4Address, 
                    global::System.Nullable<bool> Original_FoundInDocument, 
                    global::System.Nullable<bool> Original_LegacySource, 
                    global::System.Nullable<bool> Original_NoLongerExists, 
                    bool Original_NoInfoDueToConnectFailure, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_LastTimePingSucceeded, 
                    global::System.Nullable<long> Original_SuccessfulPingDurationNS, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_LastTimePingFailed, 
                    global::System.Nullable<long> Original_FailedPingDurationNS, 
                    global::System.Nullable<int> Original_PingFailed, 
                    global::System.Nullable<bool> Original_LongTimeoutAndFailedToConnect, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_LastTimeLongTimeoutAndFailedToConnect, 
                    global::System.Nullable<int> Original_NoAccessForADUserId, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_LastTimeNoAccessForADUserId, 
                    global::System.Nullable<bool> Original_ConnectionAttemptTimedOut, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_LastTimeConnectionAttemptTimedOut, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_LastTimeConnectionAttemptSucceeded, 
                    global::System.Nullable<long> Original_TimeItTookToConnect, 
                    global::System.Nullable<int> Original_ConnectTimeoutSetAtTimeOfTimeOut, 
                    global::System.Nullable<bool> Original_ClientFailedToMakeAConnection, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_LastTimeClientFailedToMakeAConnection, 
                    global::System.Nullable<int> Original_LoginFailedForUserId, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_LastTimeLoginFailedForUser, 
                    int Original_Skip, 
                    string Original_DomainNm, 
                    global::System.Nullable<int> Original_DbLinkLoginId, 
                    global::System.Nullable<int> Original_LinkedFromServerId, 
                    global::System.Nullable<int> Original_HostId, 
                    string Original_HostNm, 
                    string Original_HostOSDesc, 
                    string Original_HostNmPhysicalNetBIOS, 
                    string Original_Purpose, 
                    string Original_MethodsUsedToDeterminePurpose, 
                    string Original_Edition, 
                    global::System.Nullable<int> Original_EngineEdition, 
                    string Original_EditionNm, 
                    string Original_ProductBuild, 
                    string Original_ProductBuildType, 
                    string Original_ProductReleaseYear, 
                    string Original_ProductVersion, 
                    string Original_ProductLevel, 
                    string Original_LastKBApplied, 
                    string Original_ProductMajorVersion, 
                    string Original_ProductMinorVersion, 
                    string Original_ProductUpdateLevel, 
                    string Original_Collation, 
                    string Original_FilestreamConfiguredLevel, 
                    string Original_FilestreamShareNm, 
                    global::System.Nullable<int> Original_HadrManagerStatus, 
                    global::System.Nullable<int> Original_IsHadrEnabled, 
                    global::System.Nullable<int> Original_IsXTPSupported, 
                    global::System.Nullable<int> Original_IsClustered, 
                    global::System.Nullable<int> Original_IsPolyBaseInstalled, 
                    global::System.Nullable<int> Original_IsIntegratedSecurityOnly, 
                    global::System.Nullable<int> Original_IsSingleUser, 
                    global::System.Nullable<int> Original_IsFullTextInstalled, 
                    global::System.Nullable<int> Original_IsAdvancedAnalyticsInstalled, 
                    global::System.Nullable<int> Original_IsLocalDb, 
                    string Original_BuildClrVersion, 
                    global::System.Nullable<int> Original_ProcessId, 
                    global::System.Nullable<int> Original_ComparisonStyle, 
                    string Original_SqlCharSetNm, 
                    string Original_SqlSortOrderNm, 
                    string Original_BackupPrimaryPath, 
                    string Original_BackupSecondaryPath, 
                    string Original_LastBackupName, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_Created, 
                    global::System.Nullable<int> Original_CreatedBy, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_Updated, 
                    global::System.Nullable<int> Original_UpdatedBy, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_TestedButNoChange, 
                    global::System.Nullable<int> Original_TestedButNoChangeBy, 
                    global::System.Nullable<global::System.DateTimeOffset> Original_Audited, 
                    int Original_SourceId, 
                    global::System.Nullable<int> Original_SourceId2, 
                    global::System.Nullable<int> Original_SourceId3, 
                    global::System.Nullable<int> Original_SourceId4, 
                    global::System.Nullable<bool> Original_IsDMZ, 
                    global::System.Nullable<int> Original_FedFromServerId, 
                    global::System.Nullable<int> Original_FeedsIntoServerId, 
                    string Original_Region) {
            return this.Update(ServerNm, ServerType, Impl, ServerDesc, ServerAliases, ServerEnvironments, EnvironmentId, RestrictionNotice, RestrictedByNm, Restricted, InstanceNm, IP4Address, FoundInDocument, LegacySource, NoLongerExists, NoInfoDueToConnectFailure, LastTimePingSucceeded, SuccessfulPingDurationNS, LastTimePingFailed, FailedPingDurationNS, LongTimeoutAndFailedToConnect, LastTimeLongTimeoutAndFailedToConnect, NoAccessForADUserId, LastTimeNoAccessForADUserId, ConnectionAttemptTimedOut, LastTimeConnectionAttemptTimedOut, LastTimeConnectionAttemptSucceeded, TimeItTookToConnect, ConnectTimeoutSetAtTimeOfTimeOut, ClientFailedToMakeAConnection, LastTimeClientFailedToMakeAConnection, LoginFailedForUserId, LastTimeLoginFailedForUser, DomainNm, DbLinkLoginId, LinkedFromServerId, HostId, HostNm, HostOSDesc, HostNmPhysicalNetBIOS, Purpose, MethodsUsedToDeterminePurpose, Edition, EngineEdition, EditionNm, ProductBuild, ProductBuildType, ProductReleaseYear, ProductVersion, ProductLevel, LastKBApplied, ProductMajorVersion, ProductMinorVersion, ProductUpdateLevel, Collation, ErrorLogFileNm, FilestreamConfiguredLevel, FilestreamShareNm, HadrManagerStatus, IsHadrEnabled, IsXTPSupported, IsClustered, IsPolyBaseInstalled, IsIntegratedSecurityOnly, IsSingleUser, IsFullTextInstalled, IsAdvancedAnalyticsInstalled, IsLocalDb, BuildClrVersion, ProcessId, ComparisonStyle, SqlCharSetNm, SqlSortOrderNm, BackupPrimaryPath, BackupSecondaryPath, LastBackupName, Created, CreatedBy, Updated, UpdatedBy, TestedButNoChange, TestedButNoChangeBy, Audited, SourceId, SourceId2, SourceId3, SourceId4, IsDMZ, FedFromServerId, FeedsIntoServerId, Region, Original_ServerId, Original_ServerNm, Original_ServerType, Original_Impl, Original_ServerAliases, Original_ServerEnvironments, Original_EnvironmentId, Original_RestrictionNotice, Original_RestrictedByNm, Original_Restricted, Original_InstanceNm, Original_IP4Address, Original_FoundInDocument, Original_LegacySource, Original_NoLongerExists, Original_NoInfoDueToConnectFailure, Original_LastTimePingSucceeded, Original_SuccessfulPingDurationNS, Original_LastTimePingFailed, Original_FailedPingDurationNS, Original_PingFailed, Original_LongTimeoutAndFailedToConnect, Original_LastTimeLongTimeoutAndFailedToConnect, Original_NoAccessForADUserId, Original_LastTimeNoAccessForADUserId, Original_ConnectionAttemptTimedOut, Original_LastTimeConnectionAttemptTimedOut, Original_LastTimeConnectionAttemptSucceeded, Original_TimeItTookToConnect, Original_ConnectTimeoutSetAtTimeOfTimeOut, Original_ClientFailedToMakeAConnection, Original_LastTimeClientFailedToMakeAConnection, Original_LoginFailedForUserId, Original_LastTimeLoginFailedForUser, Original_Skip, Original_DomainNm, Original_DbLinkLoginId, Original_LinkedFromServerId, Original_HostId, Original_HostNm, Original_HostOSDesc, Original_HostNmPhysicalNetBIOS, Original_Purpose, Original_MethodsUsedToDeterminePurpose, Original_Edition, Original_EngineEdition, Original_EditionNm, Original_ProductBuild, Original_ProductBuildType, Original_ProductReleaseYear, Original_ProductVersion, Original_ProductLevel, Original_LastKBApplied, Original_ProductMajorVersion, Original_ProductMinorVersion, Original_ProductUpdateLevel, Original_Collation, Original_FilestreamConfiguredLevel, Original_FilestreamShareNm, Original_HadrManagerStatus, Original_IsHadrEnabled, Original_IsXTPSupported, Original_IsClustered, Original_IsPolyBaseInstalled, Original_IsIntegratedSecurityOnly, Original_IsSingleUser, Original_IsFullTextInstalled, Original_IsAdvancedAnalyticsInstalled, Original_IsLocalDb, Original_BuildClrVersion, Original_ProcessId, Original_ComparisonStyle, Original_SqlCharSetNm, Original_SqlSortOrderNm, Original_BackupPrimaryPath, Original_BackupSecondaryPath, Original_LastBackupName, Original_Created, Original_CreatedBy, Original_Updated, Original_UpdatedBy, Original_TestedButNoChange, Original_TestedButNoChangeBy, Original_Audited, Original_SourceId, Original_SourceId2, Original_SourceId3, Original_SourceId4, Original_IsDMZ, Original_FedFromServerId, Original_FeedsIntoServerId, Original_Region, Original_ServerId);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class UsersTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UsersTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Users";
            tableMapping.ColumnMappings.Add("UserId", "UserId");
            tableMapping.ColumnMappings.Add("DomainCd", "DomainCd");
            tableMapping.ColumnMappings.Add("UserLogonNm", "UserLogonNm");
            tableMapping.ColumnMappings.Add("UserLogonNm2000", "UserLogonNm2000");
            tableMapping.ColumnMappings.Add("FirstName", "FirstName");
            tableMapping.ColumnMappings.Add("LastName", "LastName");
            tableMapping.ColumnMappings.Add("DisplayName", "DisplayName");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("Office", "Office");
            tableMapping.ColumnMappings.Add("LongFormLogonNm", "LongFormLogonNm");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [InfrastructureForAD].[Users] WHERE (([UserId] = @Original_UserId) AND ([DomainCd] = @Original_DomainCd) AND ([UserLogonNm] = @Original_UserLogonNm) AND ([UserLogonNm2000] = @Original_UserLogonNm2000) AND ([FirstName] = @Original_FirstName) AND ((@IsNull_LastName = 1 AND [LastName] IS NULL) OR ([LastName] = @Original_LastName)) AND ((@IsNull_DisplayName = 1 AND [DisplayName] IS NULL) OR ([DisplayName] = @Original_DisplayName)) AND ((@IsNull_Description = 1 AND [Description] IS NULL) OR ([Description] = @Original_Description)) AND ((@IsNull_Office = 1 AND [Office] IS NULL) OR ([Office] = @Original_Office)) AND ([LongFormLogonNm] = @Original_LongFormLogonNm))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DomainCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DomainCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UserLogonNm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserLogonNm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UserLogonNm2000", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserLogonNm2000", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FirstName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DisplayName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DisplayName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DisplayName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DisplayName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Office", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Office", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Office", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Office", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LongFormLogonNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LongFormLogonNm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [InfrastructureForAD].[Users] ([DomainCd], [UserLogonNm], [UserLogonNm2000], [FirstName], [LastName], [DisplayName], [Description], [Office]) VALUES (@DomainCd, @UserLogonNm, @UserLogonNm2000, @FirstName, @LastName, @DisplayName, @Description, @Office);
SELECT UserId, DomainCd, UserLogonNm, UserLogonNm2000, FirstName, LastName, DisplayName, Description, Office, LongFormLogonNm FROM InfrastructureForAD.Users WHERE (UserId = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DomainCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DomainCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserLogonNm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserLogonNm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserLogonNm2000", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserLogonNm2000", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FirstName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DisplayName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DisplayName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Office", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Office", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [InfrastructureForAD].[Users] SET [DomainCd] = @DomainCd, [UserLogonNm] = @UserLogonNm, [UserLogonNm2000] = @UserLogonNm2000, [FirstName] = @FirstName, [LastName] = @LastName, [DisplayName] = @DisplayName, [Description] = @Description, [Office] = @Office WHERE (([UserId] = @Original_UserId) AND ([DomainCd] = @Original_DomainCd) AND ([UserLogonNm] = @Original_UserLogonNm) AND ([UserLogonNm2000] = @Original_UserLogonNm2000) AND ([FirstName] = @Original_FirstName) AND ((@IsNull_LastName = 1 AND [LastName] IS NULL) OR ([LastName] = @Original_LastName)) AND ((@IsNull_DisplayName = 1 AND [DisplayName] IS NULL) OR ([DisplayName] = @Original_DisplayName)) AND ((@IsNull_Description = 1 AND [Description] IS NULL) OR ([Description] = @Original_Description)) AND ((@IsNull_Office = 1 AND [Office] IS NULL) OR ([Office] = @Original_Office)) AND ([LongFormLogonNm] = @Original_LongFormLogonNm));
SELECT UserId, DomainCd, UserLogonNm, UserLogonNm2000, FirstName, LastName, DisplayName, Description, Office, LongFormLogonNm FROM InfrastructureForAD.Users WHERE (UserId = @UserId)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DomainCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DomainCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserLogonNm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserLogonNm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserLogonNm2000", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserLogonNm2000", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FirstName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DisplayName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DisplayName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Office", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Office", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DomainCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DomainCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UserLogonNm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserLogonNm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UserLogonNm2000", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserLogonNm2000", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FirstName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DisplayName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DisplayName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DisplayName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DisplayName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Office", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Office", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Office", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Office", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LongFormLogonNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LongFormLogonNm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "UserId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QuickInterface.Properties.Settings.Default.DBABnch_LOCALConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT UserId, DomainCd, UserLogonNm, UserLogonNm2000, FirstName, LastName, Displ" +
                "ayName, Description, Office, LongFormLogonNm FROM InfrastructureForAD.Users";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DBABnch_LOCALDataSet.UsersDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DBABnch_LOCALDataSet.UsersDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DBABnch_LOCALDataSet.UsersDataTable dataTable = new DBABnch_LOCALDataSet.UsersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DBABnch_LOCALDataSet.UsersDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DBABnch_LOCALDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Users");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_UserId, string Original_DomainCd, string Original_UserLogonNm, string Original_UserLogonNm2000, string Original_FirstName, string Original_LastName, string Original_DisplayName, string Original_Description, string Original_Office, string Original_LongFormLogonNm) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_UserId));
            if ((Original_DomainCd == null)) {
                throw new global::System.ArgumentNullException("Original_DomainCd");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_DomainCd));
            }
            if ((Original_UserLogonNm == null)) {
                throw new global::System.ArgumentNullException("Original_UserLogonNm");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_UserLogonNm));
            }
            if ((Original_UserLogonNm2000 == null)) {
                throw new global::System.ArgumentNullException("Original_UserLogonNm2000");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_UserLogonNm2000));
            }
            if ((Original_FirstName == null)) {
                throw new global::System.ArgumentNullException("Original_FirstName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_FirstName));
            }
            if ((Original_LastName == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_LastName));
            }
            if ((Original_DisplayName == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_DisplayName));
            }
            if ((Original_Description == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Description));
            }
            if ((Original_Office == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Office));
            }
            if ((Original_LongFormLogonNm == null)) {
                throw new global::System.ArgumentNullException("Original_LongFormLogonNm");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_LongFormLogonNm));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string DomainCd, string UserLogonNm, string UserLogonNm2000, string FirstName, string LastName, string DisplayName, string Description, string Office) {
            if ((DomainCd == null)) {
                throw new global::System.ArgumentNullException("DomainCd");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(DomainCd));
            }
            if ((UserLogonNm == null)) {
                throw new global::System.ArgumentNullException("UserLogonNm");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(UserLogonNm));
            }
            if ((UserLogonNm2000 == null)) {
                throw new global::System.ArgumentNullException("UserLogonNm2000");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(UserLogonNm2000));
            }
            if ((FirstName == null)) {
                throw new global::System.ArgumentNullException("FirstName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(FirstName));
            }
            if ((LastName == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(LastName));
            }
            if ((DisplayName == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(DisplayName));
            }
            if ((Description == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Description));
            }
            if ((Office == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Office));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string DomainCd, 
                    string UserLogonNm, 
                    string UserLogonNm2000, 
                    string FirstName, 
                    string LastName, 
                    string DisplayName, 
                    string Description, 
                    string Office, 
                    int Original_UserId, 
                    string Original_DomainCd, 
                    string Original_UserLogonNm, 
                    string Original_UserLogonNm2000, 
                    string Original_FirstName, 
                    string Original_LastName, 
                    string Original_DisplayName, 
                    string Original_Description, 
                    string Original_Office, 
                    string Original_LongFormLogonNm, 
                    int UserId) {
            if ((DomainCd == null)) {
                throw new global::System.ArgumentNullException("DomainCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(DomainCd));
            }
            if ((UserLogonNm == null)) {
                throw new global::System.ArgumentNullException("UserLogonNm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(UserLogonNm));
            }
            if ((UserLogonNm2000 == null)) {
                throw new global::System.ArgumentNullException("UserLogonNm2000");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(UserLogonNm2000));
            }
            if ((FirstName == null)) {
                throw new global::System.ArgumentNullException("FirstName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(FirstName));
            }
            if ((LastName == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(LastName));
            }
            if ((DisplayName == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(DisplayName));
            }
            if ((Description == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Description));
            }
            if ((Office == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Office));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_UserId));
            if ((Original_DomainCd == null)) {
                throw new global::System.ArgumentNullException("Original_DomainCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_DomainCd));
            }
            if ((Original_UserLogonNm == null)) {
                throw new global::System.ArgumentNullException("Original_UserLogonNm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_UserLogonNm));
            }
            if ((Original_UserLogonNm2000 == null)) {
                throw new global::System.ArgumentNullException("Original_UserLogonNm2000");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_UserLogonNm2000));
            }
            if ((Original_FirstName == null)) {
                throw new global::System.ArgumentNullException("Original_FirstName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_FirstName));
            }
            if ((Original_LastName == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_LastName));
            }
            if ((Original_DisplayName == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_DisplayName));
            }
            if ((Original_Description == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_Description));
            }
            if ((Original_Office == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_Office));
            }
            if ((Original_LongFormLogonNm == null)) {
                throw new global::System.ArgumentNullException("Original_LongFormLogonNm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_LongFormLogonNm));
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(UserId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string DomainCd, 
                    string UserLogonNm, 
                    string UserLogonNm2000, 
                    string FirstName, 
                    string LastName, 
                    string DisplayName, 
                    string Description, 
                    string Office, 
                    int Original_UserId, 
                    string Original_DomainCd, 
                    string Original_UserLogonNm, 
                    string Original_UserLogonNm2000, 
                    string Original_FirstName, 
                    string Original_LastName, 
                    string Original_DisplayName, 
                    string Original_Description, 
                    string Original_Office, 
                    string Original_LongFormLogonNm) {
            return this.Update(DomainCd, UserLogonNm, UserLogonNm2000, FirstName, LastName, DisplayName, Description, Office, Original_UserId, Original_DomainCd, Original_UserLogonNm, Original_UserLogonNm2000, Original_FirstName, Original_LastName, Original_DisplayName, Original_Description, Original_Office, Original_LongFormLogonNm, Original_UserId);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TicketsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public TicketsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Tickets";
            tableMapping.ColumnMappings.Add("Incident_RecID", "Incident_RecID");
            tableMapping.ColumnMappings.Add("IncidentID", "IncidentID");
            tableMapping.ColumnMappings.Add("GlobalRegionCd", "GlobalRegionCd");
            tableMapping.ColumnMappings.Add("JournalLastModified", "JournalLastModified");
            tableMapping.ColumnMappings.Add("LastModifiedDateTime", "LastModifiedDateTime");
            tableMapping.ColumnMappings.Add("Location", "Location");
            tableMapping.ColumnMappings.Add("STATUS", "STATUS");
            tableMapping.ColumnMappings.Add("Stat_NumberOfTouches", "Stat_NumberOfTouches");
            tableMapping.ColumnMappings.Add("Waiting4ThsMnyApprovals", "Waiting4ThsMnyApprovals");
            tableMapping.ColumnMappings.Add("NofApprovedApprovals", "NofApprovedApprovals");
            tableMapping.ColumnMappings.Add("NofDeniedApprovals", "NofDeniedApprovals");
            tableMapping.ColumnMappings.Add("PendingReason", "PendingReason");
            tableMapping.ColumnMappings.Add("Stat_SLAResponseGood", "Stat_SLAResponseGood");
            tableMapping.ColumnMappings.Add("Stat_SLAResponseWarning", "Stat_SLAResponseWarning");
            tableMapping.ColumnMappings.Add("Stat_SLAResponseBreached", "Stat_SLAResponseBreached");
            tableMapping.ColumnMappings.Add("BreachNotes", "BreachNotes");
            tableMapping.ColumnMappings.Add("ReasonForBreach", "ReasonForBreach");
            tableMapping.ColumnMappings.Add("Stat_SLAResolutionWarning", "Stat_SLAResolutionWarning");
            tableMapping.ColumnMappings.Add("Stat_SLAResolutionGood", "Stat_SLAResolutionGood");
            tableMapping.ColumnMappings.Add("Stat_SLAResolutionBreached", "Stat_SLAResolutionBreached");
            tableMapping.ColumnMappings.Add("NofUnreadJournals", "NofUnreadJournals");
            tableMapping.ColumnMappings.Add("Withdrawn", "Withdrawn");
            tableMapping.ColumnMappings.Add("NeverFixedIncident", "NeverFixedIncident");
            tableMapping.ColumnMappings.Add("Cause", "Cause");
            tableMapping.ColumnMappings.Add("PRIORITY", "PRIORITY");
            tableMapping.ColumnMappings.Add("Impact", "Impact");
            tableMapping.ColumnMappings.Add("Urgency", "Urgency");
            tableMapping.ColumnMappings.Add("TeamTier", "TeamTier");
            tableMapping.ColumnMappings.Add("L4Escalation", "L4Escalation");
            tableMapping.ColumnMappings.Add("InterestingDesc", "InterestingDesc");
            tableMapping.ColumnMappings.Add("EnhancementDesc", "EnhancementDesc");
            tableMapping.ColumnMappings.Add("CommentsEntry", "CommentsEntry");
            tableMapping.ColumnMappings.Add("Comments", "Comments");
            tableMapping.ColumnMappings.Add("CloseDescription", "CloseDescription");
            tableMapping.ColumnMappings.Add("SERVICE", "SERVICE");
            tableMapping.ColumnMappings.Add("Category", "Category");
            tableMapping.ColumnMappings.Add("Subcategory", "Subcategory");
            tableMapping.ColumnMappings.Add("WorkOrderType", "WorkOrderType");
            tableMapping.ColumnMappings.Add("SupportArea", "SupportArea");
            tableMapping.ColumnMappings.Add("Platform", "Platform");
            tableMapping.ColumnMappings.Add("SmartClassifySearchString", "SmartClassifySearchString");
            tableMapping.ColumnMappings.Add("MatchingText", "MatchingText");
            tableMapping.ColumnMappings.Add("IncidentType", "IncidentType");
            tableMapping.ColumnMappings.Add("APPLICATION", "APPLICATION");
            tableMapping.ColumnMappings.Add("ApplicationCommonName", "ApplicationCommonName");
            tableMapping.ColumnMappings.Add("CallSource", "CallSource");
            tableMapping.ColumnMappings.Add("InitialITContact", "InitialITContact");
            tableMapping.ColumnMappings.Add("CreatedBy", "CreatedBy");
            tableMapping.ColumnMappings.Add("SubmitOnBehalfOf", "SubmitOnBehalfOf");
            tableMapping.ColumnMappings.Add("SubmitOnBehalfOfTitle", "SubmitOnBehalfOfTitle");
            tableMapping.ColumnMappings.Add("AssignedBy", "AssignedBy");
            tableMapping.ColumnMappings.Add("OwnedBy", "OwnedBy");
            tableMapping.ColumnMappings.Add("PreviousOwnedBy", "PreviousOwnedBy");
            tableMapping.ColumnMappings.Add("ActualL1Approval", "ActualL1Approval");
            tableMapping.ColumnMappings.Add("OwnedByManager", "OwnedByManager");
            tableMapping.ColumnMappings.Add("BRM", "BRM");
            tableMapping.ColumnMappings.Add("CustomerDisplayName", "CustomerDisplayName");
            tableMapping.ColumnMappings.Add("LastModBy", "LastModBy");
            tableMapping.ColumnMappings.Add("WatchList", "WatchList");
            tableMapping.ColumnMappings.Add("CustomerWatchList", "CustomerWatchList");
            tableMapping.ColumnMappings.Add("TechnicianWatchList", "TechnicianWatchList");
            tableMapping.ColumnMappings.Add("CCWatchlistRecipient", "CCWatchlistRecipient");
            tableMapping.ColumnMappings.Add("OwnedByTeam", "OwnedByTeam");
            tableMapping.ColumnMappings.Add("CustomerDepartment", "CustomerDepartment");
            tableMapping.ColumnMappings.Add("BusinessGroup", "BusinessGroup");
            tableMapping.ColumnMappings.Add("ITBusinessGroup", "ITBusinessGroup");
            tableMapping.ColumnMappings.Add("BusinessUnit", "BusinessUnit");
            tableMapping.ColumnMappings.Add("DefaultTeam", "DefaultTeam");
            tableMapping.ColumnMappings.Add("OldOwnedByTeam", "OldOwnedByTeam");
            tableMapping.ColumnMappings.Add("InitialAssignedTeam", "InitialAssignedTeam");
            tableMapping.ColumnMappings.Add("EDMHoldingTeam", "EDMHoldingTeam");
            tableMapping.ColumnMappings.Add("EDMApprovalAssignmentTeam", "EDMApprovalAssignmentTeam");
            tableMapping.ColumnMappings.Add("EDMAssignmentTeam", "EDMAssignmentTeam");
            tableMapping.ColumnMappings.Add("TeamOrPersonInvolvedWthThsTicket", "TeamOrPersonInvolvedWthThsTicket");
            tableMapping.ColumnMappings.Add("TeamOrPersonInvolvedNickName", "TeamOrPersonInvolvedNickName");
            tableMapping.ColumnMappings.Add("TeamOrPersonInvolvedLogin", "TeamOrPersonInvolvedLogin");
            tableMapping.ColumnMappings.Add("ReasonForInvolvement", "ReasonForInvolvement");
            tableMapping.ColumnMappings.Add("NoteOnInvolvement", "NoteOnInvolvement");
            tableMapping.ColumnMappings.Add("CreatedDateTime", "CreatedDateTime");
            tableMapping.ColumnMappings.Add("CreatedDay", "CreatedDay");
            tableMapping.ColumnMappings.Add("CreatedHour", "CreatedHour");
            tableMapping.ColumnMappings.Add("NeedByDate1", "NeedByDate1");
            tableMapping.ColumnMappings.Add("Stat_DateTimeAssigned", "Stat_DateTimeAssigned");
            tableMapping.ColumnMappings.Add("SLARespondByDeadline", "SLARespondByDeadline");
            tableMapping.ColumnMappings.Add("SLAResponseWarning", "SLAResponseWarning");
            tableMapping.ColumnMappings.Add("Stat_DateTimeResponded", "Stat_DateTimeResponded");
            tableMapping.ColumnMappings.Add("Stat_DateTimeInProgress", "Stat_DateTimeInProgress");
            tableMapping.ColumnMappings.Add("SLAResolutionWarning", "SLAResolutionWarning");
            tableMapping.ColumnMappings.Add("SLAResolveByDeadline", "SLAResolveByDeadline");
            tableMapping.ColumnMappings.Add("Stat_DateTimeResolved", "Stat_DateTimeResolved");
            tableMapping.ColumnMappings.Add("InvolvementLastModified", "InvolvementLastModified");
            tableMapping.ColumnMappings.Add("Stat_DateTimeClosed", "Stat_DateTimeClosed");
            tableMapping.ColumnMappings.Add("ClosedDateTime", "ClosedDateTime");
            tableMapping.ColumnMappings.Add("Stat_IncidentReopened", "Stat_IncidentReopened");
            tableMapping.ColumnMappings.Add("Stat_DateTimeReOpened", "Stat_DateTimeReOpened");
            tableMapping.ColumnMappings.Add("Incident\'s Been Open n Hours", "Incident\'s Been Open n Hours");
            tableMapping.ColumnMappings.Add("Stat_24x7ElapsedTime", "Stat_24x7ElapsedTime");
            tableMapping.ColumnMappings.Add("STCTimeInMinutes", "STCTimeInMinutes");
            tableMapping.ColumnMappings.Add("TotalSTCTimeInMinutes", "TotalSTCTimeInMinutes");
            tableMapping.ColumnMappings.Add("TimeInApproval247", "TimeInApproval247");
            tableMapping.ColumnMappings.Add("IncidentDurationFromAssignToResolve", "IncidentDurationFromAssignToResolve");
            tableMapping.ColumnMappings.Add("IncidentDurationInBusinessHours", "IncidentDurationInBusinessHours");
            tableMapping.ColumnMappings.Add("IncidentDurationInHours", "IncidentDurationInHours");
            tableMapping.ColumnMappings.Add("IncidentDurationWOPending", "IncidentDurationWOPending");
            tableMapping.ColumnMappings.Add("IncidentDUrationBusinessDaysPendings", "IncidentDUrationBusinessDaysPendings");
            tableMapping.ColumnMappings.Add("IncidentDurationWithoutPendingBH", "IncidentDurationWithoutPendingBH");
            tableMapping.ColumnMappings.Add("IncidentDurationWithoutPendingH", "IncidentDurationWithoutPendingH");
            tableMapping.ColumnMappings.Add("TotalTaskTime", "TotalTaskTime");
            tableMapping.ColumnMappings.Add("TotalNofTasks", "TotalNofTasks");
            tableMapping.ColumnMappings.Add("HasAtLeastOneTaskInProgress", "HasAtLeastOneTaskInProgress");
            tableMapping.ColumnMappings.Add("HasAtLeastOneTaskOnHold", "HasAtLeastOneTaskOnHold");
            tableMapping.ColumnMappings.Add("HasAtLeastOneClosedTask", "HasAtLeastOneClosedTask");
            tableMapping.ColumnMappings.Add("TaskClosedCount", "TaskClosedCount");
            tableMapping.ColumnMappings.Add("HasNoOpenTasks", "HasNoOpenTasks");
            tableMapping.ColumnMappings.Add("CherwellVersion", "CherwellVersion");
            tableMapping.ColumnMappings.Add("CherwellVersionNm", "CherwellVersionNm");
            tableMapping.ColumnMappings.Add("LastInvolvment", "LastInvolvment");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QuickInterface.Properties.Settings.Default.DBABnch_LOCALConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Incident_RecID, IncidentID, GlobalRegionCd, JournalLastModified, LastModif" +
                "iedDateTime, Location, STATUS, Stat_NumberOfTouches, Waiting4ThsMnyApprovals, No" +
                "fApprovedApprovals, NofDeniedApprovals, PendingReason, Stat_SLAResponseGood, Sta" +
                "t_SLAResponseWarning, Stat_SLAResponseBreached, BreachNotes, ReasonForBreach, St" +
                "at_SLAResolutionWarning, Stat_SLAResolutionGood, Stat_SLAResolutionBreached, Nof" +
                "UnreadJournals, Withdrawn, NeverFixedIncident, Cause, PRIORITY, Impact, Urgency," +
                " TeamTier, L4Escalation, InterestingDesc, EnhancementDesc, CommentsEntry, Commen" +
                "ts, CloseDescription, SERVICE, Category, Subcategory, WorkOrderType, SupportArea" +
                ", Platform, SmartClassifySearchString, MatchingText, IncidentType, APPLICATION, " +
                "ApplicationCommonName, CallSource, InitialITContact, CreatedBy, SubmitOnBehalfOf" +
                ", SubmitOnBehalfOfTitle, AssignedBy, OwnedBy, PreviousOwnedBy, ActualL1Approval," +
                " OwnedByManager, BRM, CustomerDisplayName, LastModBy, WatchList, CustomerWatchLi" +
                "st, TechnicianWatchList, CCWatchlistRecipient, OwnedByTeam, CustomerDepartment, " +
                "BusinessGroup, ITBusinessGroup, BusinessUnit, DefaultTeam, OldOwnedByTeam, Initi" +
                "alAssignedTeam, EDMHoldingTeam, EDMApprovalAssignmentTeam, EDMAssignmentTeam, Te" +
                "amOrPersonInvolvedWthThsTicket, TeamOrPersonInvolvedNickName, TeamOrPersonInvolv" +
                "edLogin, ReasonForInvolvement, NoteOnInvolvement, CreatedDateTime, CreatedDay, C" +
                "reatedHour, NeedByDate1, Stat_DateTimeAssigned, SLARespondByDeadline, SLARespons" +
                "eWarning, Stat_DateTimeResponded, Stat_DateTimeInProgress, SLAResolutionWarning," +
                " SLAResolveByDeadline, Stat_DateTimeResolved, InvolvementLastModified, Stat_Date" +
                "TimeClosed, ClosedDateTime, Stat_IncidentReopened, Stat_DateTimeReOpened, [Incid" +
                "ent\'s Been Open n Hours], Stat_24x7ElapsedTime, STCTimeInMinutes, TotalSTCTimeIn" +
                "Minutes, TimeInApproval247, IncidentDurationFromAssignToResolve, IncidentDuratio" +
                "nInBusinessHours, IncidentDurationInHours, IncidentDurationWOPending, IncidentDU" +
                "rationBusinessDaysPendings, IncidentDurationWithoutPendingBH, IncidentDurationWi" +
                "thoutPendingH, TotalTaskTime, TotalNofTasks, HasAtLeastOneTaskInProgress, HasAtL" +
                "eastOneTaskOnHold, HasAtLeastOneClosedTask, TaskClosedCount, HasNoOpenTasks, Che" +
                "rwellVersion, CherwellVersionNm, LastInvolvment FROM TicketProcessingCacheView.T" +
                "ickets";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DBABnch_LOCALDataSet.TicketsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DBABnch_LOCALDataSet.TicketsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DBABnch_LOCALDataSet.TicketsDataTable dataTable = new DBABnch_LOCALDataSet.TicketsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TicketsOverMidMonthTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public TicketsOverMidMonthTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TicketsOverMidMonth";
            tableMapping.ColumnMappings.Add("fromdate", "fromdate");
            tableMapping.ColumnMappings.Add("todate", "todate");
            tableMapping.ColumnMappings.Add("OwnedBy", "OwnedBy");
            tableMapping.ColumnMappings.Add("All", "All");
            tableMapping.ColumnMappings.Add("Resolved", "Resolved");
            tableMapping.ColumnMappings.Add("Closed", "Closed");
            tableMapping.ColumnMappings.Add("Assigned", "Assigned");
            tableMapping.ColumnMappings.Add("InProcess", "InProcess");
            tableMapping.ColumnMappings.Add("Pending", "Pending");
            tableMapping.ColumnMappings.Add("New", "New");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QuickInterface.Properties.Settings.Default.DBABnch_LOCALConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        fromdate, todate, OwnedBy, [All], Resolved, Closed, Assigned, InPro" +
                "cess, Pending, New\r\nFROM            Reports.TicketsOverMidMonth\r\nORDER BY [All] " +
                "DESC";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DBABnch_LOCALDataSet.TicketsOverMidMonthDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DBABnch_LOCALDataSet.TicketsOverMidMonthDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DBABnch_LOCALDataSet.TicketsOverMidMonthDataTable dataTable = new DBABnch_LOCALDataSet.TicketsOverMidMonthDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class sp_who3TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public sp_who3TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "sp_who3";
            tableMapping.ColumnMappings.Add("session_id", "session_id");
            tableMapping.ColumnMappings.Add("host_name", "host_name");
            tableMapping.ColumnMappings.Add("login_name", "login_name");
            tableMapping.ColumnMappings.Add("dbname", "dbname");
            tableMapping.ColumnMappings.Add("status", "status");
            tableMapping.ColumnMappings.Add("command", "command");
            tableMapping.ColumnMappings.Add("running_time", "running_time");
            tableMapping.ColumnMappings.Add("BlkBy", "BlkBy");
            tableMapping.ColumnMappings.Add("NoOfOpenTran", "NoOfOpenTran");
            tableMapping.ColumnMappings.Add("wait_type", "wait_type");
            tableMapping.ColumnMappings.Add("granted_memory_GB", "granted_memory_GB");
            tableMapping.ColumnMappings.Add("object_name", "object_name");
            tableMapping.ColumnMappings.Add("program_name", "program_name");
            tableMapping.ColumnMappings.Add("query_plan", "query_plan");
            tableMapping.ColumnMappings.Add("sql_text", "sql_text");
            tableMapping.ColumnMappings.Add("cpu_time", "cpu_time");
            tableMapping.ColumnMappings.Add("start_time", "start_time");
            tableMapping.ColumnMappings.Add("percent_complete", "percent_complete");
            tableMapping.ColumnMappings.Add("est_time_to_go", "est_time_to_go");
            tableMapping.ColumnMappings.Add("est_completion_time", "est_completion_time");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QuickInterface.Properties.Settings.Default.DBABnch_LOCALConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "Utilities.sp_who3";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@x", global::System.Data.SqlDbType.NVarChar, 128, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DBABnch_LOCALDataSet.sp_who3DataTable dataTable, string x) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((x == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(x));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DBABnch_LOCALDataSet.sp_who3DataTable GetData(string x) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((x == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(x));
            }
            DBABnch_LOCALDataSet.sp_who3DataTable dataTable = new DBABnch_LOCALDataSet.sp_who3DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class QueriesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.IDbCommand[] _commandCollection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.IDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.IDbCommand[13];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Connection = new global::System.Data.SqlClient.SqlConnection(global::QuickInterface.Properties.Settings.Default.DBABnch_LOCALConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).CommandText = "DBABnchManagement.AddMissingLinkedServers";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LinkSvrNms", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TestIt", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Note", global::System.Data.SqlDbType.VarChar, 700, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LinkSvrNmsSep", global::System.Data.SqlDbType.NVarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Matches1Unmatched0", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Connection = new global::System.Data.SqlClient.SqlConnection(global::QuickInterface.Properties.Settings.Default.DBABnch_LOCALConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).CommandText = "DBABnchManagement.AddMissingRegisteredServers";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TestIt", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Connection = new global::System.Data.SqlClient.SqlConnection(global::QuickInterface.Properties.Settings.Default.DBABnch_LOCALConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).CommandText = "DBABnchManagement.AddServer";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServerNm", global::System.Data.SqlDbType.NVarChar, 257, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServerDesc", global::System.Data.SqlDbType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TestIt", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[3])).Connection = new global::System.Data.SqlClient.SqlConnection(global::QuickInterface.Properties.Settings.Default.DBABnch_LOCALConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[3])).CommandText = "DBABnchManagement.ConfigureLocalServer";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[3])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[3])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[3])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TestIt", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[3])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AllColumns", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[3])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OnlyNonDefaultSettings", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[4])).Connection = new global::System.Data.SqlClient.SqlConnection(global::QuickInterface.Properties.Settings.Default.DBABnch_LOCALConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[4])).CommandText = "DBASelfConstruction.CreateLinkedServer";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[4])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[4])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[4])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServerNm", global::System.Data.SqlDbType.NVarChar, 128, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[4])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@datasrcNm", global::System.Data.SqlDbType.NVarChar, 257, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[4])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@catalogNm", global::System.Data.SqlDbType.NVarChar, 128, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[4])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.VarChar, 200, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[4])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Force", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[5])).Connection = new global::System.Data.SqlClient.SqlConnection(global::QuickInterface.Properties.Settings.Default.DBABnch_LOCALConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[5])).CommandText = "Utilities.LiveMessage";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[5])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[5])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[5])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Message", global::System.Data.SqlDbType.NVarChar, 1021, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[5])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Parm1", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[5])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Parm2", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[5])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Parm3", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[5])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Parm4", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[5])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Parm5", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[5])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Parm6", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[5])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Parm7", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[5])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Parm8", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[5])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Parm9", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[5])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Parm10", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[6])).Connection = new global::System.Data.SqlClient.SqlConnection(global::QuickInterface.Properties.Settings.Default.DBABnch_LOCALConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[6])).CommandText = "TicketProcessingCache.MasterPullForCherwell";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[6])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[6])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[6])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LoadOldStaticData", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[6])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SkipToStepNo", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[6])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StopAtStepNo", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[6])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrintIt", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[6])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RunIt", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[6])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OnlyListSteps", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[7])).Connection = new global::System.Data.SqlClient.SqlConnection(global::QuickInterface.Properties.Settings.Default.DBABnch_LOCALConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[7])).CommandText = "UpdateDBABnchMetaData.PingServers";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[7])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[7])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[8])).Connection = new global::System.Data.SqlClient.SqlConnection(global::QuickInterface.Properties.Settings.Default.DBABnch_LOCALConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[8])).CommandText = "RunDaily.ReloadADInfo";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[8])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[8])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[9])).Connection = new global::System.Data.SqlClient.SqlConnection(global::QuickInterface.Properties.Settings.Default.DBABnch_LOCALConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[9])).CommandText = "DBABnchManagement.RepairLinkedServers";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[9])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[9])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[10])).Connection = new global::System.Data.SqlClient.SqlConnection(global::QuickInterface.Properties.Settings.Default.DBABnch_LOCALConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[10])).CommandText = "DBABnchManagement.RepairServerList";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[10])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[10])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[11] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[11])).Connection = new global::System.Data.SqlClient.SqlConnection(global::QuickInterface.Properties.Settings.Default.DBABnch_LOCALConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[11])).CommandText = "ExternalDataFromSQLServerCapture.Scripts";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[11])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[11])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[11])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LinkSvrNms", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[11])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DbNms", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[11])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SearchString", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[11])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TestIt", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[11])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LinkSvrNmsSep", global::System.Data.SqlDbType.NVarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[11])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DbNmsSep", global::System.Data.SqlDbType.NVarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[11])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Matches1Unmatched0", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[12] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[12])).Connection = new global::System.Data.SqlClient.SqlConnection(global::QuickInterface.Properties.Settings.Default.DBABnch_LOCALConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[12])).CommandText = "SQLServerUtilities.TestSQLServerConnection";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[12])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[12])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[12])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServerNm", global::System.Data.SqlDbType.NVarChar, 257, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[12])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SQLError", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.InputOutput, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[12])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SQLErrorNo", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.InputOutput, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[12])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SQLErrorInterpretation", global::System.Data.SqlDbType.NVarChar, 1000, global::System.Data.ParameterDirection.InputOutput, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int AddMissingLinkedServers(string LinkSvrNms, global::System.Nullable<bool> TestIt, string Note, string LinkSvrNmsSep, global::System.Nullable<bool> Matches1Unmatched0) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[0]));
            if ((LinkSvrNms == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(LinkSvrNms));
            }
            if ((TestIt.HasValue == true)) {
                command.Parameters[2].Value = ((bool)(TestIt.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Note == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(Note));
            }
            if ((LinkSvrNmsSep == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(LinkSvrNmsSep));
            }
            if ((Matches1Unmatched0.HasValue == true)) {
                command.Parameters[5].Value = ((bool)(Matches1Unmatched0.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int AddMissingRegisteredServers(global::System.Nullable<bool> TestIt) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[1]));
            if ((TestIt.HasValue == true)) {
                command.Parameters[1].Value = ((bool)(TestIt.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int AddServer(string ServerNm, string ServerDesc, global::System.Nullable<bool> TestIt) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[2]));
            if ((ServerNm == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(ServerNm));
            }
            if ((ServerDesc == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(ServerDesc));
            }
            if ((TestIt.HasValue == true)) {
                command.Parameters[3].Value = ((bool)(TestIt.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int ConfigureLocalServer(global::System.Nullable<bool> TestIt, global::System.Nullable<bool> AllColumns, global::System.Nullable<bool> OnlyNonDefaultSettings) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[3]));
            if ((TestIt.HasValue == true)) {
                command.Parameters[1].Value = ((bool)(TestIt.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((AllColumns.HasValue == true)) {
                command.Parameters[2].Value = ((bool)(AllColumns.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((OnlyNonDefaultSettings.HasValue == true)) {
                command.Parameters[3].Value = ((bool)(OnlyNonDefaultSettings.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int CreateLinkedServer(string ServerNm, string datasrcNm, string catalogNm, string Purpose, global::System.Nullable<bool> Force) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[4]));
            if ((ServerNm == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(ServerNm));
            }
            if ((datasrcNm == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(datasrcNm));
            }
            if ((catalogNm == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(catalogNm));
            }
            if ((Purpose == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(Purpose));
            }
            if ((Force.HasValue == true)) {
                command.Parameters[5].Value = ((bool)(Force.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int LiveMessage(string Message, string Parm1, string Parm2, string Parm3, string Parm4, string Parm5, string Parm6, string Parm7, string Parm8, string Parm9, string Parm10) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[5]));
            if ((Message == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(Message));
            }
            if ((Parm1 == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(Parm1));
            }
            if ((Parm2 == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(Parm2));
            }
            if ((Parm3 == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(Parm3));
            }
            if ((Parm4 == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(Parm4));
            }
            if ((Parm5 == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(Parm5));
            }
            if ((Parm6 == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(Parm6));
            }
            if ((Parm7 == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(Parm7));
            }
            if ((Parm8 == null)) {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[9].Value = ((string)(Parm8));
            }
            if ((Parm9 == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(Parm9));
            }
            if ((Parm10 == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(Parm10));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int MasterPullForCherwell(global::System.Nullable<bool> LoadOldStaticData, global::System.Nullable<int> SkipToStepNo, global::System.Nullable<int> StopAtStepNo, global::System.Nullable<bool> PrintIt, global::System.Nullable<bool> RunIt, global::System.Nullable<bool> OnlyListSteps) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[6]));
            if ((LoadOldStaticData.HasValue == true)) {
                command.Parameters[1].Value = ((bool)(LoadOldStaticData.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((SkipToStepNo.HasValue == true)) {
                command.Parameters[2].Value = ((int)(SkipToStepNo.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((StopAtStepNo.HasValue == true)) {
                command.Parameters[3].Value = ((int)(StopAtStepNo.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((PrintIt.HasValue == true)) {
                command.Parameters[4].Value = ((bool)(PrintIt.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((RunIt.HasValue == true)) {
                command.Parameters[5].Value = ((bool)(RunIt.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((OnlyListSteps.HasValue == true)) {
                command.Parameters[6].Value = ((bool)(OnlyListSteps.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int PingServers() {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[7]));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int ReloadADInfo() {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[8]));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int RepairLinkedServers() {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[9]));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int RepairServerList() {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[10]));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Scripts(string LinkSvrNms, string DbNms, string SearchString, global::System.Nullable<bool> TestIt, string LinkSvrNmsSep, string DbNmsSep, global::System.Nullable<bool> Matches1Unmatched0) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[11]));
            if ((LinkSvrNms == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(LinkSvrNms));
            }
            if ((DbNms == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(DbNms));
            }
            if ((SearchString == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(SearchString));
            }
            if ((TestIt.HasValue == true)) {
                command.Parameters[4].Value = ((bool)(TestIt.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((LinkSvrNmsSep == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(LinkSvrNmsSep));
            }
            if ((DbNmsSep == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(DbNmsSep));
            }
            if ((Matches1Unmatched0.HasValue == true)) {
                command.Parameters[7].Value = ((bool)(Matches1Unmatched0.Value));
            }
            else {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int TestSQLServerConnection(string ServerNm, ref string SQLError, ref global::System.Nullable<int> SQLErrorNo, ref string SQLErrorInterpretation) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[12]));
            if ((ServerNm == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(ServerNm));
            }
            if ((SQLError == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(SQLError));
            }
            if ((SQLErrorNo.HasValue == true)) {
                command.Parameters[3].Value = ((int)(SQLErrorNo.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((SQLErrorInterpretation == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(SQLErrorInterpretation));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((command.Parameters[2].Value == null) 
                        || (command.Parameters[2].Value.GetType() == typeof(global::System.DBNull)))) {
                SQLError = null;
            }
            else {
                SQLError = ((string)(command.Parameters[2].Value));
            }
            if (((command.Parameters[3].Value == null) 
                        || (command.Parameters[3].Value.GetType() == typeof(global::System.DBNull)))) {
                SQLErrorNo = new global::System.Nullable<int>();
            }
            else {
                SQLErrorNo = new global::System.Nullable<int>(((int)(command.Parameters[3].Value)));
            }
            if (((command.Parameters[4].Value == null) 
                        || (command.Parameters[4].Value.GetType() == typeof(global::System.DBNull)))) {
                SQLErrorInterpretation = null;
            }
            else {
                SQLErrorInterpretation = ((string)(command.Parameters[4].Value));
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private ClientsTableAdapter _clientsTableAdapter;
        
        private DatabasesTableAdapter _databasesTableAdapter;
        
        private DomainsTableAdapter _domainsTableAdapter;
        
        private ServerAliasesTableAdapter _serverAliasesTableAdapter;
        
        private ServersTableAdapter _serversTableAdapter;
        
        private UsersTableAdapter _usersTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ClientsTableAdapter ClientsTableAdapter {
            get {
                return this._clientsTableAdapter;
            }
            set {
                this._clientsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public DatabasesTableAdapter DatabasesTableAdapter {
            get {
                return this._databasesTableAdapter;
            }
            set {
                this._databasesTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public DomainsTableAdapter DomainsTableAdapter {
            get {
                return this._domainsTableAdapter;
            }
            set {
                this._domainsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ServerAliasesTableAdapter ServerAliasesTableAdapter {
            get {
                return this._serverAliasesTableAdapter;
            }
            set {
                this._serverAliasesTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ServersTableAdapter ServersTableAdapter {
            get {
                return this._serversTableAdapter;
            }
            set {
                this._serversTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public UsersTableAdapter UsersTableAdapter {
            get {
                return this._usersTableAdapter;
            }
            set {
                this._usersTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._clientsTableAdapter != null) 
                            && (this._clientsTableAdapter.Connection != null))) {
                    return this._clientsTableAdapter.Connection;
                }
                if (((this._databasesTableAdapter != null) 
                            && (this._databasesTableAdapter.Connection != null))) {
                    return this._databasesTableAdapter.Connection;
                }
                if (((this._domainsTableAdapter != null) 
                            && (this._domainsTableAdapter.Connection != null))) {
                    return this._domainsTableAdapter.Connection;
                }
                if (((this._serverAliasesTableAdapter != null) 
                            && (this._serverAliasesTableAdapter.Connection != null))) {
                    return this._serverAliasesTableAdapter.Connection;
                }
                if (((this._serversTableAdapter != null) 
                            && (this._serversTableAdapter.Connection != null))) {
                    return this._serversTableAdapter.Connection;
                }
                if (((this._usersTableAdapter != null) 
                            && (this._usersTableAdapter.Connection != null))) {
                    return this._usersTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._clientsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._databasesTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._domainsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._serverAliasesTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._serversTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._usersTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(DBABnch_LOCALDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._usersTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Users.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._usersTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._serversTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Servers.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    this.SortSelfReferenceRows(updatedRows, dataSet.Relations["FK__Server__FedFromS__0BE8567D"], false);
                    // Note: More than one self-referenced relation found.  The generated code may not work correctly.
                    this.SortSelfReferenceRows(updatedRows, dataSet.Relations["FK__Server__FeedsInt__0CDC7AB6"], false);
                    // Note: More than one self-referenced relation found.  The generated code may not work correctly.
                    this.SortSelfReferenceRows(updatedRows, dataSet.Relations["FK_DBLinkServer_OnServer"], false);
                    result = (result + this._serversTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._clientsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Clients.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    this.SortSelfReferenceRows(updatedRows, dataSet.Relations["FK_Client_Of_ParentClient"], false);
                    result = (result + this._clientsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._databasesTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Databases.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._databasesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._domainsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Domains.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._domainsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._serverAliasesTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ServerAliases.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._serverAliasesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(DBABnch_LOCALDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._usersTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Users.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._usersTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._serversTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Servers.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    this.SortSelfReferenceRows(addedRows, dataSet.Relations["FK__Server__FedFromS__0BE8567D"], false);
                    // Note: More than one self-referenced relation found.  The generated code may not work correctly.
                    this.SortSelfReferenceRows(addedRows, dataSet.Relations["FK__Server__FeedsInt__0CDC7AB6"], false);
                    // Note: More than one self-referenced relation found.  The generated code may not work correctly.
                    this.SortSelfReferenceRows(addedRows, dataSet.Relations["FK_DBLinkServer_OnServer"], false);
                    result = (result + this._serversTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._clientsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Clients.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    this.SortSelfReferenceRows(addedRows, dataSet.Relations["FK_Client_Of_ParentClient"], false);
                    result = (result + this._clientsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._databasesTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Databases.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._databasesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._domainsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Domains.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._domainsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._serverAliasesTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ServerAliases.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._serverAliasesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(DBABnch_LOCALDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._serverAliasesTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ServerAliases.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._serverAliasesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._domainsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Domains.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._domainsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._databasesTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Databases.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._databasesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._clientsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Clients.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    this.SortSelfReferenceRows(deletedRows, dataSet.Relations["FK_Client_Of_ParentClient"], true);
                    result = (result + this._clientsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._serversTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Servers.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    this.SortSelfReferenceRows(deletedRows, dataSet.Relations["FK__Server__FedFromS__0BE8567D"], true);
                    // Note: More than one self-referenced relation found.  The generated code may not work correctly.
                    this.SortSelfReferenceRows(deletedRows, dataSet.Relations["FK__Server__FeedsInt__0CDC7AB6"], true);
                    // Note: More than one self-referenced relation found.  The generated code may not work correctly.
                    this.SortSelfReferenceRows(deletedRows, dataSet.Relations["FK_DBLinkServer_OnServer"], true);
                    result = (result + this._serversTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._usersTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Users.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._usersTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(DBABnch_LOCALDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._clientsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._clientsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._databasesTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._databasesTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._domainsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._domainsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._serverAliasesTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._serverAliasesTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._serversTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._serversTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._usersTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._usersTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._clientsTableAdapter != null)) {
                    revertConnections.Add(this._clientsTableAdapter, this._clientsTableAdapter.Connection);
                    this._clientsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._clientsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._clientsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._clientsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._clientsTableAdapter.Adapter);
                    }
                }
                if ((this._databasesTableAdapter != null)) {
                    revertConnections.Add(this._databasesTableAdapter, this._databasesTableAdapter.Connection);
                    this._databasesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._databasesTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._databasesTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._databasesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._databasesTableAdapter.Adapter);
                    }
                }
                if ((this._domainsTableAdapter != null)) {
                    revertConnections.Add(this._domainsTableAdapter, this._domainsTableAdapter.Connection);
                    this._domainsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._domainsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._domainsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._domainsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._domainsTableAdapter.Adapter);
                    }
                }
                if ((this._serverAliasesTableAdapter != null)) {
                    revertConnections.Add(this._serverAliasesTableAdapter, this._serverAliasesTableAdapter.Connection);
                    this._serverAliasesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._serverAliasesTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._serverAliasesTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._serverAliasesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._serverAliasesTableAdapter.Adapter);
                    }
                }
                if ((this._serversTableAdapter != null)) {
                    revertConnections.Add(this._serversTableAdapter, this._serversTableAdapter.Connection);
                    this._serversTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._serversTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._serversTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._serversTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._serversTableAdapter.Adapter);
                    }
                }
                if ((this._usersTableAdapter != null)) {
                    revertConnections.Add(this._usersTableAdapter, this._usersTableAdapter.Connection);
                    this._usersTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._usersTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._usersTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._usersTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._usersTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._clientsTableAdapter != null)) {
                    this._clientsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._clientsTableAdapter]));
                    this._clientsTableAdapter.Transaction = null;
                }
                if ((this._databasesTableAdapter != null)) {
                    this._databasesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._databasesTableAdapter]));
                    this._databasesTableAdapter.Transaction = null;
                }
                if ((this._domainsTableAdapter != null)) {
                    this._domainsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._domainsTableAdapter]));
                    this._domainsTableAdapter.Transaction = null;
                }
                if ((this._serverAliasesTableAdapter != null)) {
                    this._serverAliasesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._serverAliasesTableAdapter]));
                    this._serverAliasesTableAdapter.Transaction = null;
                }
                if ((this._serversTableAdapter != null)) {
                    this._serversTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._serversTableAdapter]));
                    this._serversTableAdapter.Transaction = null;
                }
                if ((this._usersTableAdapter != null)) {
                    this._usersTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._usersTableAdapter]));
                    this._usersTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591